{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"bundle": {
			"\"{0}\" has fingerprint \"{1}\"": "\"{0}\" のフィンガープリントは \"{1}\" です",
			"A branch named \"{0}\" already exists": "A branch named \"{0}\" already exists",
			"Absolute paths not supported in \"git.scanRepositories\" setting.": "\"git.scanRepositories\" 設定は絶対パスをサポートしていません。",
			"Add Remote": "Add Remote",
			"Add a new remote...": "新しいリモートを追加...",
			"Add remote from URL": "URL からリモートを追加する",
			"Add remote from {0}": "{0} からリモートを追加する",
			"Add to Workspace": "Add to Workspace",
			"Always": "Always",
			"Always Pull": "常にプル",
			"Are you sure you want to DELETE {0} files?\r\nThis is IRREVERSIBLE!\r\nThese files will be FOREVER LOST if you proceed.": "{0} 個のファイルを削除しますか?\r\nこれは元に戻すことができません。\r\n続行すると、このファイルは完全に失われます。",
			"Are you sure you want to DELETE {0}?\r\nThis is IRREVERSIBLE!\r\nThis file will be FOREVER LOST if you proceed.": "{0} を削除しますか?\r\nこれは元に戻すことはできません。\r\n続行すると、このファイルは完全に失われます。",
			"Are you sure you want to continue connecting?": "接続を続行しますか?",
			"Are you sure you want to create an empty commit?": "空のコミットを生成しますか?",
			"Are you sure you want to discard ALL changes in {0} files?\r\nThis is IRREVERSIBLE!\r\nYour current working set will be FOREVER LOST if you proceed.": "{0} 個のファイルのすべての変更を破棄してもよろしいですか?\r\nこれは元に戻すことができません。\r\n続行すると、現在のワーキング セットは完全に失われます。",
			"Are you sure you want to discard changes in {0} files?": "{0} 個のファイルの変更内容を破棄しますか?",
			"Are you sure you want to discard changes in {0}?": "{0} の変更を破棄しますか?",
			"Are you sure you want to drop ALL stashes? There are {0} stashes that will be subject to pruning, and MAY BE IMPOSSIBLE TO RECOVER.": "すべてのスタッシュを削除しますか? 削除の対象となる可能性のある {0} 個のスタッシュがあり、それらは回復できない可能性があります。",
			"Are you sure you want to drop ALL stashes? There is 1 stash that will be subject to pruning, and MAY BE IMPOSSIBLE TO RECOVER.": "すべてのスタッシュを削除しますか? 削除の対象となる可能性のある 1 個のスタッシュがあり、それらは回復できない可能性があります。",
			"Are you sure you want to drop the stash: {0}?": "スタッシュ {0} を削除しますか?",
			"Are you sure you want to restore {0} files?": "{0} 個のファイルを復元しますか?",
			"Are you sure you want to restore {0}?": "{0} を復元しますか?",
			"Are you sure you want to stage {0} files with merge conflicts?": "マージの競合がある {0} 個のファイルをステージしてもよろしいですか?",
			"Are you sure you want to stage {0} with merge conflicts?": "マージの競合がある {0} をステージしてもよろしいですか?",
			"Ask Me Later": "Ask Me Later",
			"Branch name": "ブランチ名",
			"Branch name needs to match regex: {0}": "ブランチ名は次の正規表現に一致する必要があります: {0}",
			"Can't push refs to remote. Try running \"Pull\" first to integrate your changes.": "Can't push refs to remote. Try running \"Pull\" first to integrate your changes.",
			"Can't undo because HEAD doesn't point to any commit.": "HEAD が任意のコミットを明示しないため、元に戻すことはできません。",
			"Changes": "Changes",
			"Checkout detached...": "チェックアウトがデタッチされました...",
			"Choose Folder...": "Choose Folder...",
			"Choose a folder to clone {0} into": "{0} を複製するフォルダーを選択してください",
			"Choose a repository": "Choose a repository",
			"Clone from URL": "Clone from URL",
			"Clone from {0}": "Clone from {0}",
			"Cloning git repository \"{0}\"...": "Cloning git repository \"{0}\"...",
			"Commit": "Commit",
			"Commit & Push Changes": "変更点をコミットしてプッシュ",
			"Commit & Sync Changes": "変更点をコミットして同期",
			"Commit Anyway": "Commit Anyway",
			"Commit Changes": "Commit Changes",
			"Commit Changes to New Branch": "新しいブランチに変更をコミットする",
			"Commit Hash": "Commit Hash",
			"Commit Staged Changes": "Commit Staged Changes",
			"Commit message": "コミット メッセージ",
			"Commit operation was cancelled due to empty commit message.": "コミット メッセージが空だったため、コミット操作がキャンセルされました。",
			"Commit to New Branch & Push Changes": "新しいブランチにコミットして変更をプッシュする",
			"Commit to New Branch & Synchronize Changes": "新しいブランチへのコミットと変更の同期",
			"Commit to a New Branch": "新しいブランチにコミットする",
			"Commits without verification are not allowed, please enable them with the \"git.allowNoVerifyCommit\" setting.": "Commits without verification are not allowed, please enable them with the \"git.allowNoVerifyCommit\" setting.",
			"Committing & Pushing Changes...": "変更点をコミットしてプッシュしています...",
			"Committing & Synchronizing Changes...": "コミットをして変更を同期しています...",
			"Committing Changes to New Branch...": "新しいブランチに変更をコミットしています...",
			"Committing Changes...": "Committing Changes...",
			"Committing to New Branch & Pushing Changes...": "新しいブランチにコミットして変更をプッシュしています...",
			"Committing to New Branch & Synchronizing Changes...": "新しいブランチへのコミットと変更を同期しています...",
			"Conflict: Added By Them": "競合: 他者が追加",
			"Conflict: Added By Us": "競合: こちらが追加",
			"Conflict: Both Added": "Conflict: Both Added",
			"Conflict: Both Deleted": "Conflict: Both Deleted",
			"Conflict: Both Modified": "Conflict: Both Modified",
			"Conflict: Deleted By Them": "競合: 他者が削除",
			"Conflict: Deleted By Us": "競合: こちらが削除",
			"Continue Rebase": "Continue Rebase",
			"Continuing Rebase...": "リベースを続行しています...",
			"Could not clone your repository as Git is not installed.": "Git がインストールされていないため、リポジトリをクローンできませんでした。",
			"Create Empty Commit": "Create Empty Commit",
			"Create new branch from...": "新しいブランチの作成元...",
			"Create new branch...": "新しいブランチの作成...",
			"Current": "Current",
			"Current commit message only contains whitespace characters": "現在のコミット メッセージには空白文字のみが含めています",
			"Delete Branch": "ブランチの削除",
			"Delete File": "Delete File",
			"Delete Files": "Delete Files",
			"Delete file": "ファイルを削除",
			"Deleted": "Deleted",
			"Discard 1 File": "Discard 1 File",
			"Discard 1 Tracked File": "1 つの追跡ファイルを破棄",
			"Discard All {0} Files": "{0} 個のファイルをすべて破棄",
			"Discard Changes": "Discard Changes",
			"Discard {0} Tracked Files": "{0} 個の追跡ファイルを破棄",
			"Don't Pull": "プルしない",
			"Don't Show Again": "今後は表示しない",
			"Download Git": "Download Git",
			"Email": "Email",
			"Failed to authenticate to git remote.": "Git リモートに対して認証できませんでした。",
			"Failed to authenticate to git remote:\r\n\r\n{0}": "Git リモートに対して認証できませんでした:\r\n\r\n{0}",
			"File \"{0}\" was deleted by them and modified by us.\r\n\r\nWhat would you like to do?": "ファイル \"{0}\" は、他者が削除し、こちらが変更しました。\r\n\r\nどのように処理しますか?",
			"File \"{0}\" was deleted by us and modified by them.\r\n\r\nWhat would you like to do?": "ファイル \"{0}\" は、こちらが削除し、他者が変更しました。\r\n\r\nどのように処理しますか?",
			"Force Checkout": "Force Checkout",
			"Force push is not allowed, please enable it with the \"git.allowForcePush\" setting.": "Force push is not allowed, please enable it with the \"git.allowForcePush\" setting.",
			"Git History": "Git History",
			"Git error": "Git error",
			"Git not found. Install it or configure it using the \"git.path\" setting.": "Git not found. Install it or configure it using the \"git.path\" setting.",
			"Git: {0}": "Git: {0}",
			"HEAD version of \"{0}\" is not available.": "\"{0}\" の HEAD バージョンは利用できません。",
			"Ignored": "Ignored",
			"Incoming": "Incoming",
			"Index Added": "インデックスの追加",
			"Index Copied": "インデックスをコピー",
			"Index Deleted": "Index Deleted",
			"Index Modified": "Index Modified",
			"Index Renamed": "インデックスの名前変更",
			"Initialize Repository": "Initialize Repository",
			"Intent to Add": "Intent to Add",
			"Invalid branch name": "Invalid branch name",
			"It looks like the current branch \"{0}\" might have been rebased. Are you sure you still want to pull into it?": "It looks like the current branch \"{0}\" might have been rebased. Are you sure you still want to pull into it?",
			"It looks like the current branch might have been rebased. Are you sure you still want to pull into it?": "現在のブランチがリベースされた可能性があります。そこへプルしますか?",
			"It's not possible to change the commit message in the middle of a rebase. Please complete the rebase operation and use interactive rebase instead.": "リベースの最中にコミット メッセージは変更できません。リベースの操作を終了してから、代わりに interactive rebase を使用してください。",
			"Keep Our Version": "Keep Our Version",
			"Keep Their Version": "Keep Their Version",
			"Learn More": "Learn More",
			"Log level: {0}": "Log level: {0}",
			"Make sure you configure your \"user.name\" and \"user.email\" in git.": "Make sure you configure your \"user.name\" and \"user.email\" in git.",
			"Merge Changes": "Merge Changes",
			"Message": "メッセージ",
			"Message (commit on \"{0}\")": "Message (commit on \"{0}\")",
			"Message ({0} to commit on \"{1}\")": "メッセージ (\"{1}\" でコミットするための{0})",
			"Message ({0} to commit)": "メッセージ (コミットするための {0})",
			"Modified": "Modified",
			"Never": "Never",
			"No": "いいえ",
			"No rebase in progress.": "進行中のリベースはありません。",
			"OK": "OK",
			"OK, Don't Ask Again": "今後は確認しない",
			"OK, Don't Show Again": "OK、今後は表示しない",
			"Open": "Open",
			"Open Comparison": "Open Comparison",
			"Open Git Log": "Open Git Log",
			"Open Merge": "Open Merge",
			"Open Repository": "リポジトリを開く",
			"Open in New Window": "新しいウィンドウで開く",
			"Optionally provide a stash message": "必要に応じてスタッシュ メッセージを提示する",
			"Passphrase": "Passphrase",
			"Pick a branch to pull from": "プル元のブランチを選択",
			"Pick a provider to publish the branch \"{0}\" to:": "ブランチ \"{0}\" を以下へ発行するプロバイダーを選択する:",
			"Pick a remote to publish the branch \"{0}\" to:": "Pick a remote to publish the branch \"{0}\" to:",
			"Pick a remote to pull the branch from": "リモートを選んで、ブランチを次からプルします",
			"Pick a remote to remove": "削除するリモートを選択",
			"Pick a stash to apply": "適用するスタッシュを選択してください",
			"Pick a stash to drop": "ドロップするスタッシュを選択する",
			"Pick a stash to pop": "ポップするスタッシュを選択する",
			"Pick workspace folder to initialize git repo in": "Git リポジトリを初期化するワークスペース フォルダーを選択してください",
			"Please check out a branch to push to a remote.": "リモートにプッシュするブランチをチェックアウトしてください。",
			"Please clean your repository working tree before checkout.": "チェックアウトの前に、リポジトリの作業ツリーを消去してください。",
			"Please provide a commit message": "コミット メッセージを入力してください",
			"Please provide a message to annotate the tag": "注釈付きタグにつけるメッセージを入力してください",
			"Please provide a new branch name": "新しいブランチ名を入力してください",
			"Please provide a remote name": "リモート名を入力してください。",
			"Please provide a tag name": "タグ名を入力してください",
			"Please provide the commit hash": "コミット ハッシュを指定してください",
			"Publish Branch": "Publish Branch",
			"Publish Branch/{Locked=\"Branch\"}\r\nDo not translate \"Branch\" as it is a git term": "Branch を発行",
			"Publish to {0}": "{0} に発行する",
			"Publish to...": "以下に発行する...",
			"Publishing Branch.../{Locked=\"Branch\"}\r\nDo not translate \"Branch\" as it is a git term": "Publishing Branch...",
			"Pull": "Pull",
			"Pull {0} and push {1} commits between {2}/{3}": "{2}/{3} の間で {0} 件のコミットをプルし、{1} 件のコミットをプッシュします",
			"Pull {0} commits from {1}/{2}": "{1}/{2} から {0} 件のコミットをプルします",
			"Push {0} commits to {1}/{2}": "{1}/{2} に {0} 件のコミットをプッシュします",
			"Rebasing": "リベースしています",
			"Remote \"{0}\" already exists.": "Remote \"{0}\" already exists.",
			"Remote branch at {0}": "{0} でのリモート ブランチ",
			"Remote name": "Remote name",
			"Remote name format invalid": "リモート名の形式が無効です",
			"Restore file": "Restore file",
			"Restore files": "Restore files",
			"Save All & Commit": "すべてのコミットを保存",
			"Save All & Stash": "すべてを保存してスタッシュする",
			"Select a branch or tag to checkout": "チェックアウトするブランチまたはタグを選択します",
			"Select a branch or tag to checkout in detached mode": "デタッチ モードでチェックアウトするブランチまたはタグを選択します",
			"Select a branch to delete": "削除するブランチの選択",
			"Select a branch to merge from": "マージ元のブランチを選択",
			"Select a branch to rebase onto": "リベース先のブランチを選択",
			"Select a ref to create the \"{0}\" branch from": "\"{0}\" ブランチの作成元 ref を選択",
			"Select a remote to fetch": "リモートを選択して取得",
			"Select a tag to delete": "削除するタグを選択する",
			"Select as Repository Destination": "Select as Repository Destination",
			"Show Command Output": "Show Command Output",
			"Skipped found git in: \"{0}\"": "Git のスキップが検出されました: \"{0}\"",
			"Staged Changes": "Staged Changes",
			"Stash & Checkout": "一時退避してチェックアウト",
			"Stash Anyway": "Stash Anyway",
			"Stash message": "Stash message",
			"Stashed Changes": "一時退避された変更",
			"Successfully pushed.": "正常にプッシュされました。",
			"Synchronize Changes": "Synchronize Changes",
			"Synchronizing Changes...": "Synchronizing Changes...",
			"Syncing. Cancelling may cause serious damages to the repository": "同期中です。キャンセルすると、リポジトリに重大な損傷を与える可能性があります",
			"Tag at {0}": "{0} のタグ",
			"Tag name": "タグ名",
			"The \"{0}\" repository has {1} submodules which won't be opened automatically. You can still open each one individually by opening a file within.": "The \"{0}\" repository has {1} submodules which won't be opened automatically. You can still open each one individually by opening a file within.",
			"The branch \"{0}\" has no remote branch. Would you like to publish this branch?": "The branch \"{0}\" has no remote branch. Would you like to publish this branch?",
			"The branch \"{0}\" is not fully merged. Delete anyway?": "The branch \"{0}\" is not fully merged. Delete anyway?",
			"The following file has unsaved changes which won't be included in the commit if you proceed: {0}.\r\n\r\nWould you like to save it before committing?": "次のファイルには保存されていない変更があり、続行するとコミットに含まれません: {0}。\r\n\r\nコミットする前に保存しますか?",
			"The following file has unsaved changes which won't be included in the stash if you proceed: {0}.\r\n\r\nWould you like to save it before stashing?": "次のファイルには保存されていない変更があり、続行するとスタッシュに含められません: {0}。\r\n\r\nスタッシュする前に保存しますか?",
			"The following untracked file will be DELETED FROM DISK if discarded: {0}.": "破棄すると次の未追跡ファイルがディスクから削除されます: {0}。",
			"The git repository at \"{0}\" has too many active changes, only a subset of Git features will be enabled.": "\"{0}\" のGit リポジトリにアクティブな変更が多いため、 Git 機能の一部のみが有効になります。",
			"The last commit was a merge commit. Are you sure you want to undo it?": "最後のコミットはマージ コミットでした。元に戻しますか?",
			"The new branch will be \"{0}\"": "The new branch will be \"{0}\"",
			"There are known issues with the installed Git \"{0}\". Please update to Git >= 2.27 for the git features to work correctly.": "There are known issues with the installed Git \"{0}\". Please update to Git >= 2.27 for the git features to work correctly.",
			"There are merge conflicts. Resolve them before committing.": "マージの競合があります。コミットする前にこれを解決してください。",
			"There are no available repositories": "利用可能なリポジトリがありません",
			"There are no changes to commit.": "コミットする必要のある変更はありません。",
			"There are no changes to stash.": "スタッシュする変更がありません。",
			"There are no staged changes to commit.\r\n\r\nWould you like to stage all your changes and commit them directly?": "ステージされている変更がなく、コミットできません。\r\n\r\nすべての変更をステージして、直接コミットしますか?",
			"There are no stashes in the repository.": "リポジトリ内にスタッシュはありません。",
			"There are {0} unsaved files.\r\n\r\nWould you like to save them before committing?": "{0} 個の保存されていないファイルがあります。\r\n\r\nコミット前に保存しますか?",
			"There are {0} unsaved files.\r\n\r\nWould you like to save them before stashing?": "{0} 個の保存されていないファイルがあります。\r\n\r\nスタッシュする前に保存しますか?",
			"There are {0} untracked files which will be DELETED FROM DISK if discarded.": "破棄すると {0} 個の未追跡ファイルがディスクから削除されます。",
			"There were merge conflicts while applying the stash.": "スタッシュを適用している間に、マージの競合がありました。",
			"This action will pull and push commits from and to \"{0}/{1}\".": "このアクションは、\"{0}/{1}\" との間でコミットをプルおよびプッシュします。",
			"This repository has no remotes configured to fetch from.": "リポジトリには、フェッチ元として構成されているリモートがありません。",
			"This repository has no tags.": "このリポジトリにはタグがありません。",
			"This will DELETE {0} untracked files!\r\nThis is IRREVERSIBLE!\r\nThese files will be FOREVER LOST.": "{0} 個の追跡されていないファイルが削除されます。\r\n元に戻すことはできません。\r\nこれらのファイルは完全に失われます。",
			"This will create a Git repository in \"{0}\". Are you sure you want to continue?": "This will create a Git repository in \"{0}\". Are you sure you want to continue?",
			"Too many changes were detected. Only the first {0} changes will be shown below.": "検出された変更が多すぎます。最初の {0} の変更のみが下に表示されます。",
			"Unable to automatically open the git repository at \"{0}\". To open that git repository, open it directly as a folder in VS Code.": "Unable to automatically open the git repository at \"{0}\". To open that git repository, open it directly as a folder in VS Code.",
			"Uncommitted Changes": "コミットされていない変更",
			"Undo merge commit": "Undo merge commit",
			"Untracked": "Untracked",
			"Untracked Changes": "Untracked Changes",
			"Update Git": "Git の更新",
			"Using git \"{0}\" from \"{1}\"": "Using git \"{0}\" from \"{1}\"",
			"Validating found git in: \"{0}\"": "Validating found git in: \"{0}\"",
			"Would you like Code to [periodically run \"git fetch\"]({0})?": "Would you like Code to [periodically run \"git fetch\"]({0})?",
			"Would you like to add \"{0}\" to .gitignore?": "Would you like to add \"{0}\" to .gitignore?",
			"Would you like to open the cloned repository, or add it to the current workspace?": "複製したリポジトリを開きますか? または現在のワークスペースに追加しますか?",
			"Would you like to open the cloned repository?": "クローンしたリポジトリを開きますか?",
			"Would you like to open the initialized repository, or add it to the current workspace?": "初期化済みのリポジトリを開きますか? または現在のワークスペースへ追加しますか?",
			"Would you like to open the initialized repository?": "初期化済みのリポジトリを開きますか?",
			"Yes": "Yes",
			"Yes, Don't Show Again": "はい、今後は表示しません",
			"You": "自分",
			"You are about to commit your changes without verification, this skips pre-commit hooks and can be undesirable.\r\n\r\nAre you sure to continue?": "確認せずに変更をコミットしようとしています。これは、コミット前のフックをスキップするため、望ましくない場合があります。\r\n\r\n続行しますか?",
			"You are about to force push your changes, this can be destructive and could inadvertently overwrite changes made by others.\r\n\r\nAre you sure to continue?": "変更の強制プッシュを行おうとしていますが、これは破壊的なことがあり、他人の変更を誤って上書きする可能性があります。\r\n\r\n続行しますか?",
			"You are trying to commit to a protected branch and you might not have permission to push your commits to the remote.\r\n\r\nHow would you like to proceed?": "保護されたブランチにコミットしようとしていますが、コミットをリモートにプッシュするアクセス許可がない可能性があります。\r\n\r\n続行しますか?",
			"You seem to have git \"{0}\" installed. Code works best with git >= 2": "You seem to have git \"{0}\" installed. Code works best with git >= 2",
			"Your local changes would be overwritten by checkout.": "ローカルの変更は、チェックアウトによって上書きされます。",
			"Your repository has no remotes configured to publish to.": "リポジトリには、発行先として構成されているリモートがありません。",
			"Your repository has no remotes configured to pull from.": "リポジトリには、プル元として構成されているリモートがありません。",
			"Your repository has no remotes configured to push to.": "リポジトリには、プッシュ先として構成されているリモートがありません。",
			"Your repository has no remotes.": "リポジトリにリモートが含まれていません。",
			"no": "no",
			"yes": "yes",
			"{0}\r\n\r\nThis is IRREVERSIBLE, your current working set will be FOREVER LOST.": "{0}\r\n\r\nこの変更は元に戻すことはできません。現在のワーキング セットは永久に失われます。",
			"{0} (Deleted)": "{0} (Deleted)",
			"{0} (Index)": "{0} (インデックス)",
			"{0} (Ours)": "{0} (Ours)",
			"{0} (Theirs)": "{0} (Theirs)",
			"{0} (Untracked)": "{0} (未追跡)",
			"{0} (Working Tree)": "{0} (Working Tree)",
			"{0} ({1})": "{0} ({1})",
			"{0} ({1}) ↔ {0} ({2})": "{0} ({1}) ↔ {0} ({2})",
			"{0} Commit": "{0} Commit",
			"{0} Commit & Push": "{0} コミットしてプッシュ",
			"{0} Commit & Sync": "{0} コミットして同期",
			"{0} Continue": "{0} Continue",
			"{0} Fetch all remotes": "{0} すべてのリモートを取得",
			"{0} Publish Branch/{Locked=\"Branch\"}\r\nDo not translate \"Branch\" as it is a git term": "{0} Branch の発行",
			"{0} Sync Changes{1}{2}": "{0} Sync Changes{1}{2}",
			"{0} characters left in current line": "現在の行で残り {0} 文字",
			"{0} characters over {1} in current line": "現在の行で {1} から {0} 文字オーバー",
			"{0} ↔ {1}": "{0} ↔ {1}",
			"{0}, Checkout branch/tag...": "{0}, Checkout branch/tag..."
		},
		"package": {
			"colors.added": "追加したリソースの配色。",
			"colors.conflict": "リソースが競合する場合の配色",
			"colors.deleted": "リソースを検出した場合の配色",
			"colors.ignored": "リソースを無視する場合の配色",
			"colors.modified": "リソースを改変した場合の配色",
			"colors.renamed": "名前変更またはコピーされたリソースの色。",
			"colors.stageDeleted": "ステージングされた削除済みリソースの色。",
			"colors.stageModified": "ステージングされた変更済みリソースの色。",
			"colors.submodule": "サブモジュールの配色。",
			"colors.untracked": "リソースを追跡しない場合の配色",
			"command.addRemote": "Add Remote...",
			"command.api.getRemoteSources": "Get Remote Sources",
			"command.api.getRepositories": "Get Repositories",
			"command.api.getRepositoryState": "Get Repository State",
			"command.branch": "Create Branch...",
			"command.branchFrom": "Create Branch From...",
			"command.checkout": "Checkout to...",
			"command.checkoutDetached": "Checkout to (Detached)...",
			"command.cherryPick": "Cherry Pick...",
			"command.clean": "Discard Changes",
			"command.cleanAll": "Discard All Changes",
			"command.cleanAllTracked": "変更履歴をすべて破棄",
			"command.cleanAllUntracked": "追跡対象外のすべての変更を破棄",
			"command.clone": "Clone",
			"command.cloneRecursive": "Clone (Recursive)",
			"command.close": "Close Repository",
			"command.closeAllDiffEditors": "すべての差分エディターを閉じる",
			"command.commit": "Commit",
			"command.commitAll": "Commit All",
			"command.commitAllAmend": "Commit All (Amend)",
			"command.commitAllAmendNoVerify": "すべてコミット (修正、確認なし)",
			"command.commitAllNoVerify": "すべてコミット (確認なし)",
			"command.commitAllSigned": "すべてコミット (Signed Off)",
			"command.commitAllSignedNoVerify": "すべてコミット (サインオフ、確認なし)",
			"command.commitEmpty": "Commit Empty",
			"command.commitEmptyNoVerify": "空のコミット (確認なし)",
			"command.commitMessageAccept": "Accept Commit Message",
			"command.commitMessageDiscard": "Discard Commit Message",
			"command.commitNoVerify": "Commit (No Verify)",
			"command.commitStaged": "Commit Staged",
			"command.commitStagedAmend": "Commit Staged (Amend)",
			"command.commitStagedAmendNoVerify": "ステージング済みをコミット (修正、確認なし)",
			"command.commitStagedNoVerify": "ステージング済みをコミット (確認なし)",
			"command.commitStagedSigned": "コミットしてステージング (サインオフ)",
			"command.commitStagedSignedNoVerify": "ステージング済みをコミット (サインオフ、確認なし)",
			"command.createTag": "Create Tag",
			"command.deleteBranch": "Delete Branch...",
			"command.deleteTag": "Delete Tag",
			"command.fetch": "Fetch",
			"command.fetchAll": "すべてのリモートからフェッチ",
			"command.fetchPrune": "Fetch (Prune)",
			"command.git.acceptMerge": "Complete Merge",
			"command.git.openMergeEditor": "マージ エディターで解決",
			"command.git.runGitMerge": "Git とのコンピューティングの競合",
			"command.git.runGitMergeDiff3": "Git とのコンピューティングの競合 (Diff3)",
			"command.ignore": "Add to .gitignore",
			"command.init": "Initialize Repository",
			"command.merge": "Merge Branch...",
			"command.mergeAbort": "Abort Merge",
			"command.openAllChanges": "Open All Changes",
			"command.openChange": "Open Changes",
			"command.openFile": "Open File",
			"command.openHEADFile": "Open File (HEAD)",
			"command.openRepository": "Open Repository",
			"command.publish": "Publish Branch...",
			"command.pull": "Pull",
			"command.pullFrom": "Pull from...",
			"command.pullRebase": "Pull (Rebase)",
			"command.push": "Push",
			"command.pushFollowTags": "Push (Follow Tags)",
			"command.pushFollowTagsForce": "プッシュ (タグをフォロー、強制)",
			"command.pushForce": "Push (Force)",
			"command.pushTags": "Push Tags",
			"command.pushTo": "Push to...",
			"command.pushToForce": "Push to... (Force)",
			"command.rebase": "Rebase Branch...",
			"command.rebaseAbort": "Abort Rebase",
			"command.refresh": "Refresh",
			"command.removeRemote": "Remove Remote",
			"command.rename": "Rename",
			"command.renameBranch": "Rename Branch...",
			"command.restoreCommitTemplate": "Restore Commit Template",
			"command.revealFileInOS.linux": "Open Containing Folder",
			"command.revealFileInOS.mac": "Reveal in Finder",
			"command.revealFileInOS.windows": "エクスプローラーで表示する",
			"command.revealInExplorer": "エクスプローラー ビューで表示",
			"command.revertChange": "Revert Change",
			"command.revertSelectedRanges": "Revert Selected Ranges",
			"command.showOutput": "Show Git Output",
			"command.stage": "Stage Changes",
			"command.stageAll": "Stage All Changes",
			"command.stageAllMerge": "すべてのマージ変更をステージする",
			"command.stageAllTracked": "すべての変更履歴をステージングする",
			"command.stageAllUntracked": "すべての追跡対象外の変更のステージング",
			"command.stageChange": "Stage Change",
			"command.stageSelectedRanges": "Stage Selected Ranges",
			"command.stash": "Stash",
			"command.stashApply": "Apply Stash...",
			"command.stashApplyLatest": "Apply Latest Stash",
			"command.stashDrop": "Drop Stash...",
			"command.stashDropAll": "Drop All Stashes...",
			"command.stashIncludeUntracked": "Stash (Include Untracked)",
			"command.stashPop": "Pop Stash...",
			"command.stashPopLatest": "Pop Latest Stash",
			"command.sync": "Sync",
			"command.syncRebase": "Sync (Rebase)",
			"command.timelineCompareWithSelected": "Compare with Selected",
			"command.timelineCopyCommitId": "Copy Commit ID",
			"command.timelineCopyCommitMessage": "Copy Commit Message",
			"command.timelineOpenDiff": "Open Changes",
			"command.timelineSelectForCompare": "Select for Compare",
			"command.undoCommit": "Undo Last Commit",
			"command.unstage": "Unstage Changes",
			"command.unstageAll": "Unstage All Changes",
			"command.unstageSelectedRanges": "Unstage Selected Ranges",
			"config.allowForcePush": "強制的なプッシュ (--force-with-lease の有無にかかわらず) を有効にするかどうかを制御します。",
			"config.allowNoVerifyCommit": "pre-commit と commit-msg フックを実行しないコミットを許可するかどうかを制御します。",
			"config.alwaysShowStagedChangesResourceGroup": "ステージ済み変更のリソース グループを常に表示します。",
			"config.alwaysSignOff": "すべてのコミットのサインオフ フラグを制御します。",
			"config.autoRepositoryDetection": "レポジトリを自動的に検出するかどうかを構成します。",
			"config.autoRepositoryDetection.false": "リポジトリの自動的なスキャンを無効にします。",
			"config.autoRepositoryDetection.openEditors": "開いているファイルの親フォルダーをスキャンします。",
			"config.autoRepositoryDetection.subFolders": "現在開いているフォルダーのサブフォルダーをスキャンします。",
			"config.autoRepositoryDetection.true": "現在開いているフォルダーのサブフォルダーと、開いているファイルの親フォルダーの両方をスキャンします。",
			"config.autoStash": "プルする前にすべての変更をスタッシュし、プル成功後に復元します。",
			"config.autofetch": "true に設定すると、現在の Git リポジトリの既定のリモートからコミットが自動的にフェッチされます。[すべて] に設定すると、すべてのリモートからフェッチされます。",
			"config.autofetchPeriod": "`#git.autofetch#` が有効な場合の git の自動フェッチ間隔 (秒単位)。",
			"config.autorefresh": "自動更新の有効/無効。",
			"config.branchPrefix": "新しいブランチを作成するときに使用されるプレフィックス。",
			"config.branchProtection": "保護されたブランチのリスト。既定では、変更が保護されたブランチにコミットされる前にプロンプトが表示されます。プロンプトは、'#git.branchProtectionPrompt#' 設定を使用して制御できます。",
			"config.branchProtectionPrompt": "保護されたブランチに変更をコミットする前にプロンプトを表示するかどうかを制御します。",
			"config.branchProtectionPrompt.alwaysCommit": "常に保護されたブランチに変更をコミットします。",
			"config.branchProtectionPrompt.alwaysCommitToNewBranch": "新しいブランチへの変更をコミットします。",
			"config.branchProtectionPrompt.alwaysPrompt": "変更が保護されたブランチにコミットされる前に、常にプロンプトを表示します。",
			"config.branchRandomNameDictionary": "ランダムに生成されたブランチ名に使用されるディクショナリの一覧。各値は、ブランチ名のセグメントを生成するために使用されるディクショナリを表します。サポートされている辞書: `adjectives`, `animals`, `colors`, `numbers`。",
			"config.branchRandomNameDictionary.adjectives": "A random adjective",
			"config.branchRandomNameDictionary.animals": "ランダムな動物の名前",
			"config.branchRandomNameDictionary.colors": "ランダムな色の名前",
			"config.branchRandomNameDictionary.numbers": "100 と 999 の間のランダムな数",
			"config.branchRandomNameEnable": "新しいブランチの作成時にランダムな名前を生成するかどうかを制御します。",
			"config.branchSortOrder": "ブランチの並べ替え順序を制御します。",
			"config.branchValidationRegex": "新しいブランチ名を検証するための正規表現。",
			"config.branchWhitespaceChar": "新しいブランチ名の空白文字を置き換え、ランダムに生成されたブランチ名のセグメントを区切る文字。",
			"config.checkoutType": "'チェックアウト先...' を実行するとき、どの種類の Git 参照を一覧表示するか制御します。",
			"config.checkoutType.local": "Local branches",
			"config.checkoutType.remote": "Remote branches",
			"config.checkoutType.tags": "Tags",
			"config.closeDiffOnOperation": "変更をスタッシュ、コミット、破棄、ステージング、またはステージング解除する場合に差分エディターを自動的に閉じるかどうかを制御します。",
			"config.commandsToLog": "'stdout' のログが[git output](command:git.showOutput) に記録される Git コマンドの一覧 (commit、push など)。Git コマンドでクライアント側フックが構成されている場合、クライアント側フックの 'stdout' のログも[git output](command:git.showOutput) に記録されます。",
			"config.confirmEmptyCommits": "'Git: Commit Empty' コマンドの空のコミットの作成を常に確認します。",
			"config.confirmForcePush": "強制的なプッシュの前に確認を求めるかどうかを制御します。",
			"config.confirmNoVerifyCommit": "確認せずにコミットする前に確認メッセージを表示するかどうかを制御します。",
			"config.confirmSync": "Git リポジトリを同期する前に確認します。",
			"config.countBadge": "Git カウント バッジを制御します。",
			"config.countBadge.all": "Count all changes.",
			"config.countBadge.off": "Turn off counter.",
			"config.countBadge.tracked": "追跡済みの変更のみカウントします。",
			"config.decorations.enabled": "Git が配色とバッジをエクスプローラーと [開いているエディター] ビューに提供するかどうかを制御します。",
			"config.defaultCloneDirectory": "Git リポジトリをクローンする既定の場所。",
			"config.detectSubmodules": "git サブモジュールを自動的に検出するかどうかを制御します。",
			"config.detectSubmodulesLimit": "検出する git サブモジュール数の制限を制御します。",
			"config.discardAllScope": "'すべての変更を破棄' コマンドによってどの変更が破棄されるかを制御します。'all' はすべての変更を破棄します。 'tracked' は追跡されているファイルだけを破棄します。 'prompt' は、アクションが実行されるたびにプロンプ​​ト ダイアログを表示します。",
			"config.enableCommitSigning": "GPG または X.509 によるコミットの署名を有効にします。",
			"config.enableSmartCommit": "ステージされた変更がない場合はすべての変更をコミットします。",
			"config.enableStatusBarSync": "ステータス バーに Git Sync コマンドを表示するかどうかを制御します。",
			"config.enabled": "Git が有効になっているかどうか。",
			"config.experimental.installGuide": "Git のセットアップ フローの試験的な改善。",
			"config.fetchOnPull": "有効にすると、プル時にすべてのブランチをフェッチします。それ以外の場合は、現在のブランチだけをフェッチします。",
			"config.followTagsWhenSync": "同期コマンドを実行するときに、すべてのタグをフォロー プッシュします。",
			"config.ignoreLegacyWarning": "古い Git である警告を無視します。",
			"config.ignoreLimitWarning": "リポジトリ内に変更が多い場合の警告を無視します。",
			"config.ignoreMissingGitWarning": "Git が見つからない場合の警告を無視します。",
			"config.ignoreRebaseWarning": "ブランチがプル時にリベースされた可能性があると思われる場合、警告を無視します。",
			"config.ignoreSubmodules": "ファイル ツリーでのサブモジュールの変更を無視します。",
			"config.ignoreWindowsGit27Warning": "Git 2.25 - 2.26 が Windows にインストールされている場合は警告を無視します。",
			"config.ignoredRepositories": "無視する git リポジトリの一覧。",
			"config.inputValidation": "コミット メッセージの入力検証をいつ表示するかを制御します。",
			"config.inputValidationLength": "警告を表示するコミット メッセージの長さのしきい値を制御します。",
			"config.inputValidationSubjectLength": "警告を表示するためのコミット メッセージの件名長のしきい値を制御します。'config.inputValidationLength' の値を継承する場合には設定解除します。",
			"config.mergeEditor": "現在競合しているファイルのマージ エディターを開きます。",
			"config.openAfterClone": "複製後にリポジトリを自動的に開くかどうかを制御します。",
			"config.openAfterClone.always": "常に現在のウィンドウで開きます。",
			"config.openAfterClone.alwaysNewWindow": "常に新しいウィンドウで開きます。",
			"config.openAfterClone.prompt": "常にアクションを確認します。",
			"config.openAfterClone.whenNoFolderOpen": "開いているフォルダーがない場合は現在のウィンドウでのみ開きます。",
			"config.openDiffOnClick": "変更をクリックすると差分エディターを開くかどうかを制御します。そうでなければ通常のエディターを開きます。",
			"config.optimisticUpdate": "Controls whether to optimistically update the state of the Source Control view after running git commands.",
			"config.path": "Git 実行可能ファイルのパスとファイル名 (例: Windows の場合は `C:\\Program Files\\Git\\bin\\git.exe`)。検索する複数のパスを含む文字列値の配列を指定することもできます。",
			"config.postCommitCommand": "コミットの成功後、git コマンドを実行します。",
			"config.postCommitCommand.none": "コミット後、任意のコマンドを実行しません。",
			"config.postCommitCommand.push": "コミットの成功後、'git push' を実行します。",
			"config.postCommitCommand.sync": "コミットが成功した後、'git pull' と 'git push' を実行します。",
			"config.promptToSaveFilesBeforeCommit": "コミット前に Git が保存していないファイルを確認すべきかどうかを制御します。",
			"config.promptToSaveFilesBeforeCommit.always": "保存されていないファイルがないか確認します。",
			"config.promptToSaveFilesBeforeCommit.never": "Disable this check.",
			"config.promptToSaveFilesBeforeCommit.staged": "保存されていないステージング済みファイルのみを確認します。",
			"config.promptToSaveFilesBeforeStash": "変更をスタッシュする前に Git で保存していないファイルを確認すべきかどうかを制御します。",
			"config.promptToSaveFilesBeforeStash.always": "保存されていないファイルがないか確認します。",
			"config.promptToSaveFilesBeforeStash.never": "Disable this check.",
			"config.promptToSaveFilesBeforeStash.staged": "保存されていないステージング済みファイルのみを確認します。",
			"config.pruneOnFetch": "Prune when fetching.",
			"config.pullBeforeCheckout": "出力方向のコミットがないブランチを、チェックアウト前に早送りするかどうかを制御します。",
			"config.pullTags": "プルするときにすべてのタグをフェッチします。",
			"config.rebaseWhenSync": "同期コマンドを実行するときに、Git リベースを強制します。",
			"config.rememberPostCommitCommand": "コミット後に最後に実行された git コマンドを覚えておいてください。",
			"config.repositoryScanIgnoredFolders": "`#git.autoRepositoryDetection#` が `true` または `subFolders` に設定されている場合に Git リポジトリのスキャン中に無視されるフォルダーのリスト。",
			"config.repositoryScanMaxDepth": "'#git.autoRepositoryDetection#' が 'true' もしくは 'subFolders' であるとき、Git リポジトリのワークスペース フォルダーをスキャンする際に使用される深さを制御します。制限なしとするためには、'-1' として設定可能です。",
			"config.requireGitUserConfig": "明示的な Git ユーザーの構成が必要かどうかを制御するか、指定されていない場合は Git による推測を許可します。",
			"config.scanRepositories": "Git リポジトリを検索するパスのリスト。",
			"config.showActionButton": "ソース管理ビューにアクション ボタンを表示するかどうかを制御します。",
			"config.showActionButton.commit": "ローカル ブランチがコミットする準備ができているファイルを変更したときに、変更をコミットするアクション ボタンを表示します。",
			"config.showActionButton.publish": "追跡リモート ブランチがない場合にローカル ブランチを発行するアクション ボタンを表示します。",
			"config.showActionButton.sync": "ローカル ブランチがリモート ブランチの前方または背後にある場合に、変更を同期するアクション ボタンを表示します。",
			"config.showCommitInput": "Git ソース管理パネルにコミットの入力を表示するかどうかを制御します。",
			"config.showInlineOpenFileAction": "Git 変更の表示内にインラインのファイルを開くアクションを表示するかどうかを制御します。",
			"config.showProgress": "Git 操作の進行状況を表示するかどうかを制御します。",
			"config.showPushSuccessNotification": "プッシュが成功したときに通知を表示するかどうかを制御します。",
			"config.smartCommitChanges": "スマート コミットで変更を自動的にステージングするかどうかを制御します。",
			"config.smartCommitChanges.all": "すべての変更を自動的にステージします。",
			"config.smartCommitChanges.tracked": "自動的にステージングされた変更箇所のみ。",
			"config.statusLimit": "Git 状態コマンドで解析できる変更回数の制限方法を制御します。0 に設定すると制限なしにすることができます。",
			"config.suggestSmartCommit": "スマート コミットを有効にすることを推奨します (ステージング済み変更がない場合、すべての変更をコミットします)。",
			"config.supportCancellation": "ユーザーが操作を中止できる同期アクションの実行時に通知が表示されるかどうかを制御します。",
			"config.terminalAuthentication": "統合ターミナルで生成される Git プロセスの認証ハンドラーとして VS Code を有効にするかどうかを制御します。注意: この設定の変更を反映させるには、ターミナルを再起動する必要があります。",
			"config.terminalGitEditor": "統合ターミナルで生成される Git プロセスの Git エディターとして VS Code を有効にするかどうかを制御します。注意: この設定の変更を反映させるには、ターミナルを再起動する必要があります。",
			"config.timeline.date": "タイムライン ビューでアイテムに使用する日付を制御します。",
			"config.timeline.date.authored": "作成日を使用する",
			"config.timeline.date.committed": "コミットされた日付を使用する",
			"config.timeline.showAuthor": "タイムライン ビューにコミット作成者を表示するかどうかを制御します。",
			"config.timeline.showUncommitted": "コミットされていない変更をタイムライン ビューに表示するかどうかを制御します。",
			"config.untrackedChanges": "追跡対象外の変更の動作を制御します。",
			"config.untrackedChanges.hidden": "追跡対象外の変更は非表示になり、複数のアクションから除外されます。",
			"config.untrackedChanges.mixed": "追跡対象および追跡対象外のすべての変更は、一緒に表示され、均等に動作します。",
			"config.untrackedChanges.separate": "追跡されていない変更は、ソース管理ビューに個別に表示されます。それらは、複数のアクションからも除外されます。",
			"config.useCommitInputAsStashMessage": "コミット入力ボックスからのメッセージを既定のスタッシュ メッセージとして使用するかどうかを制御します。",
			"config.useEditorAsCommitInput": "コミット入力ボックスにメッセージが指定されていない場合に、コミット メッセージの作成にフル テキスト エディターを使用するかどうかを制御します。",
			"config.useForcePushWithLease": "force プッシュより安全な force-with-lease 方式を使用するかどうかを制御します。",
			"config.useIntegratedAskPass": "統合バージョンを使用するために GIT_ASKPASS を上書きするかどうかを制御します。",
			"config.verboseCommit": "「#git.useEditorAsCommitInput#」が有効になっている場合は、冗長出力を有効化してください。",
			"description": "Git SCM Integration",
			"displayName": "Git",
			"submenu.branch": "Branch",
			"submenu.changes": "Changes",
			"submenu.commit": "Commit",
			"submenu.commit.amend": "Amend",
			"submenu.commit.signoff": "Sign Off",
			"submenu.explorer": "Git",
			"submenu.pullpush": "Pull, Push",
			"submenu.remotes": "Remote",
			"submenu.stash": "Stash",
			"submenu.tags": "Tags",
			"view.workbench.cloneRepository": "リポジトリをローカルに複製できます。\r\n[リポジトリの複製](command:git.clone 'Git 拡張機能がアクティブ化されたらリポジトリを複製する')",
			"view.workbench.learnMore": "VS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.disabled": "git 機能を使用する場合、[設定](command:workbench.action.openSettings?%5B%22git.enabled%22%5D)で git を有効にしてください。\r\nGit とソース コントロールを VS Code で使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.empty": "Git 機能を使用するために、Git リポジトリを含むフォルダーを開くか、URL からクローンを作成することができます。\r\n[フォルダーを開く](command:vscode.openFolder)\r\n[リポジトリのクローン](command:git.clone)\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.emptyWorkspace": "現在開いているワークスペースには、Git リポジトリを含むフォルダーがありません。\r\n[ワークスペースにフォルダーを追加します](command:workbench.action.addRootFolder)\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.folder": "現在開いているフォルダーには Git リポジトリがありません。Git を利用したソース管理機能を有効にするリポジトリを初期化できます。\r\n[リポジトリを初期化する](command:git.init?%5Btrue%5D)\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.missing": "一般的なソース管理システムである Git をインストールして、コードの変更を追跡し、他のユーザーと共同作業を行います。詳細については、[Git ガイド](https://aka.ms/vscode-scm) を参照してください。",
			"view.workbench.scm.missing.linux": "ソース管理は、インストールされている Git に依存しています。\r\n[Linux 用 Git のダウンロード](https://git-scm.com/download/linux) \r\nインストール後、[再読み込み](command:workbench.action.reloadWindow) (または [トラブルシューティング](command:git.showOutput)) してください。追加のソース管理プロバイダーを [Marketplace から] インストールできます(command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22)。",
			"view.workbench.scm.missing.mac": "[macOS 用 Git のダウンロード](https://git-scm.com/download/mac) \r\nインストール後、[再読み込み](command:workbench.action.reloadWindow) (または [トラブルシューティング](command:git.showOutput)) してください。追加のソース管理プロバイダーを [Marketplace から] インストールできます (command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22)。",
			"view.workbench.scm.missing.windows": "[Windows 用 Git のダウンロード](https://git-scm.com/download/win) \r\nインストール後、[再読み込み](command:workbench.action.reloadWindow) (または [トラブルシューティング](command:git.showOutput)) してください。追加のソース管理プロバイダーを [Marketplace から] インストールできます (command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22)。",
			"view.workbench.scm.workspace": "現在開いているワークスペースには、Git リポジトリを含むフォルダーはありません。フォルダーにあるリポジトリを初期化して、Git を利用したソース管理機能を有効にすることができます。\r\n[リポジトリの初期化](command:git.init)\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。"
		}
	}
}