{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "No se pudieron determinar las referencias"
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"manyImplementationLabel": "{0} implementaciones",
			"oneImplementationLabel": "1 implementación"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"manyReferenceLabel": "{0} referencias",
			"oneReferenceLabel": "1 referencia"
		},
		"dist/languageFeatures/completions": {
			"acquiringTypingsDetail": "Adquiriendo definiciones de typings para IntelliSense.",
			"acquiringTypingsLabel": "Adquiriendo typings...",
			"selectCodeAction": "Seleccione acción de código para aplicar"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Habilita la verificación semántica en un archivo de JavaScript. Debe estar al principio del archivo.",
			"ts-expect-error": "Suprime los errores de @ts-check en la siguiente línea de un archivo, esperando que al menos exista uno.",
			"ts-ignore": "Suprime los errores @ts-check en la siguiente línea de un archivo. ",
			"ts-nocheck": "Deshabilita la verificación semántica en un archivo de JavaScript. Debe estar al principio del archivo."
		},
		"dist/languageFeatures/fileReferences": {
			"error.noResource": "Error al buscar referencias de archivo. No se ha proporcionado ningún recurso.",
			"error.unknownFile": "Error al buscar referencias de archivo. Tipo de archivo desconocido.",
			"error.unsupportedLanguage": "Error al buscar referencias de archivo. Tipo de archivo no compatible.",
			"error.unsupportedVersion": "Error al buscar referencias de archivo. Se requiere TypeScript 4.2 o versiones posteriores.",
			"progress.title": "Buscando referencias de archivo"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Corregir todos los problemas de JS/TS que se pueden corregir",
			"autoFix.missingImports.label": "Agregar todas las importaciones que faltan",
			"autoFix.unused.label": "Quitar todo el código sin utilizar"
		},
		"dist/languageFeatures/hover": {
			"loadingPrefix": "(cargando...)"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Comentario de JSDoc"
		},
		"dist/languageFeatures/organizeImports": {
			"organizeImportsAction.title": "Organizar Importaciones",
			"sortImportsAction.title": "Ordenar las importaciones"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (Corregir todo en el archivo)"
		},
		"dist/languageFeatures/refactor": {
			"extractConstant.disabled.reason": "No se puede extraer la selección actual",
			"extractConstant.disabled.title": "Extraer a una constante",
			"extractFunction.disabled.reason": "No se puede extraer la selección actual",
			"extractFunction.disabled.title": "Extraer a una función",
			"refactor.documentation.title": "Más información sobre las refactorizaciones JS/TS",
			"refactoringFailed": "No se pudo aplicar la refactorización"
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Error al cambiar el nombre del archivo"
		},
		"dist/languageFeatures/sourceDefinition": {
			"error.noReferences": "No se ha encontrado ninguna definición.",
			"error.noResource": "Error al ir a la definición de origen. No se ha proporcionado ningún recurso.",
			"error.unknownFile": "Error al ir a la definición de origen. Tipo de archivo no conocido.",
			"error.unsupportedLanguage": "Error al ir a la definición de origen. Tipo de archivo no admitido.",
			"error.unsupportedVersion": "Error al ir a la definición de origen. Requiere TypeScript 4.7+.",
			"progress.title": "Buscando definiciones de origen"
		},
		"dist/languageFeatures/tsconfig": {
			"documentLink.tooltip": "Seguir vínculo",
			"openTsconfigExtendsModuleFail": "Error al resolver {0} como módulo"
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"accept.title": "Sí",
			"always.title": "Actualizar siempre las importaciones automáticamente",
			"moreFile": "...1 archivo más que no se muestra",
			"moreFiles": "...{0} archivos más que no se muestran",
			"never.title": "No actualizar nunca las importaciones automáticamente",
			"prompt": "¿Actualizar las importaciones para \"{0}\"?",
			"promptMoreThanOne": "¿Actualizar importaciones para los siguientes {0} archivos?",
			"reject.title": "No",
			"renameProgress.title": "Comprobación de actualización de importaciones de JS/TS"
		},
		"dist/task/taskProvider": {
			"badTsConfig": "La tarea Typescript en tasks.json contiene \"\\\\\". Las tareas de Typescript tsconfig deben usar \"/\"",
			"buildAndWatchTscLabel": "inspección: {0}",
			"buildTscLabel": "compilación: {0}"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "La ruta de acceso {0} no apunta a una instalación válida de tsserver. Se usará la versión de TypeScript del paquete."
		},
		"dist/tsServer/versionManager": {
			"allow": "Permitir",
			"dismiss": "Descartar",
			"learnMore": "Más información sobre cómo administrar versiones de TypeScript",
			"promptUseWorkspaceTsdk": "Esta área de trabajo contiene una versión de TypeScript. ¿Quiere usar la versión de TypeScript del área de trabajo para las características de lenguaje TypeScript y JavaScript?",
			"selectTsVersion": "Seleccionar la versión de TypeScript usada para las características del lenguaje de JavaScript y TypeScript",
			"suppress prompt": "Nunca en esta área de trabajo",
			"useVSCodeVersionOption": "Utilizar la versión de VS Code",
			"useWorkspaceVersionOption": "Usar versión del área de trabajo"
		},
		"dist/tsServer/versionProvider": {
			"couldNotLoadTsVersion": "No se pudo cargar la versión de TypeScript en esta ruta"
		},
		"dist/tsServer/versionProvider.electron": {
			"noBundledServerFound": "Otra aplicación (por ejemplo, una herramienta de detección de virus con un comportamiento erróneo) eliminó el tsserver de VSCode. Debe reinstalar el VS Code."
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "La ruta de acceso {0} no apunta a una instalación válida de tsserver. Se usará la versión de TypeScript del paquete.",
			"openTsServerLog.openFileFailedFailed": "No se puede abrir el archivo de registro del servidor de TS",
			"serverDiedFiveTimes": "El servicio de lenguaje JS/TS se bloqueó 5 veces en los últimos 5 minutos.",
			"serverDiedFiveTimesWithPlugins": "El servicio de lenguaje JS/TS se bloqueó 5 veces en los últimos 5 minutos.\r\nEsto puede deberse a un complemento que aportó una de estas extensiones: {0}",
			"serverDiedImmediately": "El servicio de lenguaje JS/TS se bloqueó inmediatamente 5 veces. No se reiniciará el servicio.",
			"serverDiedImmediatelyWithPlugins": "El servicio de lenguaje JS/TS se bloqueó inmediatamente 5 veces. No se reiniciará el servicio.\r\nEsto puede deberse a un complemento que aportó una de estas extensiones: {0}",
			"serverDiedOnce": "El servicio de lenguaje JS/TS se bloqueó.",
			"serverDiedOnceWithPlugins": "El servicio de lenguaje JS/TS se bloqueó.\r\nEsto puede deberse a un complemento que aportó una de estas extensiones: {0}",
			"serverDiedReportIssue": "Notificar problema",
			"serverExitedWithError": "El servidor de lenguaje TypeScript terminó con error. Mensaje de error: {0}",
			"serverLoading.progress": "Inicialización de características del lenguaje JS/TS",
			"typescript.openTsServerLog.enableAndReloadOption": "Habilite el registro y reinicie el servidor TS",
			"typescript.openTsServerLog.loggingNotEnabled": "Los registros del servidor TS están desconectados. Establezca \"typescript.tsserver.log\" y reinicie el servidor TS para activar los registros.",
			"typescript.openTsServerLog.noLogFile": "El servidor de TS no ha iniciado el registro.",
			"usingOldTsVersion.detail": "El área de trabajo usa una versión anterior de TypeScript ({0}).\r\n\r\nAntes de informar de un problema, actualice el área de trabajo para usar la última versión estable de TypeScript y comprobar que el error no se haya corregido ya.",
			"usingOldTsVersion.title": "Actualice su versión de TypeScript."
		},
		"dist/ui/intellisenseStatus": {
			"pending.detail": "Cargando estado de IntelliSense",
			"resolved.command.title.createJsconfig": "Crear jsconfig",
			"resolved.command.title.createTsconfig": "Crear tsconfig",
			"resolved.command.title.open": "Abrir archivo de configuración",
			"resolved.detail.noJsConfig": "Sin jsconfig",
			"resolved.detail.noOpenedFolders": "No hay carpetas abiertas",
			"resolved.detail.noTsConfig": "Sin tsconfig",
			"resolved.detail.notInOpenedFolder": "El archivo no forma parte de las carpetas abiertas",
			"statusItem.name": "Estado de JS/TS IntelliSense",
			"syntaxOnly.command.title.learnMore": "Más información",
			"syntaxOnly.detail": "IntelliSense no está disponible para todo el proyecto",
			"syntaxOnly.text": "Modo parcial"
		},
		"dist/ui/versionStatus": {
			"versionStatus.command": "Seleccionar versión",
			"versionStatus.detail": "Versión de TypeScript",
			"versionStatus.name": "Versión de TypeScript"
		},
		"dist/utils/api": {
			"invalidVersion": "versión inválida"
		},
		"dist/utils/logLevelMonitor": {
			"typescript.extendedLogging.disableLogging": "Deshabilitar registro",
			"typescript.extendedLogging.doNotShowAgain": "No volver a mostrar",
			"typescript.extendedLogging.isEnabled": "El registro del servidor TS está habilitado actualmente, lo que puede afectar al rendimiento."
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/tsconfig": {
			"typescript.configureJsconfigQuickPick": "Configurar jsconfig.json",
			"typescript.configureTsconfigQuickPick": "Configurar tsconfig.json",
			"typescript.noJavaScriptProjectConfig": "El archivo no forma parte de un proyecto JavaScript. Consulte la [documentación jsconfig.json]({0}) para obtener más información.",
			"typescript.noTypeScriptProjectConfig": "El archivo no forma parte de un proyecto TypeScript. Consulte la [documentación tsconfig.json]({0}) para obtener más información.",
			"typescript.projectConfigCouldNotGetInfo": "No se pudo determinar el proyecto de TypeScript o JavaScript",
			"typescript.projectConfigNoWorkspace": "Abra una carpeta en VS Code para usar un proyecto de TypeScript o JavaScript",
			"typescript.projectConfigUnsupportedFile": "No se pudo determinar el proyecto de TypeScript o JavaScript. Tipo de archivo no compatible"
		},
		"package": {
			"codeActions.refactor.extract.constant.description": "Extraiga la expresión en constante.",
			"codeActions.refactor.extract.constant.title": "Extraer constante",
			"codeActions.refactor.extract.function.description": "Extraiga la expresión al método o a la función.",
			"codeActions.refactor.extract.function.title": "Extraer función",
			"codeActions.refactor.extract.interface.description": "Extraer el tipo a una interfaz.",
			"codeActions.refactor.extract.interface.title": "Extraer interfaz",
			"codeActions.refactor.extract.type.description": "Extraer tipo en un alias de tipo.",
			"codeActions.refactor.extract.type.title": "Extraer tipo",
			"codeActions.refactor.move.newFile.description": "Mover la expresión a un nuevo archivo.",
			"codeActions.refactor.move.newFile.title": "Mover a un nuevo archivo",
			"codeActions.refactor.rewrite.arrow.braces.description": "Agregar o quitar llaves en una función de flecha.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Reescribir llaves de flecha",
			"codeActions.refactor.rewrite.export.description": "Convierta entre la exportación predeterminada y la exportación con nombre.",
			"codeActions.refactor.rewrite.export.title": "Convertir exportación",
			"codeActions.refactor.rewrite.import.description": "Convertir entre importaciones con nombre e importaciones del espacio de nombres.",
			"codeActions.refactor.rewrite.import.title": "Convertir importación",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Convertir los parámetros en un objeto desestructurado",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Generar los descriptores de acceso \"get\" y \"set\"",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generar descriptores de acceso",
			"codeActions.source.organizeImports.title": "Organizar Importaciones",
			"configuration.implicitProjectConfig.checkJs": "Habilita o deshabilita la comprobación semántica de los archivos de JavaScript. Los archivos \"jsconfig.json\" o \"tsconfig.json\" existentes invalidan esta opción.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Habilite o deshabilite \"experimentalDecorators\" en los archivos de JavaScript que no forman parte de un proyecto. Los archivos \"jsconfig.json\" o \"tsconfig.json\" existentes invalidan esta opción.",
			"configuration.implicitProjectConfig.module": "Establece el sistema de módulos para el programa. Más información: https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
			"configuration.implicitProjectConfig.strictNullChecks": "Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
			"configuration.implicitProjectConfig.target": "Establezca la versión del lenguaje JavaScript de destino para las declaraciones JavaScript emitidas e incluya las declaraciones de biblioteca. Más información: https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Suprimir las sugerencias de nombre de parámetro en argumentos cuyo texto sea idéntico al nombre del parámetro.",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Suprima sugerencias de tipo en las variables cuyo nombre sea idéntico al nombre de tipo. Requiere el uso de TypeScript 4.8+ en el área de trabajo.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Esta configuración está en desuso en favor de \"js/ts.implicitProjectConfig.checkJs\".",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Esta configuración está en desuso en favor de \"js/ts.implicitProjectConfig.experimentalDecorators\".",
			"configuration.suggest.autoImports": "Habilita o deshabilita las sugerencias de importación automática.",
			"configuration.suggest.classMemberSnippets.enabled": "Habilite o deshabilite las finalizaciones de fragmentos de código para los miembros de clase. Requiere el uso de TypeScript 4.5+ en el área de trabajo",
			"configuration.suggest.completeFunctionCalls": "Complete las funciones con la signatura de parámetro.",
			"configuration.suggest.completeJSDocs": "Habilitar/deshabilitar sugerencia para completar comentarios JSDoc.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Habilite/deshabilite la visualización de terminaciones en valores potencialmente indefinidos que insertan una llamada en cadena opcional. Requiere TS 3.7+ y que las comprobaciones estrictas de elementos nulos.estén habilitadas.",
			"configuration.suggest.includeCompletionsForImportStatements": "Habilita o deshabilita las finalizaciones del estilo de importación automática en las instrucciones de importación escritas parcialmente. Requiere el uso de TypeScript 4.3 o versiones posteriores en el área de trabajo.",
			"configuration.suggest.includeCompletionsWithSnippetText": "Habilita o deshabilita las finalizaciones de fragmentos de código del servidor de TS. Requiere el uso de TypeScript 4.3 o versiones posteriores en el área de trabajo.",
			"configuration.suggest.jsdoc.generateReturns": "Habilita o deshabilita la generación de anotaciones `@returns` para las plantillas de JSDoc. Requiere el uso de TypeScript 4.2 y versiones posteriores en el área de trabajo.",
			"configuration.suggest.names": "Habilite/deshabilite la inclusión de nombres únicos del archivo en las sugerencias de JavaScript. Tenga en cuenta que las sugerencias de nombre siempre están deshabilitadas en el código JavaScript que se comprueba semánticamente mediante \"@ts-check\" o \"checkJs\".",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Habilita o deshabilita las finalizaciones de fragmentos de código para los métodos de literales de objeto. Requiere el uso de TypeScript 4.7+ en el área de trabajo",
			"configuration.suggest.paths": "Habilite/deshabilite las sugerencias para rutas de acceso en instrucciones de importación y requiera llamadas.",
			"configuration.surveys.enabled": "Habilitar/deshabilitar las encuestas ocasionales que nos ayudan a mejorar la compatibilidad de JavaScript y TypeScript en VS Code.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimental) Habilita los informes de errores de todo el proyecto.",
			"configuration.tsserver.maxTsServerMemory": "La cantidad máxima de memoria (en MB) a asignar al proceso del servidor TypeScript.",
			"configuration.tsserver.useSeparateSyntaxServer": "Habilite o deshabilite la generación de un servidor TypeScript independiente que pueda responder más rápidamente a las operaciones relacionadas con la sintaxis, como el cálculo de los símbolos de documento de plegado o de proceso. Requiere el uso de TypeScript 3.4.0 o posterior en el área de trabajo.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Esta configuración ha quedado en desuso en favor de \"typescript.tsserver.useSyntaxServer\".",
			"configuration.tsserver.useSyntaxServer": "Controla si TypeScript inicia un servidor dedicado para controlar de forma más rápida las operaciones relacionadas con la sintaxis, como calcular el plegado de código.",
			"configuration.tsserver.useSyntaxServer.always": "Use un servidor de sintaxis más ligero para controlar todas las operaciones de IntelliSense. Este servidor de sintaxis solo puede proporcionar IntelliSense para los archivos abiertos.",
			"configuration.tsserver.useSyntaxServer.auto": "Generar tanto un servidor completo como uno más ligero dedicado a las operaciones de sintaxis. El servidor de sintaxis se usa para acelerar las operaciones de sintaxis y proporcionar IntelliSense mientras se cargan los proyectos.",
			"configuration.tsserver.useSyntaxServer.never": "No use un servidor de sintaxis dedicado. Use un único servidor para controlar todas las operaciones de IntelliSense.",
			"configuration.tsserver.watchOptions": "Configure qué estrategias de observación se deben utilizar para realizar un seguimiento de los archivos y directorios. Requiere el uso de TypeScript 3.8+ en el área de trabajo.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Cuando se utilizan eventos del sistema de archivos, esta opción especifica la estrategia de sondeo que se utiliza cuando el sistema se queda sin monitores de archivos nativos o no los admite.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Utilice una cola dinámica en la que los archivos modificados con menos frecuencia se comprueben con menos frecuencia.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Compruebe cada archivo en busca de cambios varias veces por segundo en un intervalo fijo.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Compruebe cada archivo en busca de cambios varias veces por segundo, pero utilice la heurística para comprobar ciertos tipos de archivos con menos frecuencia que otros.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Deshabilite la observación diferida en directorios. La observación diferida es útil cuando pueden producirse muchos cambios en los archivos a la vez (por ejemplo, un cambio en node_modules de ejecutar npm install), pero es posible que desee deshabilitarla con esta marca para algunas configuraciones menos comunes.",
			"configuration.tsserver.watchOptions.watchDirectory": "Estrategia de cómo se observan árboles de directorios completos en sistemas que carecen de funcionalidad recursiva de observación de archivos.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Utilice una cola dinámica en la que los directorios modificados con menos frecuencia se comprueben con menos frecuencia.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Sondea los directorios en fragmentos a intervalos regulares. Requiere el uso de TypeScript 4.3 o versiones posteriores en el área de trabajo.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Compruebe cada directorio en busca de cambios varias veces por segundo en un intervalo fijo.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Intente utilizar los eventos nativos del sistema operativo/sistema de archivos para los cambios de directorio.",
			"configuration.tsserver.watchOptions.watchFile": "Estrategia de cómo se ven los archivos individuales.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Utilice una cola dinámica en la que los archivos modificados con menos frecuencia se comprueben con menos frecuencia.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Sondea los archivos en fragmentos a intervalos regulares. Requiere el uso de TypeScript 4.3 o versiones posteriores en el área de trabajo.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Compruebe cada archivo en busca de cambios varias veces por segundo en un intervalo fijo.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Compruebe cada archivo en busca de cambios varias veces por segundo, pero utilice la heurística para comprobar ciertos tipos de archivos con menos frecuencia que otros.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Intente utilizar los eventos nativos del sistema operativo/sistema de archivos para los cambios de archivo.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Intente utilizar los eventos nativos del sistema operativo/sistema de archivos para escuchar los cambios en los directorios contenidos de un archivo. Puede utilizar menos observadores de archivos, pero podría ser menos preciso.",
			"configuration.typescript": "TypeScript",
			"description": "Proporciona soporte de lenguaje enriquecido para JavaScript y TypeScript.",
			"displayName": "Características del lenguaje JavaScript y TypeScript",
			"format.insertSpaceAfterCommaDelimiter": "Define el tratamiento del espacio después de un delimitador de coma.",
			"format.insertSpaceAfterConstructor": "Define el tratamiento de los espacios después de la palabra clave de constructor.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Define el tratamiento del espacio después de la palabra clave function para las funciones anónimas.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Define el tratamiento del espacio después de las palabras clave en una instrucción de flujo de control.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Define el tratamiento de los espacios después de una llave de apertura y antes de una llave de cierre vacías.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Define el tratamiento del espacio después de la llave de apertura y antes de la llave de cierre de expresiones JSX.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Define el tratamiento de los espacios después de la llave de apertura y antes de la llave de cierre en instrucciones que no están vacías.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Define el manejo del espacio después de abrir y antes de cerrar los soportes no vacíos.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Define el manejo del espacio después de abrir y antes de cerrar paréntesis no vacíos.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Define el tratamiento del espacio después de la llave de apertura y antes de la llave de cierre de cadenas de plantilla.",
			"format.insertSpaceAfterSemicolonInForStatements": "Define el tratamiento del espacio después de punto y coma en una instrucción for.",
			"format.insertSpaceAfterTypeAssertion": "Define el tratamiento de los espacios después de las aserciones de tipos en TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Define el tratamiento del espacio después de un operador binario.",
			"format.insertSpaceBeforeFunctionParenthesis": "Define el tratamiento del espacio antes de los paréntesis de argumentos de función.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Define si una llave de apertura se incluye en una nueva línea para los bloques de control o no.",
			"format.placeOpenBraceOnNewLineForFunctions": "Define si una llave de apertura se incluye en una nueva línea para las funciones o no.",
			"format.semicolons": "Define el control de punto y coma opcional. Requiere el uso de TypeScript 3.7 o posterior en el área de trabajo.",
			"format.semicolons.ignore": "No inserte ni quite los puntos y comas.",
			"format.semicolons.insert": "Inserte punto y coma en los extremos de la instrucción.",
			"format.semicolons.remove": "Elimine los puntos y comas innecesarios.",
			"goToProjectConfig.title": "Ir a configuración del proyecto",
			"inlayHints.parameterNames.all": "Habilitar las sugerencias de nombre de parámetro para argumentos literales y no literales.",
			"inlayHints.parameterNames.literals": "Habilitar las sugerencias de nombre de parámetro solo para los argumentos literales.",
			"inlayHints.parameterNames.none": "Deshabilitar las sugerencias de nombre de parámetro.",
			"javascript.format.enable": "Habilita o deshabilita el formateador predeterminado de JavaScript.",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Inserte `={}` o `=\"\"` después de los nombres de atributo según el tipo de propiedad. Consulte `javascript.preferences.quoteStyle` para controlar el tipo de comillas usadas para los atributos de cadena.",
			"javascript.referencesCodeLens.enabled": "Habilitar/deshabilitar las referencias de CodeLens en los archivos de JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Habilitar o deshabilitar CodeLens de referencias en todas las funciones de los archivos de JavaScript.",
			"javascript.suggestionActions.enabled": "Habilita o deshabilita el diagnóstico de sugerencias para los archivos de JavaScript en el editor.",
			"javascript.validate.enable": "Habilita o deshabilita la validación de JavaScript.",
			"reloadProjects.title": "Volver a cargar el proyecto",
			"taskDefinition.tsconfig.description": "Archivo tsconfig que define la compilación de TS.",
			"typescript.autoClosingTags": "Habilita o deshabilita el cierre automático de las etiquetas JSX.",
			"typescript.check.npmIsInstalled": "Comprobar si npm está instalado para [Adquisición automática de tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Deshabilita [adquisición automática de tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). La adquisición automática de tipos obtiene los paquetes \"@types\" de npm para mejorar el IntelliSense de las bibliotecas externas.",
			"typescript.enablePromptUseWorkspaceTsdk": "Permite solicitar a los usuarios el uso de la versión de TypeScript configurada en el área de trabajo para IntelliSense.",
			"typescript.findAllFileReferences": "Buscar referencias de archivo",
			"typescript.format.enable": "Habilita o deshabilita el formateador predeterminado de TypeScript.",
			"typescript.goToSourceDefinition": "Ir a definición de origen",
			"typescript.implementationsCodeLens.enabled": "Habilite o deshabilite las implementaciones de CodeLens. Esta instancia de CodeLens muestra los implementadores de una interfaz.",
			"typescript.locale": "Establece la configuración regional que se usa para notificar errores de JavaScript y TypeScript. De forma predeterminada, se usa la configuración regional de VS Code.",
			"typescript.npm": "Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Abrir registro del servidor de TS",
			"typescript.preferences.autoImportFileExcludePatterns": "Especifique patrones globales de archivos que se excluirán de las importaciones automáticas. Requiere el uso de TypeScript 4.8 o posterior en el área de trabajo.",
			"typescript.preferences.importModuleSpecifier": "Estilo de ruta de acceso preferido para las importaciones automáticas.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Prefiere una importación no relativa basada en los elementos \"baseUrl\" o \"paths\" configurados en \"jsconfig.json\" o \"tsconfig.json\".",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Prefiere una importación no relativa solo si la ruta de acceso de importación relativa dejara el directorio del proyecto o paquete. Requiere el uso de TypeScript 4.2+ en el área de trabajo.",
			"typescript.preferences.importModuleSpecifier.relative": "Prefiere una ruta de acceso relativa a la ubicación del archivo importado.",
			"typescript.preferences.importModuleSpecifier.shortest": "Prefiere una importación no relativa solo si hay alguna disponible que tenga menos segmentos de trazado que una importación relativa.",
			"typescript.preferences.importModuleSpecifierEnding": "Ruta de acceso preferida que finaliza para las importaciones automáticas. Requiere el uso de TypeScript 4.5+ en el área de trabajo.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Utilice la configuración del proyecto para seleccionar un valor predeterminado.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Acorte \"./component/index.js\" a \"./component/index\".",
			"typescript.preferences.importModuleSpecifierEnding.js": "No acorte los finales de ruta; incluyen la extensión \".js\".",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Acorte \"./component/index.js\" a \"./component\".",
			"typescript.preferences.includePackageJsonAutoImports": "Habilite o deshabilite la búsqueda de dependencias \"package.json\" para las importaciones automáticas disponibles.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Busque las dependencias en función del impacto estimado en el rendimiento.",
			"typescript.preferences.includePackageJsonAutoImports.off": "No busque nunca las dependencias.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Busque siempre las dependencias.",
			"typescript.preferences.jsxAttributeCompletionStyle": "Estilo preferido para las finalizaciones de atributos JSX.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Inserte `={}` o `=\"\"` después de los nombres de atributo según el tipo de propiedad. Consulte `typescript.preferences.quoteStyle` para controlar el tipo de comillas usadas para los atributos de cadena.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Inserta '={}' después de los nombres de atributo.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Inserte solo nombres de atributo.",
			"typescript.preferences.quoteStyle": "Estilo de comillas preferido para las correcciones rápidas.",
			"typescript.preferences.quoteStyle.auto": "Inferir el tipo de comillas a partir del código existente",
			"typescript.preferences.quoteStyle.double": "Siempre use comillas dobles: `\"`",
			"typescript.preferences.quoteStyle.single": "Siempre use comillas simples: `'`",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "El valor \"typescript.preferences.renameShorthandProperties\" ha quedado en desuso en favor de \"typescript.preferences.useAliasesForRenames\"",
			"typescript.preferences.useAliasesForRenames": "Habilite o deshabilite la introducción de alias para propiedades abreviadas de objetos durante los cambios de nombre. Requiere el uso de TypeScript 3.4 o una versión más reciente en el área de trabajo.",
			"typescript.problemMatchers.tsc.label": "Problemas de TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problemas de TypeScript (modo de inspección)",
			"typescript.referencesCodeLens.enabled": "Habilita o deshabilita CodeLens de referencias en archivos de TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Habilitar/deshabilitar referencias CodeLens en todas las funciones en archivos TypeScript.",
			"typescript.reportStyleChecksAsWarnings": "Notifique las comprobaciones de estilo como advertencias.",
			"typescript.restartTsServer": "Reiniciar servidor TS",
			"typescript.selectTypeScriptVersion.title": "Seleccione la versión de TypeScript...",
			"typescript.suggest.enabled": "Sugerencias de Autocomplete habilitadas/deshabilitadas.",
			"typescript.suggestionActions.enabled": "Habilita o deshabilita el diagnóstico de sugerencias para los archivos de TypeScript en el editor.",
			"typescript.tsc.autoDetect": "Controla la detección automática de las tareas TSC.",
			"typescript.tsc.autoDetect.build": "Cree únicamente tareas de compilación de una sola ejecución.",
			"typescript.tsc.autoDetect.off": "Deshabilite esta característica.",
			"typescript.tsc.autoDetect.on": "Cree tanto tareas de compilación como de inspección.",
			"typescript.tsc.autoDetect.watch": "Cree únicamente tareas de compilación y de inspección.",
			"typescript.tsdk.desc": "Especificar la ruta de la carpeta de los archivos tsserver y `lib*.d.ts` bajo una instalación de TypeScript para usarla en IntelliSense, por ejemplo: `./node_modules/typescript/lib`.\r\n\r\n- Cuando se especifica como una configuración de usuario, la versión de TypeScript de `typescript.tsdk` reemplaza automáticamente la versión de TypeScript incorporada.\r\n- Cuando se especifica como una configuración del área de trabajo, `typescript.tsdk` le permite cambiar para usar esa versión de TypeScript del área de trabajo para IntelliSense con el comando `TypeScript: Select TypeScript version`.\r\n\r\nConsulte la [documentación de TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) para obtener más detalles sobre la administración de las versiones de TypeScript.",
			"typescript.tsserver.enableTracing": "Habilita el seguimiento del rendimiento del servidor TS en un directorio. Estos archivos de seguimiento se pueden usar para diagnosticar problemas de rendimiento del servidor TS. El registro puede contener rutas de acceso, código fuente e información potencialmente confidencial acerca del proyecto.",
			"typescript.tsserver.log": "Habilita los registros del servidor TS a un archivo. Este registro se puede utilizar para diagnosticar problemas en el servidor TS. Este registro puede contener rutas de acceso, código fuente y posiblemente otra información sensitiva acerca del proyecto.",
			"typescript.tsserver.pluginPaths": "Rutas de acceso adicionales para detectar complementos del servicio de lenguaje TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Ruta relativa o absoluta. La ruta de acceso relativa se resolverá contra las carpetas del área de trabajo.",
			"typescript.tsserver.trace": "Habilita el seguimiento de mensajes al servidor TS. Este seguimiento se puede utilizar para diagnosticar problemas en el servidor TS. Este seguimiento puede contener rutas de acceso, código fuente y posiblemente otra información sensitiva acerca del proyecto.",
			"typescript.updateImportsOnFileMove.enabled": "Habilita o deshabilita la actualización automática de las rutas de acceso de importación al mover un archivo o cambiarle el nombre en VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Actualizar siempre las rutas de acceso automáticamente.",
			"typescript.updateImportsOnFileMove.enabled.never": "No cambiar nunca el nombre de las rutas de acceso y no preguntar.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Preguntar cada vez que se cambie de nombre.",
			"typescript.validate.enable": "Habilita o deshabilita la validación de TypeScript.",
			"typescript.workspaceSymbols.scope": "Controla los archivos que busca [ir al símbolo en el área de trabajo](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Busque los símbolos en todos los proyectos abiertos de JavaScript o TypeScript. Requiere el uso de TypeScript 3.9 o una versión más reciente en el área de trabajo.",
			"typescript.workspaceSymbols.scope.currentProject": "Busque solo símbolos en el proyecto de JavaScript o TypeScript actual.",
			"virtualWorkspaces": "En los espacios de trabajo virtuales, no se admite la resolución y búsqueda de referencias entre archivos.",
			"workspaceTrust": "La extensión requiere la confianza del espacio de trabajo cuando se utiliza la versión del espacio de trabajo porque ejecuta el código especificado por el espacio de trabajo."
		}
	}
}