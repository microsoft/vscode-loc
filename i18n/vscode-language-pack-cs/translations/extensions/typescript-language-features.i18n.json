{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "Nepovedlo se určit odkazy."
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"manyImplementationLabel": "Počet implementací: {0}",
			"oneImplementationLabel": "1 implementace"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"manyReferenceLabel": "Odkazy: {0}",
			"oneReferenceLabel": "1 odkaz"
		},
		"dist/languageFeatures/completions": {
			"acquiringTypingsDetail": "Získávají se definice typings pro IntelliSense.",
			"acquiringTypingsLabel": "Získávají se definice typings...",
			"selectCodeAction": "Vybrat akci kódu, která se má použít"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Povolí sémantickou kontrolu v souboru JavaScriptu. Musí být na začátku souboru.",
			"ts-expect-error": "Potlačí chyby @ts-check na dalším řádku souboru. Očekává, že bude existovat minimálně jedna.",
			"ts-ignore": "Potlačí chyby @ts-check na dalším řádku souboru.",
			"ts-nocheck": "Zakáže sémantickou kontrolu v souboru JavaScriptu. Musí být na začátku souboru."
		},
		"dist/languageFeatures/fileReferences": {
			"error.noResource": "Operace vyhledání odkazů na soubory neproběhla úspěšně. Neposkytl se žádný prostředek.",
			"error.unknownFile": "Operace vyhledání odkazů na soubory neproběhla úspěšně. Neznámý typ souboru",
			"error.unsupportedLanguage": "Operace vyhledání odkazů na soubory neproběhla úspěšně. Nepodporovaný typ souboru",
			"error.unsupportedVersion": "Operace vyhledání odkazů na soubory neproběhla úspěšně. Vyžaduje TypeScript 4.2+.",
			"progress.title": "Vyhledávají se odkazy na soubory"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Opravit všechny opravitelné problémy JS/TS",
			"autoFix.missingImports.label": "Přidat všechny chybějící importy",
			"autoFix.unused.label": "Odebrat veškerý nepoužívaný kód"
		},
		"dist/languageFeatures/hover": {
			"loadingPrefix": "(načítání...)"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Komentář JSDoc"
		},
		"dist/languageFeatures/organizeImports": {
			"organizeImportsAction.title": "Uspořádat importy",
			"sortImportsAction.title": "Seřadit importy"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (Opravit vše v souboru)"
		},
		"dist/languageFeatures/refactor": {
			"extractConstant.disabled.reason": "Aktuální výběr nelze extrahovat.",
			"extractConstant.disabled.title": "Extrahovat do konstanty",
			"extractFunction.disabled.reason": "Aktuální výběr nelze extrahovat.",
			"extractFunction.disabled.title": "Extrahovat do funkce",
			"refactor.documentation.title": "Další informace o refaktorování JS/TS",
			"refactoringFailed": "Refaktorování se nepodařilo použít."
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Při přejmenovávání souboru došlo k chybě."
		},
		"dist/languageFeatures/sourceDefinition": {
			"error.noReferences": "Nenašly se žádné definice.",
			"error.noResource": "Nepovedlo se přejít na definici zdroje. Neposkytl se žádný prostředek.",
			"error.unknownFile": "Nepovedlo se přejít na definici zdroje. Neznámý typ souboru.",
			"error.unsupportedLanguage": "Nepovedlo se přejít na definici zdroje. Nepodporovaný typ souboru.",
			"error.unsupportedVersion": "Nepovedlo se přejít na definici zdroje. Vyžaduje se TypeScript 4.7+.",
			"progress.title": "Hledání definic zdrojů"
		},
		"dist/languageFeatures/tsconfig": {
			"documentLink.tooltip": "Přejít na odkaz",
			"openTsconfigExtendsModuleFail": "{0} se nepovedlo vyřešit jako modul"
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"accept.title": "Ano",
			"always.title": "Vždy automaticky aktualizovat importy",
			"moreFile": "...nezobrazuje se 1 další soubor",
			"moreFiles": "...{0} dalších souborů není zobrazeno",
			"never.title": "Nikdy automaticky neaktualizovat importy",
			"prompt": "Chcete aktualizovat importy pro: {0}?",
			"promptMoreThanOne": "Chcete aktualizovat importy pro následující soubory ({0})?",
			"reject.title": "Ne",
			"renameProgress.title": "Kontroluje se aktualizace importů JS/TS"
		},
		"dist/task/taskProvider": {
			"badTsConfig": "Úloha TypeScriptu v souboru tasks.json obsahuje čtyři zpětná lomítka (\\\\). V konfiguraci tsconfig úloh TypeScriptu se musí používat jedno dopředné lomítko (/).",
			"buildAndWatchTscLabel": "kukátko – {0}",
			"buildTscLabel": "sestavení – {0}"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "Cesta {0} neodkazuje na platnou instalaci serveru tsserver. Místo toho se použije verze TypeScriptu v balíčku."
		},
		"dist/tsServer/versionManager": {
			"allow": "Povolit",
			"dismiss": "Zavřít",
			"learnMore": "Další informace o správě verzí TypeScriptu",
			"promptUseWorkspaceTsdk": "Tento pracovní prostor obsahuje verzi TypeScriptu. Chcete použít verzi TypeScriptu pracovního prostoru pro funkce jazyka TypeScript a JavaScript?",
			"selectTsVersion": "Vyberte verzi TypeScriptu používanou pro funkce jazyka JavaScript a TypeScript.",
			"suppress prompt": "Nikdy v tomto pracovním prostoru",
			"useVSCodeVersionOption": "Použít verzi VS Code",
			"useWorkspaceVersionOption": "Použít verzi pracovního prostoru"
		},
		"dist/tsServer/versionProvider": {
			"couldNotLoadTsVersion": "Could not load the TypeScript version at this path"
		},
		"dist/tsServer/versionProvider.electron": {
			"noBundledServerFound": "VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code."
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "Cesta {0} neodkazuje na platnou instalaci serveru tsserver. Místo toho se použije verze TypeScriptu v balíčku.",
			"openTsServerLog.openFileFailedFailed": "Nepovedlo se otevřít soubor protokolu serveru TS.",
			"serverDiedFiveTimes": "Služba jazyka JS/TS selhala 5krát za posledních 5 minut.",
			"serverDiedFiveTimesWithPlugins": "Služba jazyka JS/TS selhala 5krát za posledních 5 minut.\r\nPříčinou může být modul plug-in, kterým přispělo jedno z těchto rozšíření: {0}",
			"serverDiedImmediately": "Služba jazyka JS/TS okamžitě 5krát selhala. Služba nebude restartována.",
			"serverDiedImmediatelyWithPlugins": "Služba jazyka JS/TS okamžitě 5krát selhala. Služba nebude restartována.\r\nPříčinou může být modul plug-in, kterým přispělo jedno z těchto rozšíření: {0}",
			"serverDiedOnce": "Došlo k chybě služby jazyka JS/TS.",
			"serverDiedOnceWithPlugins": "Došlo k chybě služby jazyka JS/TS.\r\nPříčinou může být modul plug-in, kterým přispělo jedno z těchto rozšíření: {0}",
			"serverDiedReportIssue": "Nahlásit problém",
			"serverExitedWithError": "Server jazyka TypeScript byl ukončen s chybou. Chybová zpráva: {0}",
			"serverLoading.progress": "Inicializují se funkce jazyka JS/TS",
			"typescript.openTsServerLog.enableAndReloadOption": "Povolit protokolování a restartovat server TS",
			"typescript.openTsServerLog.loggingNotEnabled": "Protokolování serveru TS je vypnuté. Pokud chcete povolit protokolování, nastavte prosím typescript.tsserver.log a restartujte server TS.",
			"typescript.openTsServerLog.noLogFile": "Server TS nezačal protokolovat.",
			"usingOldTsVersion.detail": "Pracovní prostor používá starou verzi TypeScriptu ({0}).\r\n\r\nNež nahlásíte problém, aktualizujte prosím pracovní prostor tak, aby používal nejnovější stabilní verzi TypeScriptu, abyste měli jistotu, že chyba ještě nebyla neopravena.",
			"usingOldTsVersion.title": "Aktualizujte si prosím verzi TypeScriptu"
		},
		"dist/ui/intellisenseStatus": {
			"pending.detail": "Načítání stavu IntelliSense",
			"resolved.command.title.createJsconfig": "Vytvořit jsconfig",
			"resolved.command.title.createTsconfig": "Vytvořit tsconfig",
			"resolved.command.title.open": "Otevřít konfigurační soubor",
			"resolved.detail.noJsConfig": "Žádný jsconfig",
			"resolved.detail.noOpenedFolders": "Žádné otevřené složky",
			"resolved.detail.noTsConfig": "Žádný tsconfig",
			"resolved.detail.notInOpenedFolder": "Soubor není součástí otevřených složek.",
			"statusItem.name": "Stav IntelliSense JS/TS",
			"syntaxOnly.command.title.learnMore": "Další informace",
			"syntaxOnly.detail": "IntelliSense není k dispozici pro celý projekt",
			"syntaxOnly.text": "Dílčí režim"
		},
		"dist/ui/jsNodeWalkthrough.electron": {
			"noNodeInstallFound": "We couldn't find Node.js on this computer. If you just installed it, you might need to reload VS Code.",
			"nodeNotFoundDebugAnyway": "Try Debugging Anyway",
			"nodeNotFoundDismissDialog": "Dismiss",
			"reloadWindowForNode": "Reload VS Code"
		},
		"dist/ui/versionStatus": {
			"versionStatus.command": "Vyberte verzi",
			"versionStatus.detail": "Verze TypeScriptu",
			"versionStatus.name": "Verze TypeScriptu"
		},
		"dist/utils/api": {
			"invalidVersion": "neplatná verze"
		},
		"dist/utils/logLevelMonitor": {
			"typescript.extendedLogging.disableLogging": "Zakázat protokolování",
			"typescript.extendedLogging.doNotShowAgain": "Znovu nezobrazovat",
			"typescript.extendedLogging.isEnabled": "Protokolování serveru TS je aktuálně povolené, což může mít vliv na výkon."
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/tsconfig": {
			"typescript.configureJsconfigQuickPick": "Konfigurovat soubor jsconfig.js",
			"typescript.configureTsconfigQuickPick": "Konfigurovat soubor tsconfig.js",
			"typescript.noJavaScriptProjectConfig": "Soubor není součástí projektu JavaScript. Další informace najdete v [dokumentaci jsconfig.json]({0}).",
			"typescript.noTypeScriptProjectConfig": "Soubor není součástí projektu TypeScript. Další informace najdete v [dokumentaci tsconfig.json]({0}).",
			"typescript.projectConfigCouldNotGetInfo": "Nepovedlo se určit projekt TypeScriptu nebo JavaScriptu.",
			"typescript.projectConfigNoWorkspace": "Pokud chcete použít projekt TypeScriptu nebo JavaScriptu, otevřete prosím složku ve VS Code.",
			"typescript.projectConfigUnsupportedFile": "Nepovedlo se určit projekt TypeScriptu nebo JavaScriptu. Nepodporovaný typ souboru"
		},
		"package": {
			"codeActions.refactor.extract.constant.description": "Extrahovat výraz do konstanty",
			"codeActions.refactor.extract.constant.title": "Extrahovat konstantu",
			"codeActions.refactor.extract.function.description": "Extrahovat výraz do metody nebo funkce",
			"codeActions.refactor.extract.function.title": "Extrahovat funkci",
			"codeActions.refactor.extract.interface.description": "Extrahovat typ do rozhraní",
			"codeActions.refactor.extract.interface.title": "Extrahovat rozhraní",
			"codeActions.refactor.extract.type.description": "Extrahovat typ do aliasu typu",
			"codeActions.refactor.extract.type.title": "Extrahovat typ",
			"codeActions.refactor.move.newFile.description": "Přesunout výraz do nového souboru",
			"codeActions.refactor.move.newFile.title": "Přesunout do nového souboru",
			"codeActions.refactor.rewrite.arrow.braces.description": "Přidat nebo odebrat složené závorky ve funkci šipky",
			"codeActions.refactor.rewrite.arrow.braces.title": "Přepsat úhlové závorky",
			"codeActions.refactor.rewrite.export.description": "Převod mezi výchozím exportem a pojmenovaným exportem",
			"codeActions.refactor.rewrite.export.title": "Převést export",
			"codeActions.refactor.rewrite.import.description": "Převod mezi pojmenovanými importy a importy názvového prostoru",
			"codeActions.refactor.rewrite.import.title": "Převést import",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Převést parametry na destrukturovaný objekt",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Generovat přístupové objekty get a set",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generovat přístupové objekty",
			"codeActions.source.organizeImports.title": "Uspořádat importy",
			"configuration.implicitProjectConfig.checkJs": "Umožňuje povolit nebo zakázat sémantickou kontrolu souborů JavaScriptu. Existující soubory jsconfig.json nebo tsconfig.json toto nastavení přepíší.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Umožňuje povolit nebo zakázat možnost experimentalDecorators pro soubory JavaScriptu, které nejsou součástí projektu. Existující soubory jsconfig.json nebo tsconfig.json toto nastavení přepíší.",
			"configuration.implicitProjectConfig.module": "Nastaví systém modulů pro program. Další informace: https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Umožňuje povolit nebo zakázat [striktní typy funkcí](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) pro soubory JavaScriptu a TypeScriptu, které nejsou součástí projektu. Existující soubory jsconfig.json nebo tsconfig.json toto nastavení přepíší.",
			"configuration.implicitProjectConfig.strictNullChecks": "Umožňuje povolit nebo zakázat [striktní kontroly hodnoty null](https://www.typescriptlang.org/tsconfig#strictNullChecks) pro soubory JavaScriptu a TypeScriptu, které nejsou součástí projektu. Existující soubory jsconfig.json nebo tsconfig.json toto nastavení přepíší.",
			"configuration.implicitProjectConfig.target": "Nastavte cílovou verzi jazyka JavaScript pro vydávaný JavaScript a zahrňte deklarace knihovny. Další informace: https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Potlačte tipy pro názvy parametrů parametru u argumentů, jejichž text je totožný s názvem parametru.",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Potlačit typové nápovědy u proměnných, jejichž název je shodný s názvem typu. Vyžaduje použití TypeScriptu 4.8+ v pracovním prostoru.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Toto nastavení je zastaralé a místo něj se používá js/ts.implicitProjectConfig.checkJs.",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Toto nastavení je zastaralé a místo něj se používá js/ts.implicitProjectConfig.experimentalDecorators.",
			"configuration.suggest.autoImports": "Umožňuje povolit nebo zakázat návrhy automatického importu.",
			"configuration.suggest.classMemberSnippets.enabled": "Umožňuje povolit nebo zakázat dokončování fragmentů z členů třídy. Vyžaduje, aby se v pracovním prostoru používal TypeScript 4.5+.",
			"configuration.suggest.completeFunctionCalls": "Dokončovat funkce pomocí jejich podpisu parametru",
			"configuration.suggest.completeJSDocs": "Umožňuje povolit nebo zakázat návrh na dokončování komentářů JSDoc.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Umožňuje povolit nebo zakázat zobrazování dokončování pro potenciálně nedefinované hodnoty, které vkládají volitelné volání řetězce. Vyžaduje TS 3.7+ a povolení striktních kontrol hodnot null.",
			"configuration.suggest.includeCompletionsForImportStatements": "Umožňuje povolit nebo zakázat dokončení automatického importu stylů a příkazů částečně typového importu. Vyžaduje, aby se v pracovním prostoru používal TypeScript 4.3+.",
			"configuration.suggest.includeCompletionsWithSnippetText": "Umožňuje povolit nebo zakázat dokončování fragmentů z TS Serveru. Vyžaduje, aby se v pracovním prostoru používal TypeScript 4.3+.",
			"configuration.suggest.jsdoc.generateReturns": "Umožňuje povolit nebo zakázat generování poznámek @returns pro šablony JSDoc. Vyžaduje, aby se v pracovním prostoru použil TypeScript 4.2+.",
			"configuration.suggest.names": "Umožňuje povolit nebo zakázat zahrnutí jedinečných názvů ze souboru do návrhů JavaScriptu. Poznámka: Návrhy názvů jsou vždy zakázány v kódu JavaScriptu, který je sémanticky kontrolován pomocí @ts-check nebo checkJs.",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Umožňuje povolit nebo zakázat dokončování pro metody v objektových literálech. Vyžaduje, aby se v pracovním prostoru používal TypeScript 4.7+.",
			"configuration.suggest.paths": "Umožňuje povolit nebo zakázat návrhy pro cesty v příkazech importu a vyžadovat volání.",
			"configuration.surveys.enabled": "Umožňuje povolit nebo zakázat příležitostné průzkumy, které nám pomůžou vylepšit podporu JavaScriptu a TypeScriptu ve VS Code.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimentální) Povolí zasílání zpráv o chybách v rámci celého projektu.",
			"configuration.tsserver.maxTsServerMemory": "Maximální velikost paměti (v MB), která se přidělí procesu serveru TypeScriptu",
			"configuration.tsserver.useSeparateSyntaxServer": "Umožňuje povolit nebo zakázat vytváření samostatného serveru TypeScriptu, který může rychleji reagovat na operace související se syntaxí, jako je například výpočet sbalení nebo symbolů dokumentu. V pracovním prostoru je nutné používat TypeScript 3.4.0 nebo novější.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Toto nastavení je zastaralé, používá se typescript.tsserver.useSyntaxServer.",
			"configuration.tsserver.useSyntaxServer": "Určuje, jestli TypeScript spustí vyhrazený server, aby se rychleji zpracovaly operace související se syntaxí, jako je například výpočet sbalování kódu.",
			"configuration.tsserver.useSyntaxServer.always": "Pro zpracování všech operací IntelliSense použijte zjednodušený server syntaxe. Tento server syntaxe může poskytovat IntelliSense pouze pro otevřené soubory.",
			"configuration.tsserver.useSyntaxServer.auto": "Vytvoří úplný i zjednodušený server vyhrazený pro operace syntaxe. Server syntaxe se používá k urychlení operací syntaxe a poskytování IntelliSense při načítání projektů.",
			"configuration.tsserver.useSyntaxServer.never": "Nepoužívejte vyhrazený server syntaxe. Pomocí jednoho serveru zpracujte všechny operace IntelliSense.",
			"configuration.tsserver.watchOptions": "Umožňuje nakonfigurovat, které strategie sledování se mají používat ke sledování souborů a adresářů. V pracovním prostoru je nutné používat TypeScript 3.8 nebo novější.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Při použití událostí systému souborů tato možnost určuje strategii dotazování, která se má použít, když v systému dojdou prostředky nativního sledování souborů nebo pokud systém nativní sledování souborů nepodporuje.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Použít dynamickou frontu, ve které se budou méně často upravované soubory kontrolovat méně často",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Kontrolovat změny v každém souboru několikrát za sekundu v pevně stanoveném intervalu",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Kontrolovat změny v každém souboru několikrát za sekundu, ale pomocí heuristiky kontrolovat konkrétní typy souborů méně často",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Umožňuje zakázat odložené sledování adresářů. Odložené sledování je užitečné, když může v souboru najednou dojít k velkému počtu změn (např. ke změně v node_modules při spuštění instalace npm). U některých méně obvyklých instalací ale můžete chtít toto nastavení pomocí tohoto příznaku zakázat.",
			"configuration.tsserver.watchOptions.watchDirectory": "Strategie pro sledování celých adresářových stromů v systémech, kde neexistuje žádná funkce rekurzivního sledování souborů",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Používat dynamickou frontu, ve které se budou méně často upravované adresáře kontrolovat méně často",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Cyklicky se dotazuje na adresáře v blocích v pravidelných intervalech. Vyžaduje, aby se v pracovním prostoru použil jazyk TypeScript 4.3+.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Zkontrolovat změny v každém adresáři několikrát za sekundu v pevně stanoveném intervalu",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Pokus o použití nativních událostí operačního systému / systému souborů pro změny v adresáři",
			"configuration.tsserver.watchOptions.watchFile": "Strategie pro sledovaní jednotlivých souborů",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Použít dynamickou frontu, ve které se budou méně často upravované soubory kontrolovat méně často",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Cyklicky se dotazuje na soubory v blocích v pravidelných intervalech. Vyžaduje, aby se v pracovním prostoru použil jazyk TypeScript 4.3+.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Kontrolovat změny v každém souboru několikrát za sekundu v pevně stanoveném intervalu",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Kontrolovat změny v každém souboru několikrát za sekundu, ale pomocí heuristiky kontrolovat konkrétní typy souborů méně často",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Pokus o použití nativních událostí operačního systému / systému souborů pro změny v souboru",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Pokus o použití nativních událostí operačního systému / systému souborů k naslouchání změnám v adresářích obsahujících daný soubor. Může to vést k používání menšího počtu sledovacích procesů souborů, ale zároveň ke snížení přesnosti.",
			"configuration.typescript": "TypeScript",
			"description": "Poskytuje rozšířenou podporu jazyka pro JavaScript a TypeScript.",
			"displayName": "Funkce jazyka TypeScript a JavaScript",
			"format.insertSpaceAfterCommaDelimiter": "Určuje, jak zpracovávat mezery za oddělovačem v podobě čárky.",
			"format.insertSpaceAfterConstructor": "Určuje, jak zpracovávat mezery za klíčovým slovem constructor (konstruktor).",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Určuje, jak zpracovávat mezery za klíčovým slovem function (funkce) pro anonymní funkce.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Určuje, jak zpracovávat mezery za klíčovými slovy v příkazu řídicího toku.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Určuje, jak zpracovávat mezery po levé složené závorce a před pravou složenou závorkou, pokud jsou tyto závorky prázdné.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Určuje, jak zpracovávat mezery po levé složené závorce a před pravou složenou závorkou výrazu JSX.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Určuje, jak zpracovávat mezery po levé složené závorce a před pravou složenou závorkou, pokud tyto závorky nejsou prázdné.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Určuje, jak zpracovávat mezery po levé hranaté závorce a před pravou hranatou závorkou, pokud tyto závorky nejsou prázdné.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Určuje, jak zpracovávat mezery za levou kulatou závorkou a před pravou kulatou závorkou, pokud tyto závorky nejsou prázdné.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Určuje, jak zpracovávat mezery po levé složené závorce a před pravou složenou závorkou řetězce šablony.",
			"format.insertSpaceAfterSemicolonInForStatements": "Určuje, jak zpracovávat mezery za středníkem v příkazu for.",
			"format.insertSpaceAfterTypeAssertion": "Určuje, jak zpracovávat mezery za kontrolními výrazy v TypeScriptu.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Určuje, jak zpracovávat mezery za binárním operátorem.",
			"format.insertSpaceBeforeFunctionParenthesis": "Určuje, jak zpracovávat mezery před kulatými závorkami argumentů funkcí.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Určuje, jestli je levá složená závorka v řídicích blocích umístěna na nový řádek.",
			"format.placeOpenBraceOnNewLineForFunctions": "Určuje, jestli je levá složená závorka ve funkcích umístěna na nový řádek.",
			"format.semicolons": "Definuje zpracování volitelných středníků. Vyžaduje, aby se v pracovním prostoru používal TypeScript 3.7 nebo novější.",
			"format.semicolons.ignore": "Nevkládat ani neodebírat žádné středníky",
			"format.semicolons.insert": "Vkládat středníky na konec příkazů",
			"format.semicolons.remove": "Odebrat nepotřebné středníky",
			"goToProjectConfig.title": "Přejít na konfiguraci projektu",
			"inlayHints.parameterNames.all": "Povolte tipy pro názvy parametrů pro argumenty literálu a neliterálu.",
			"inlayHints.parameterNames.literals": "Tipy pro názvy parametrů povolte pouze pro argumenty literálu.",
			"inlayHints.parameterNames.none": "Zakažte nápovědu k názvu parametru.",
			"javascript.format.enable": "Umožňuje povolit nebo zakázat výchozí formátovací modul JavaScriptu.",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "V závislosti na typu vlastnosti vložte za názvy atributů ={} nebo =\"\" . Pokud chcete řídit typy uvozovek používaných u atributů řetězců, podívejte se na javascript.preferences.quoteStyle.",
			"javascript.referencesCodeLens.enabled": "Umožňuje povolit nebo zakázat odkazy CodeLens v souborech JavaScriptu.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Umožňuje povolit nebo zakázat odkazy CodeLens pro všechny funkce v souborech JavaScriptu.",
			"javascript.suggestionActions.enabled": "Umožňuje povolit nebo zakázat diagnostiku návrhů pro soubory JavaScriptu v editoru.",
			"javascript.validate.enable": "Umožňuje povolit nebo zakázat ověřování JavaScriptu.",
			"reloadProjects.title": "Znovu načíst projekt",
			"taskDefinition.tsconfig.description": "Soubor tsconfig, který definuje sestavení TS",
			"typescript.autoClosingTags": "Umožňuje povolit nebo zakázat automatické zavírání značek JSX.",
			"typescript.check.npmIsInstalled": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Zakáže [Automatické získávání typů](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatické získávání typů načte balíčky @types z npm, aby se vylepšila funkce IntelliSense pro externí knihovny.",
			"typescript.enablePromptUseWorkspaceTsdk": "Umožňuje dotazovat se uživatelů na použití verze TypeScript nakonfigurované v pracovním prostoru pro Intellisense.",
			"typescript.findAllFileReferences": "Vyhledat odkazy na soubory",
			"typescript.format.enable": "Umožňuje povolit nebo zakázat výchozí formátovací modul TypeScriptu.",
			"typescript.goToSourceDefinition": "Přejít na definici zdroje",
			"typescript.implementationsCodeLens.enabled": "Umožňuje povolit nebo zakázat implementace CodeLens. Tato funkce CodeLens zobrazí implementátory rozhraní.",
			"typescript.locale": "Nastaví národní prostředí, které se používá k hlášení chyb JavaScriptu a TypeScriptu. Ve výchozím nastavení se používá národní prostředí VS Code.",
			"typescript.npm": "Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Otevřít protokol serveru TS",
			"typescript.preferences.autoImportFileExcludePatterns": "Zadejte vzory glob souborů, které se mají vyloučit z automatických importů. Vyžaduje v pracovním prostoru použití TypeScriptu 4.8 nebo novějšího.",
			"typescript.preferences.importModuleSpecifier": "Upřednostňovaný styl cesty pro automatické importy",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Upřednostňuje import, který není relativní, na základě hodnot baseUrl nebo paths nakonfigurovaných v souboru jsconfig.json/tsconfig.json.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Upřednostňuje import, který není relativní, pouze v případě, že cesta relativního importu opustí adresář balíčku nebo projektu. Vyžaduje použití TypeScriptu 4.2 nebo vyšší verze v pracovním prostoru.",
			"typescript.preferences.importModuleSpecifier.relative": "Upřednostňuje relativní cestu k umístění importovaného souboru.",
			"typescript.preferences.importModuleSpecifier.shortest": "Upřednostňuje import, který není relativní, pouze pokud je k dispozici takový, který má méně segmentů cesty než relativní import.",
			"typescript.preferences.importModuleSpecifierEnding": "Preferované ukončení cesty pro automatické importy. Vyžaduje v pracovním prostoru použití TypeScriptu 4.5+.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Výchozí nastavení vyberte pomocí nastavení projektu.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Zkracovat ./component/index.js na ./component/index",
			"typescript.preferences.importModuleSpecifierEnding.js": "Nezkracovat konce cest, zahrnout příponu .js",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Zkracovat ./component/index.js na ./component",
			"typescript.preferences.includePackageJsonAutoImports": "Umožňuje povolit nebo zakázat hledání závislostí package.json pro dostupné automatické importy.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Hledat závislosti na základě odhadovaného dopadu na výkon",
			"typescript.preferences.includePackageJsonAutoImports.off": "Nikdy nehledat závislosti",
			"typescript.preferences.includePackageJsonAutoImports.on": "Vždy hledat závislosti",
			"typescript.preferences.jsxAttributeCompletionStyle": "Upřednostňovaný styl pro dokončování atributů JSX.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "V závislosti na typu vlastnosti vložte za názvy atributů ={} nebo =\"\" . Pokud chcete řídit typy uvozovek používaných u atributů řetězců, podívejte se na typescript.preferences.quoteStyle.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Vložte „={}“ za názvy atributů.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Vkládejte pouze názvy atributů.",
			"typescript.preferences.quoteStyle": "Upřednostňovaný styl uvozovek, který se má použít pro rychlé opravy.",
			"typescript.preferences.quoteStyle.auto": "Odvodit typ uvozovek z existujícího kódu",
			"typescript.preferences.quoteStyle.double": "Vždy používat dvojité uvozovky „ \" “",
			"typescript.preferences.quoteStyle.single": "Vždy používat dvojité uvozovky „ ' “",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Nastavení typescript.preferences.renameShorthandProperties je zastaralé. Místo něj se používá nastavení typescript.preferences.useAliasesForRenames.",
			"typescript.preferences.useAliasesForRenames": "Umožňuje povolit nebo zakázat zavádění aliasů pro sdružené vlastnosti objektů při přejmenovávání. Vyžaduje, aby se v pracovním prostoru používal TypeScript 3.4 nebo novější.",
			"typescript.problemMatchers.tsc.label": "Problémy s TypeScriptem",
			"typescript.problemMatchers.tscWatch.label": "Problémy s TypeScriptem (režim sledování)",
			"typescript.referencesCodeLens.enabled": "Umožňuje povolit nebo zakázat odkazy CodeLens v souborech TypeScriptu.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Umožňuje povolit nebo zakázat odkazy CodeLens pro všechny funkce v souborech TypeScriptu.",
			"typescript.reportStyleChecksAsWarnings": "Hlásit kontroly stylu jako upozornění",
			"typescript.restartTsServer": "Restartovat server TS",
			"typescript.selectTypeScriptVersion.title": "Vybrat verzi TypeScriptu...",
			"typescript.suggest.enabled": "Umožňuje povolit nebo zakázat návrhy automatického dokončování.",
			"typescript.suggestionActions.enabled": "Umožňuje povolit nebo zakázat diagnostiku návrhů pro soubory TypeScriptu v editoru.",
			"typescript.tsc.autoDetect": "Řídí automatické zjišťování úloh tsc.",
			"typescript.tsc.autoDetect.build": "Umožňuje vytvářet úlohy kompilace pouze pro jedno spuštění.",
			"typescript.tsc.autoDetect.off": "Zakázat tuto funkci",
			"typescript.tsc.autoDetect.on": "Vytvořit jak úlohy sestavení, tak úlohy sledování",
			"typescript.tsc.autoDetect.watch": "Vytvořit pouze úlohy kompilace a sledování",
			"typescript.tsdk.desc": "Určuje cestu ke složce pro soubory tsserver a lib*.d.ts v rámci instalace TypeScriptu, která se má používat pro technologii IntelliSense, například: ./node_modules/typescript/lib.\r\n\r\n- Pokud je zadáno jako uživatelské nastavení, verze TypeScriptu ze souboru typescript.tsdk automaticky nahradí integrovanou verzi TypeScriptu.\r\n- Pokud je zadáno jako nastavení pracovního prostoru, umožňuje vám soubor typescript.tsdk přepnout na používání verze TypeScriptu tohoto pracovního prostoru pro IntelliSense příkazem TypeScript: vybrat verzi TypeScriptu.r\r\n\r\nDalší informace o správě verzí TypeScriptu najdete v [dokumentaci k TypeScriptu](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions).",
			"typescript.tsserver.enableTracing": "Umožňuje povolit sledování výkonu serveru TS do adresáře. Tyto sledovací soubory lze použít k diagnostikování problémů s výkonem serveru TS. Protokol může obsahovat cesty k souborům, zdrojový kód a další potenciálně citlivé informace z vašeho projektu.",
			"typescript.tsserver.log": "Umožňuje povolit protokolování serveru TS do souboru. Tento protokol lze použít k diagnostikování problémů se serverem TS. Protokol může obsahovat cesty k souborům, zdrojový kód a další potenciálně citlivé informace z vašeho projektu.",
			"typescript.tsserver.pluginPaths": "Další cesty ke zjišťování modulů plug-in služby jazyka TypeScript",
			"typescript.tsserver.pluginPaths.item": "Buď absolutní, nebo relativní cesta. Relativní cesta bude relativní ve vztahu ke složkám pracovního prostoru.",
			"typescript.tsserver.trace": "Umožňuje povolit trasování zpráv odesílaných na server TS. Toto trasování lze použít k diagnostikování problémů se serverem TS. Trasování může obsahovat cesty k souborům, zdrojový kód a další potenciálně citlivé informace z vašeho projektu.",
			"typescript.updateImportsOnFileMove.enabled": "Umožňuje povolit nebo zakázat automatické aktualizace cest importu při přejmenovávání nebo přesouvání souboru ve VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Vždy automaticky aktualizovat cesty",
			"typescript.updateImportsOnFileMove.enabled.never": "Nikdy nepřejmenovávat cesty a nezobrazovat dotaz",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Dotázat se na každé přejmenování",
			"typescript.validate.enable": "Umožňuje povolit nebo zakázat ověřování TypeScriptu.",
			"typescript.workspaceSymbols.scope": "Controls which files are searched by [go to symbol in workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Hledat symboly ve všech otevřených projektech JavaScriptu nebo TypeScriptu. Vyžaduje, aby se v pracovním prostoru používal TypeScript 3.9 nebo novější.",
			"typescript.workspaceSymbols.scope.currentProject": "Hledat symboly pouze v aktuálním projektu JavaScriptu nebo TypeScriptu",
			"virtualWorkspaces": "Ve virtuálních pracovních prostorech se nepodporuje řešení a vyhledávání odkazů v souborech.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Debug and run your JavaScript code in Node.js with Visual Studio Code.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "Once you've installed Node.js, you can run JavaScript programs at a terminal by entering ``node your-file-name.js``\r\nAnother easy way to run Node.js programs is by using VS Code's debugger which lets you run your code, pause at different points, and help you understand what's going on step-by-step.\r\n[Start Debugging](command:javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "Run and Debug your JavaScript",
			"walkthroughs.nodejsWelcome.description": "Make the most of Visual Studio Code's first-class JavaScript experience.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Node.js is an easy way to run JavaScript code. You can use it to quickly build command-line apps and servers. It also comes with npm, a package manager which makes reusing and sharing JavaScript code easy.\r\n[Install Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Install Node.js",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Node.js is an easy way to run JavaScript code. You can use it to quickly build command-line apps and servers. It also comes with npm, a package manager which makes reusing and sharing JavaScript code easy.\r\n[Install Node.js](https://nodejs.org/en/download/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Install Node.js",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Learn more about JavaScript and Node.js in Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Want to get more comfortable with JavaScript, Node.js, and VS Code? Be sure to check out our docs!\r\nWe've got lots of resources for learning [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) and [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Learn More](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Explore More",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Let's write our first JavaScript file. We'll have to create a new file and save it with the ``.js`` extension at the end of the file name.\r\n[Create a JavaScript File](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "Create a JavaScript File",
			"walkthroughs.nodejsWelcome.title": "Get started with JavaScript and Node.js",
			"workspaceTrust": "Pokud se používá verze pracovního prostoru, rozšíření vyžaduje vztah důvěryhodnosti pracovního prostoru, protože spouští kód určený pracovním prostorem."
		}
	}
}