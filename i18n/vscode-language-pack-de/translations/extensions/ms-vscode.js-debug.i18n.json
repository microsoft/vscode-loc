{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"/src/adapter/breakpoints/userDefinedBreakpoint": {
			"breakpoint.provisionalBreakpoint": "Ungebundener Haltepunkt"
		},
		"/src/adapter/console/queryObjectsMessage": {
			"queryObject.couldNotQuery": "Das bereitgestellte Objekt konnte nicht abgefragt werden.",
			"queryObject.errorPreview": "Die Vorschau konnte generiert werden: {0}",
			"queryObject.invalidObject": "Es können nur Objekte abgefragt werden."
		},
		"/src/adapter/console/textualMessage": {
			"console.assert": "Assertionsfehler"
		},
		"/src/adapter/customBreakpoints": {
			"breakpoint.animationFrameFired": "Animationsframe ausgelöst",
			"breakpoint.cancelAnimationFrame": "Animationsframe abbrechen",
			"breakpoint.closeAudioContext": "AudioContext schließen",
			"breakpoint.createAudioContext": "AudioContext erstellen",
			"breakpoint.createCanvasContext": "Canvas-Kontext erstellen",
			"breakpoint.cspViolation": "Von Inhaltssicherheitsrichtlinie blockiertes Skript",
			"breakpoint.cspViolationNamed": "Inhaltssicherheitsrichtlinien-Verstoß \"{0}\"",
			"breakpoint.cspViolationNamedDetails": "Bei Instrumentierungshaltepunkt für Verstöße gegen die Inhaltssicherheitsrichtlinie angehalten. Direktive: \"{0}\".",
			"breakpoint.eventListenerNamed": "Bei Ereignislistener-Haltepunkt \"{0}\" angehalten, ausgelöst für \"{1}\"",
			"breakpoint.instrumentationNamed": "Bei Instrumentierungshaltepunkt \"{0}\" angehalten",
			"breakpoint.requestAnimationFrame": "Animationsframe anfordern",
			"breakpoint.resumeAudioContext": "AudioContext fortsetzen",
			"breakpoint.scriptFirstStatement": "Erste Anweisung in Skript",
			"breakpoint.setInnerHtml": "innerHTML festlegen",
			"breakpoint.setIntervalFired": "setInterval ausgelöst",
			"breakpoint.setTimeoutFired": "setTimeout ausgelöst",
			"breakpoint.suspendAudioContext": "AudioContext anhalten",
			"breakpoint.webglErrorFired": "WebGL-Fehler ausgelöst",
			"breakpoint.webglErrorNamed": "WebGL-Fehler \"{0}\"",
			"breakpoint.webglErrorNamedDetails": "Bei Instrumentierungshaltepunkt für WebGL-Fehler angehalten. Fehler: \"{0}\".",
			"breakpoint.webglWarningFired": "WebGL-Warnung ausgelöst"
		},
		"/src/adapter/debugAdapter": {
			"breakpoint.caughtExceptions": "Abgefangene Ausnahmen",
			"breakpoint.caughtExceptions.description": "Führt bei allen ausgelösten Fehlern zur Unterbrechung, selbst wenn die Fehler später abgefangen werden.",
			"breakpoint.uncaughtExceptions": "Nicht abgefangene Ausnahmen",
			"error.cannotPrettyPrint": "Automatische Strukturierung und Einrückung nicht möglich.",
			"error.sourceContentDidFail": "Quellinhalte können nicht abgerufen werden.",
			"error.sourceNotFound": "Quelle nicht gefunden.",
			"error.variableNotFound": "Variable nicht gefunden."
		},
		"/src/adapter/profiling/basicCpuProfiler": {
			"profile.cpu.description": "Generiert eine .cpuprofile-Datei, die Sie in den Chrome DevTools öffnen können.",
			"profile.cpu.label": "CPU-Profil"
		},
		"/src/adapter/profiling/heapDumpProfiler": {
			"profile.heap.description": "Generiert eine .heapsnapshot-Datei, die Sie in den Chrome-Developer-Tools öffnen können.",
			"profile.heap.label": "Heap-Momentaufnahme"
		},
		"/src/adapter/sources": {
			"source.skipFiles": "Von skipFiles übersprungen"
		},
		"/src/adapter/stackTrace": {
			"scope.block": "Block",
			"scope.catch": "Catch-Block",
			"scope.closure": "Abschluss",
			"scope.closureNamed": "Abschluss ({0})",
			"scope.eval": "Eval",
			"scope.global": "Global",
			"scope.local": "Lokal",
			"scope.module": "Modul",
			"scope.returnValue": "Rückgabewert",
			"scope.script": "Skript",
			"scope.with": "With-Block",
			"smartStepSkipLabel": "Von smartStep übersprungen",
			"source.skipFiles": "Von skipFiles übersprungen"
		},
		"/src/adapter/threads": {
			"error.evaluateDidFail": "Auswertung nicht möglich.",
			"error.evaluateOnAsyncStackFrame": "Auswertung für asynchronen Stapelrahmen nicht möglich.",
			"error.pauseDidFail": "Anhalten nicht möglich.",
			"error.restartFrameAsync": "Asynchroner Rahmen kann nicht neu gestartet werden.",
			"error.resumeDidFail": "Fortsetzen nicht möglich.",
			"error.stackFrameNotFound": "Stapelrahmen nicht gefunden.",
			"error.stepInDidFail": "Einzelschritt nicht möglich.",
			"error.stepOutDidFail": "Rücksprung nicht möglich.",
			"error.stepOverDidFail": "Nächster Schritt nicht möglich.",
			"error.threadNotPaused": "Der Thread wird nicht angehalten.",
			"error.threadNotPausedOnException": "Der Thread wird bei einer Ausnahme nicht angehalten.",
			"pause.DomBreakpoint": "Bei DOM-Haltepunkt angehalten",
			"pause.assert": "Bei Assert angehalten",
			"pause.breakpoint": "Bei Haltepunkt angehalten",
			"pause.debugCommand": "Bei debug()-Aufruf angehalten",
			"pause.default": "Angehalten",
			"pause.eventListener": "Bei Ereignislistener angehalten",
			"pause.exception": "Bei Ausnahme angehalten",
			"pause.instrumentation": "Bei Instrumentierungshaltepunkt angehalten",
			"pause.oom": "Vor Speicherausnahmefehler angehalten",
			"pause.promiseRejection": "Bei Promise-Ablehnung angehalten",
			"pause.xhr": "Bei XMLHttpRequest oder Fetch angehalten",
			"reason.description.restart": "Bei Frameeintritt angehalten",
			"warnings.handleSourceMapPause.didNotWait": "WARNUNG: Die Verarbeitung von Quellzuordnungen von \"{0}\" hat mehr als {1} ms gedauert. Aus diesem Grund wurde die Ausführung fortgesetzt, ohne auf die Festlegung aller Haltepunkte für das Skript zu warten."
		},
		"/src/adapter/variables": {
			"error.customValueDescriptionGeneratorFailed": "{0} (Beschreibung nicht möglich: {1})",
			"error.emptyExpression": "Es darf kein leerer Wert festgelegt werden.",
			"error.failedToCustomizeObjectProperties": "Fehler bei der Anpassung von Eigenschaften",
			"error.invalidExpression": "Ungültiger Ausdruck",
			"error.setVariableDidFail": "Der Variablenwert kann nicht festgelegt werden.",
			"error.unknown": "Unbekannter Fehler.",
			"error.variableNotFound": "Variable nicht gefunden."
		},
		"/src/binder": {
			"breakpoint.provisionalBreakpoint": "Ungebundener Haltepunkt"
		},
		"/src/dap/errors": {
			"NVM_HOME.not.found.message": "Das Attribut \"runtimeVersion\" erfordert den Node.js-Versions-Manager \"nvm-windows\" oder \"nvs\".",
			"NVS_HOME.not.found.message": "Für das Attribut \"runtimeVersion\" muss der Node.js-Versions-Manager \"nvs\" oder \"nvm\" installiert sein.",
			"VSND2011": "Das Debugziel im Terminal kann nicht gestartet werden ({0}).",
			"VSND2029": "Umgebungsvariablen können nicht aus Datei geladen werden ({0}).",
			"asyncScopesNotAvailable": "Nicht verfügbare Variablen in asynchronen Stapeln.",
			"breakpointSyntaxError": "Syntaxfehler beim Festlegen des Haltepunkts mit Bedingung \"{0}\" in Zeile {1}: {2}",
			"browserVersionNotFound": "{0}-Version {1} wurde nicht gefunden. Automatisch ermittelte verfügbare Versionen: {2}. Sie können \"runtimeExecutable\" in der Datei \"launch.json\" auf eine dieser Versionen festlegen oder einen absoluten Pfad zur ausführbaren Browserdatei angeben.",
			"error.browserAttachError": "Anfügen an Browser nicht möglich.",
			"error.browserLaunchError": "Der Browser kann nicht gestartet werden: \"{0}\"",
			"error.threadNotFound": "Zielseite nicht gefunden. Möglicherweise müssen Sie Ihren \"urlFilter\" aktualisieren, damit er der Seite entspricht, die Sie debuggen möchten.",
			"invalidHitCondition": "Ungültige Trefferbedingung \"{0}\". Es wurde ein Ausdruck wie \"> 42\" oder \"== 2\" erwartet.",
			"noBrowserInstallFound": "Es wurde keine Installation auf Ihrem Browser gefunden. Versuchen Sie, eine Installation durchzuführen, oder geben Sie einen absoluten Pfad zum Browser in „runtimeExecutable“ in der Datei „launch.json“ an.",
			"profile.error.concurrent": "Beenden Sie das aktuell ausgeführte Profil, bevor Sie ein neues starten.",
			"profile.error.generic": "Fehler beim Übernehmen eines Profils aus dem Ziel.",
			"runtime.node.notfound": "Die Node.js-Binärdatei \"{0}\" wurde nicht gefunden: {1}. Stellen Sie sicher, dass Node.js installiert und in PATH vorhanden ist, oder legen Sie \"runtimeExecutable\" in der Datei \"launch.json\" fest.",
			"runtime.node.outdated": "Die Node-Version in \"{0}\" ist veraltet (Version {1}), es ist mindestens Node 8.x erforderlich.",
			"runtime.version.not.found.message": "Die Node.js-Version {0} wurde nicht mit dem Versions-Manager \"{1}\" installiert.",
			"sourcemapParseError": "Die Quellzuordnung für \"{0}\" konnte nicht gelesen werden: {1}"
		},
		"/src/debugServer": {
			"breakpoint.provisionalBreakpoint": "Ungebundener Haltepunkt"
		},
		"/src/targets/browser/browserAttacher": {
			"attach.cannotConnect": "Es kann keine Verbindung mit dem Ziel unter \"{0}\" hergestellt werden: {1}",
			"chrome.targets.placeholder": "Wählen Sie eine Registerkarte"
		},
		"/src/targets/node/nodeAttacher": {
			"node.attach.restart.message": "Die Verbindung mit der zu debuggenden Komponente wurde getrennt. Die Verbindung wird in {0} ms wiederhergestellt.\r\n"
		},
		"/src/targets/node/nodeBinaryProvider": {
			"outOfDate": "{0} Möchten Sie dennoch debuggen?",
			"runtime.node.notfound.enoent": "Der Pfad ist nicht vorhanden.",
			"runtime.node.notfound.spawnErr": "Fehler beim Abrufen der Version: {0}",
			"warning.16bpIssue": "Einige Haltepunkte funktionieren möglicherweise nicht in Ihrer Version von Node.js. Wir empfehlen ein Upgrade auf die neuesten Fehler-, Leistungs- und Sicherheitsfixes. Details: https://aka.ms/AAcsvqm",
			"warning.8outdated": "Sie führen eine veraltete Version von Node.js aus. Wir empfehlen ein Upgrade auf die neuesten Fehler-, Leistungs- und Sicherheitsfixes.",
			"yes": "Ja"
		},
		"/src/ui/autoAttach": {
			"details": "Details"
		},
		"/src/ui/companionBrowserLaunch": {
			"cannotDebugInBrowser": "Von hier aus kann kein Browser im Debugmodus gestartet werden. Öffnen Sie diesen Arbeitsbereich in VS Code auf Ihrem Desktop, um das Debugging zu aktivieren."
		},
		"/src/ui/configuration/chromiumDebugConfigurationProvider": {
			"chrome.launch.name": "Chrome mit \"localhost\" starten",
			"existingBrowser.alert": "Offenbar wird über {0} bereits ein Browser ausgeführt. Schließen Sie ihn vor dem Debuggen, weil VS Code andernfalls möglicherweise keine Verbindung herstellen kann.",
			"existingBrowser.debugAnyway": "Dennoch debuggen",
			"existingBrowser.location.default": "eine alte Debugsitzung",
			"existingBrowser.location.userDataDir": "das konfigurierte userDataDir"
		},
		"/src/ui/configuration/edgeDebugConfigurationProvider": {
			"chrome.launch.name": "Microsoft Edge mit \"Localhost\" starten"
		},
		"/src/ui/configuration/nodeDebugConfigurationProvider": {
			"debug.terminal.label": "JavaScript-Debugterminal",
			"node.launch.currentFile": "Aktuelle Datei ausführen",
			"node.launch.script": "Skript ausführen: {0}"
		},
		"/src/ui/configuration/nodeDebugConfigurationResolver": {
			"cwd.notFound": "Die konfigurierte \"cwd\"- {0} ist nicht vorhanden.",
			"mern.starter.explanation": "Startet die Konfiguration für das erstellte Projekt \"{0}\".",
			"node.launch.config.name": "Programm starten",
			"outFiles.explanation": "Stellt das oder die Globmuster im \"outFiles\"- Attribut so ein, dass sie den generierten JavaScript-Code abdecken.",
			"program.guessed.from.package.json.explanation": "Startet die auf Basis von \"package.json\" erstellte Konfiguration.",
			"program.not.found.message": "Es wurde kein zu debuggendes Programm gefunden"
		},
		"/src/ui/debugLinkUI": {
			"debugLink.invalidUrl": "Die angegebene URL ist ungültig.",
			"debugLink.savePrompt": "Möchten Sie eine Konfiguration in Ihrer launch.json-Datei speichern, um den späteren Zugriff zu vereinfachen?",
			"never": "Nie",
			"no": "Nein",
			"yes": "Ja"
		},
		"/src/ui/debugNpmScript": {
			"debug.npm.noScripts": "In Ihrer package.json-Datei wurden keine npm-Skripts gefunden.",
			"debug.npm.noWorkspaceFolder": "Sie müssen einen Arbeitsbereichsordner öffnen, um npm-Skripts zu debuggen.",
			"debug.npm.notFound.open": "package.json bearbeiten",
			"debug.npm.parseError": "Fehler beim Lesen von {0}: {1}"
		},
		"/src/ui/debugTerminalUI": {
			"terminal.cwdpick": "Aktuelles Arbeitsverzeichnis für neues Terminal auswählen"
		},
		"/src/ui/diagnosticsUI": {
			"inspectSessionEnded": "Anscheinend ist Ihre Debugsitzung bereits beendet. Wiederholen Sie das Debugging, und führen Sie dann den Befehl \"Debug: Diagnose von Haltepunkt-Problemen\" aus.",
			"never": "Nie",
			"notNow": "Jetzt nicht",
			"selectInspectSession": "Wählen Sie die Sitzung aus, die Sie überprüfen möchten:",
			"yes": "Ja"
		},
		"/src/ui/disableSourceMapUI": {
			"always": "Immer",
			"disableSourceMapUi.msg": "Eine Sourcemap verweist auf einen fehlenden Dateipfad. Möchten Sie stattdessen die kompilierte Version debuggen?",
			"no": "Nein",
			"yes": "Ja"
		},
		"/src/ui/edgeDevToolOpener": {
			"selectEdgeToolSession": "Wählen Sie die Seite aus, auf der Sie die DevTools öffnen möchten."
		},
		"/src/ui/linkedBreakpointLocationUI": {
			"ignore": "Ignorieren",
			"readMore": "Weitere Informationen"
		},
		"/src/ui/longPredictionUI": {
			"longPredictionWarning.disable": "Nicht mehr anzeigen",
			"longPredictionWarning.message": "Es dauert einen Moment, Ihre Haltepunkte zu konfigurieren. Sie können den Vorgang beschleunigen, indem Sie die das outFiles-Attribut in der Datei \"launch.json\" aktualisieren.",
			"longPredictionWarning.noFolder": "Kein Ordner des Arbeitsbereichs geöffnet.",
			"longPredictionWarning.open": "\"launch.json\" öffnen"
		},
		"/src/ui/prettyPrint": {
			"never": "Nie",
			"no": "Nein",
			"yes": "Ja"
		},
		"/src/ui/processPicker": {
			"cannot.enable.debug.mode.error": "An den Prozess anhängen: Der Debugmodus für den Prozess \"{0}\" kann nicht aktiviert werden ({1}).",
			"pickNodeProcess": "Node.js-Prozess zum Anfügen auswählen",
			"process.id.error": "An Prozess anfügen: \"{0}\" scheint keine Prozess-ID zu sein.",
			"process.id.port.signal": "Prozess-ID: {0}, Debugport: {1} ({2})",
			"process.id.signal": "Prozess-ID: {0} ({1})",
			"process.picker.error": "Fehler bei der Prozessauswahl ({0})"
		},
		"/src/ui/profiling/breakpointTerminationCondition": {
			"breakpointTerminationWarnConfirm": "Verstanden!",
			"breakpointTerminationWarnSlow": "Die Profilerstellung mit aktivierten Haltepunkten kann sich auf die Leistung Ihres Codes auswirken. Es kann nützlich sein, Ihre Ergebnisse mit den Beendigungsbedingungen \"duration\" oder \"manual\" zu validieren.",
			"profile.termination.breakpoint.description": "Bis zum Erreichen eines bestimmten Haltepunkts ausführen",
			"profile.termination.breakpoint.label": "Haltepunkt auswählen"
		},
		"/src/ui/profiling/durationTerminationCondition": {
			"profile.termination.duration.description": "Für einen bestimmten Zeitraum ausführen",
			"profile.termination.duration.inputTitle": "Profildauer",
			"profile.termination.duration.invalidFormat": "Geben Sie eine Zahl ein.",
			"profile.termination.duration.invalidLength": "Geben Sie eine Zahl ein, die größer ist als 1.",
			"profile.termination.duration.label": "Dauer",
			"profile.termination.duration.placeholder": "Profildauer in Sekunden, z. B. 5"
		},
		"/src/ui/profiling/manualTerminationCondition": {
			"profile.termination.duration.description": "Bis zur manuellen Beendigung ausführen",
			"profile.termination.duration.label": "Manuell"
		},
		"/src/ui/profiling/uiProfileManager": {
			"no": "Nein",
			"profile.alreadyRunning": "Es wird bereits eine Sitzung zur Profilerstellung ausgeführt. Möchten Sie diese Sitzung beenden und eine neue Sitzung starten?",
			"profile.sessionState": "Profilerstellung",
			"profile.status.default": "$(loading): Klicken Sie hier, um die Profilerstellung zu beenden.",
			"profile.status.multiSession": "$(loading): Klicken Sie hier, um die Profilerstellung zu beenden ({0} Sitzungen).",
			"profile.status.single": "$(loading): Klicken Sie hier, um die Profilerstellung zu beenden ({0}).",
			"profile.termination.title": "Dauer der Profilausführung:",
			"profile.type.title": "Profiltyp:",
			"yes": "Ja"
		},
		"/src/ui/profiling/uiProfileSession": {
			"profile.saving": "Speichern",
			"progress.profile.start": "Profil wird gestartet...",
			"progress.profile.stop": "Profil wird beendet..."
		},
		"/src/ui/terminalLinkHandler": {
			"cantOpenChromeOnWeb": "Von hier aus kann kein Browser im Debugmodus gestartet werden. Wenn Sie diese Webseite debuggen möchten, öffnen Sie diesen Arbeitsbereich über VS Code auf Ihrem Desktop.",
			"terminalLinkHover.debug": "URL debuggen"
		},
		"/src/vsDebugServer": {
			"session.rootSessionName": "JavaScript-Debugadapter"
		},
		"package": {
			"add.browser.breakpoint": "Browserhaltepunkt hinzufügen",
			"attach.node.process": "An Node-Prozess anfügen",
			"base.cascadeTerminateToConfigurations.label": "Eine Liste der Debugsitzungen, die bei Beenden dieser Debugsitzung ebenfalls beendet werden.",
			"browser.address.description": "IP-Adresse oder Hostname, auf die bzw. den der Browser lauscht, für den ein Debugging durchgeführt wird.",
			"browser.attach.port.description": "Port, der beim Remotedebugging des Browsers verwendet wird, angegeben als \"--remote-debugging-port\" beim Starten des Browsers.",
			"browser.baseUrl.description": "Die Basis-URL zum Auflösen von Pfaden (baseUrl). baseURL wird beim Zuordnen von URLs zu den Dateien auf dem Datenträger gekürzt. Der Standardwert ist die Start-URL-Domäne.",
			"browser.browserAttachLocation.description": "Hiermit wird erzwungen, dass der Browser an einer einzigen Stelle angefügt wird. In einem Remotearbeitsbereich (beispielsweise über SSH oder WSL) kann diese Einstellung zum Anfügen des Browsers auf dem Remotecomputer statt des Browsers auf dem lokalen Computer verwendet werden.",
			"browser.browserLaunchLocation.description": "Erzwingt, dass der Browser an einer einzigen Stelle gestartet wird. In einem Remotearbeitsbereich (beispielsweise über SSH oder WSL) kann diese Einstellung verwendet werden, um den Browser statt auf dem lokalen Computer auf dem Remotecomputer zu öffnen.",
			"browser.cleanUp.description": "Bereinigungsvorgänge nach Beendigung der Debugsitzung. Schließen Sie nur die Registerkarte, für die das Debugging ausgeführt wird, nicht den gesamten Browser.",
			"browser.cwd.description": "Optionales Arbeitsverzeichnis für die ausführbare Runtimedatei.",
			"browser.disableNetworkCache.description": "Gibt ab, ob der Netzwerkcache für jede Anfrage übersprungen werden soll",
			"browser.env.description": "Optionales Wörterbuch der Umgebungs-Schlüssel-/Wert-Paare für den Browser.",
			"browser.file.description": "Eine lokale HTML-Datei zum Öffnen im Browser",
			"browser.includeDefaultArgs.description": "Gibt an, ob Standardargumente für den Browserstart (zum Deaktivieren von Features, die das Debuggen erschweren können) beim Start einbezogen werden.",
			"browser.inspectUri.description": "Format zum Neuschreiben von inspectUri: Es handelt sich um eine Vorlagenzeichenfolge, die Schlüssel in \"{curlyBraces}\" interpoliert. Verfügbare Schlüssel:\r\n – \"url.*\" ist die analysierte Adresse der derzeit ausgeführten Anwendung, zum Beispiel \"{url.port}\" oder \"{url.hostname}\".\r\n – \"port\" ist der Debugport, an dem Chrome lauscht.\r\n – \"browserInspectUri\" ist der Inspektor-URI im gestarteten Browser\r\n – \"browserInspectUriPath\" ist der Pfad des Inspektor-URIs im gestarteten Browser (z. B. \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\r\n – \"wsProtocol\" ist das WebSocket-Protokoll, auf das hingewiesen wird. Dies ist auf \"wss\" festgelegt, wenn es sich bei der ursprünglichen URL um eine https-URL handelt. Andernfalls it es auf ws\" festgelegt.\r\n",
			"browser.launch.port.description": "Port, auf dem der Browser lauscht. Der Standardwert lautet \"0\" und führt dazu, dass das Browserdebugging über Pipes durchgeführt wird. Diese Option bietet im Allgemeinen mehr Sicherheit und sollte verwendet werden – es sei denn, Sie müssen den Browser über ein anderes Tool anfügen.",
			"browser.pathMapping.description": "Eine Zuordnung von URLs/Pfaden zu lokalen Ordnern, um Skripts im Browser in Skripts auf dem Datenträger aufzulösen",
			"browser.perScriptSourcemaps.description": "Gibt an, ob Skripts einzeln mit eindeutigen Sourcemaps geladen werden, die den Basisnamen der Quelldatei enthalten. Diese Option kann festgelegt werden, um die Sourcemap-Verarbeitung beim Umgang mit zahlreichen kleinen Skripts zu optimieren. Wenn diese Option auf \"Automatisch\" festgelegt ist, werden bekannte Fälle ermittelt, in denen diese Verarbeitung angemessen ist.",
			"browser.profileStartup.description": "Sofern TRUE, beginnt die Profilerstellung, sobald der Prozess gestartet wird.",
			"browser.restart": "Gibt an, ob die Verbindung erneut hergestellt wird, wenn die Browserverbindung geschlossen wurde.",
			"browser.revealPage": "Registerkarte im Fokus",
			"browser.runtimeArgs.description": "Optionale Argumente, die an die ausführbare Datei der Runtime übergeben werden.",
			"browser.runtimeExecutable.description": "Entweder \"canary\", \"stable\", \"custom\" oder der Pfad zur ausführbaren Browserdatei. \"custom\" steht für einen benutzerdefinierten Wrapper, einen benutzerdefinierten Build oder eine CHROME_PATH-Umgebungsvariable.",
			"browser.runtimeExecutable.edge.description": "Entweder \"canary\", \"stable\", \"dev\", \"custom\" oder der Pfad zur ausführbaren Browserdatei. Mit \"custom\" wird ein benutzerdefinierter Wrapper, ein benutzerdefinierter Build oder die EDGE_PATH-Umgebungsvariable angegeben.",
			"browser.server.description": "Konfiguriert einen Webserver für den Start. Nimmt dieselbe Konfiguration wie die Startaufgabe \"node\".",
			"browser.skipFiles.description": "Ein Array aus Datei- oder Ordnernamen oder Pfadglobs, die beim Debuggen übersprungen werden sollen.",
			"browser.smartStep.description": "Automatisch nicht zugeordnete Zeilen in Sourcemapdateien durchlaufen, z.B. von TypeScript automatisch generierter Code beim Herunterkompilieren von async/await oder anderen Features.",
			"browser.sourceMapPathOverrides.description": "Eine Reihe von Zuordnungen zum Umschreiben der Speicherorte von Quelldateien gemäß Sourcemap in die Speicherorte auf dem Datenträger. Ausführliche Informationen finden Sie in der README-Datei.",
			"browser.sourceMapRenames.description": "Gibt an, ob die Zuordnung \"names\" in Quellzuordnungen verwendet werden soll. Dies erfordert das Anfordern von Quellinhalten, was bei bestimmten Debuggern langsam sein kann.",
			"browser.sourceMaps.description": "Hiermit werden JavaScript-Quellzuordnungsdateien verwendet (sofern vorhanden).",
			"browser.targetSelection": "Gibt an, ob an alle Ziele angefügt werden soll, die dem URL-Filter entsprechen (\"automatic\"), oder ob ein Ziel ausgewählt werden soll (\"pick\").",
			"browser.timeout.description": "Versuchen, erneut eine Verbindung zum Browser innerhalb der angegebenen Zeit in Millisekunden herzustellen. Der Standardwert ist 10.000 ms.",
			"browser.url.description": "Sucht nach einer Registerkarte mit genau dieser URL, und fügt sie an, falls gefunden",
			"browser.urlFilter.description": "Suchen Sie nach einer Seite mit dieser URL, und führen Sie eine Anfügung daran durch, wenn sie gefunden wird. Darf * als Platzhalter enthalten.",
			"browser.userDataDir.description": "Standardmäßig wird der Browser mit einem separaten Benutzerprofil in einem temporären Ordner gestartet. Verwenden Sie diese Option, um dies zu überschreiben. Legen Sie diesen Wert auf „false“ fest, um mit Ihrem Standardbenutzerprofil zu starten. Ein neuer Browser kann nicht gestartet werden, wenn eine Instanz bereits aus einem userDataDir ausgeführt wird.",
			"browser.vueComponentPaths": "Eine Liste der Globmuster für Dateien zum Suchen von *.vue-Komponenten. Standardmäßig wird der gesamte Arbeitsbereich durchsucht. Eine Angabe ist aufgrund von zusätzlichen Suchvorgängen erforderlich, für die Vue-Sourcemaps in der Vue CLI 4 benötigt werden. Sie können diese Sonderverarbeitung durch Festlegung auf ein leeres Array deaktivieren.",
			"browser.webRoot.description": "Gibt den absoluten Arbeitsbereichspfad zum Webserverstamm an. Wird zur Auflösung von Pfaden wie \"/app.js\" zu Dateien auf dem Datenträger verwendet. Kurzschreibweise für ein pathMapping für \"/\".",
			"chrome.attach.description": "An eine Chrome-Instanz anfügen, die sich bereits im Debugmodus befindet",
			"chrome.attach.label": "Chrome: Anfügen",
			"chrome.label": "Chrome",
			"chrome.launch.description": "Chrome starten, um eine URL zu debuggen",
			"chrome.launch.label": "Chrome: Starten",
			"configuration.autoAttachMode": "Konfiguriert, welche Prozesse automatisch angefügt und gedebuggt werden, wenn \"#debug.node.autoAttach#\" aktiviert ist. Ein mit dem Flag \"--inspect\" gestarteter Node-Prozess wird unabhängig von dieser Einstellung immer angefügt.",
			"configuration.autoAttachMode.always": "Hiermit wird automatisch an jeden Node.js-Prozess angefügt, der im Terminal gestartet wird.",
			"configuration.autoAttachMode.disabled": "Automatisches Anfügen ist deaktiviert und wird nicht in der Statusleiste angezeigt.",
			"configuration.autoAttachMode.explicit": "Hiermit wird nur dann automatisch angefügt, wenn \"--inspect\" angegeben wird.",
			"configuration.autoAttachMode.smart": "Hiermit wird bei Ausführung von Skripts automatisch angefügt, die sich nicht in einem node_modules-Ordner befinden.",
			"configuration.autoAttachSmartPatterns": "Konfiguriert die Globmuster, mit denen ermittelt wird, wann im \"intelligenten\" #debug.javascript.autoAttachFilter#-Modus angefügt werden soll. \"$KNOWN_TOOLS$\" wird durch eine Liste mit Namen von gängigen Test- und Coderunnern ersetzt. [Weitere Informationen finden Sie in der Dokumentation zu VS Code](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
			"configuration.autoExpandGetters": "Hiermit wird konfiguriert, ob Getter für Eigenschaften automatisch erweitert werden sollen. Bei einer Festlegung auf FALSE erscheint der Getter als \"get propertyName\" und wird nur ausgewertet, wenn Sie darauf klicken.",
			"configuration.automaticallyTunnelRemoteServer": "Beim Debuggen einer Remote-Web-App wird konfiguriert, ob der Remoteserver automatisch auf den lokalen Computer getunnelt werden soll.",
			"configuration.breakOnConditionalError": "Gibt an, ob der Vorgang beendet werden soll, wenn bedingte Haltepunkte einen Fehler auslösen.",
			"configuration.debugByLinkOptions": "Optionen, die verwendet werden, wenn beim Debuggen innerhalb des Terminals auf geöffnete Links geklickt wird. Legen Sie diese Einstellung auf \"false\" fest, um dieses Verhalten zu deaktivieren.",
			"configuration.defaultRuntimeExecutables": "Der Standardwert für \"runtimeExecutable\", der für Startkonfigurationen verwendet wird, falls nicht angegeben. Dies kann zum Konfigurieren von benutzerdefinierten Pfaden für Node.js- oder Browserinstallationen verwendet werden.",
			"configuration.npmScriptLensLocation": "Wo in Ihren npm-Skripts \"Ausführen\" und \"Debuggen\" für CodeLens angezeigt werden soll. Mögliche Einstellungen sind \"Alle\" Skripts, \"Oben\" im Skriptabschnitt oder \"Keine\".",
			"configuration.pickAndAttachOptions": "Standardoptionen, die beim Debuggen eines Prozesses über den Befehl \"Debuggen: An Node.js-Prozess anfügen\" verwendet werden",
			"configuration.resourceRequestOptions": "Anforderungsoptionen, die beim Laden von Ressourcen wie z. B. Quellzuordnungsdateien im Debugger verwendet werden sollen. Diese müssen möglicherweise konfiguriert werden, wenn Ihre Quellzuordnungsdateien eine Authentifizierung erfordern oder ein selbstsigniertes Zertifikat verwenden. Optionen werden zum Erstellen einer Anforderung mithilfe der [„got“](https://github.com/sindresorhus/got)-Bibliothek verwendet.\r\n\r\nEin gängiger Fall ist beispielsweise das Deaktivieren der Zertifikatüberprüfung durch Übergabe von „{ „https\": { „rejectUnauthorized\": false } }“.",
			"configuration.suggestPrettyPrinting": "Gibt an, ob JavaScript-Code, der bei Einzelschritten verkleinert aussieht, automatisch strukturiert und eingerückt werden soll.",
			"configuration.terminalOptions": "Standardstartoptionen für das JavaScript-Debug-Terminal und die npm-Skripts.",
			"configuration.unmapMissingSources": "Konfiguriert, ob die Zuordnung einer Sourcemapdatei, in der die ursprüngliche Datei nicht gelesen werden kann, automatisch aufgehoben wird. Wenn dieser Wert FALSE ist (Standard), wird eine Eingabeaufforderung angezeigt.",
			"createDiagnostics.label": "Haltepunktprobleme diagnostizieren",
			"customDescriptionGenerator.description": "Passen Sie die Textbeschreibung an, die der Debugger für Objekte (z. B. lokale Variablen) anzeigt. Beispiele:\r\n      1. this.toString() // Ruft \"toString\" auf, um alle Objekte zu drucken.\r\n      2. this.customDescription ? this.customDescription() : defaultValue // Verwendet bei Verfügbarkeit die customDescription-Methode und gibt andernfalls den defaultValue-Wert zurück.\r\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Verwendet bei Verfügbarkeit die customDescription-Methode und gibt andernfalls den defaultValue-Wert zurück.\r\n      ",
			"customPropertiesGenerator.description": "Passen Sie die Eigenschaften an, die für ein Objekt im Debugger angezeigt werden (lokale Variablen usw.). Beispiele:\r\n    1. { ...this, extraProperty: '12345' } // Zusätzliche Eigenschaft \"12345\" zu allen Objekten hinzufügen.\r\n    2. this.customProperties ? this.customProperties() : this // customProperties-Methode (falls verfügbar) verwenden, andernfalls Verwendung der this-Eigenschaften (der Standardeigenschaften)\r\n    3. function () { return this.customProperties ? this.customProperties() : this } // customDescription-Methode verwenden (falls verfügbar), andernfalls Standardeigenschaften zurückgeben.\r\n\r\n    Veraltet: Dies ist eine temporäre Implementierung des Features, bis wir die Zeit haben, sie wie hier beschrieben zu implementieren: https://github.com/microsoft/vscode/issues/102181",
			"debug.npm.edit": "package.json bearbeiten",
			"debug.npm.noScripts": "In Ihrer package.json-Datei wurden keine npm-Skripts gefunden.",
			"debug.npm.noWorkspaceFolder": "Sie müssen einen Arbeitsbereichsordner öffnen, um npm-Skripts zu debuggen.",
			"debug.npm.parseError": "Fehler beim Lesen von {0}: {1}",
			"debug.npm.script": "npm-Skript debuggen",
			"debug.terminal.attach": "An Node.js-Terminalprozess anfügen",
			"debug.terminal.label": "JavaScript-Debugterminal",
			"debug.terminal.program.description": "Befehl zur Ausführung im gestarteten Terminal. Falls dieser nicht vorhanden ist, öffnet sich das Terminal, ohne ein Programm zu starten.",
			"debug.terminal.snippet.label": "\"npm start\" in einem Debug-Terminal ausführen",
			"debug.terminal.toggleAuto": "Automatisches Anfügen von Node.js für Terminal umschalten",
			"debug.terminal.welcome": "[JavaScript-Debugterminal](command:extension.js-debug.createDebuggerTerminal)\r\n\r\nMit dem JavaScript-Debugterminal können Sie Node.js-Prozesse debuggen, die in der Befehlszeile ausgeführt werden.",
			"debug.terminal.welcomeWithLink": "[JavaScript-Debugterminal](command:extension.js-debug.createDebuggerTerminal)\r\n\r\nMit dem JavaScript-Debugterminal können Sie Node.js-Prozesse debuggen, die in der Befehlszeile ausgeführt werden.\r\n\r\n[Debug-URL](command:extension.js-debug.debugLink)",
			"debugLink.label": "Link öffnen",
			"edge.address.description": "Beim Debuggen von Webansichten die IP-Adresse oder der Hostname, auf die bzw. den die Webansicht lauscht. Sofern nicht festgelegt, wird eine automatische Erkennung durchgeführt.",
			"edge.attach.description": "An eine Microsoft Edge-Instanz anfügen, die sich bereits im Debugmodus befindet",
			"edge.attach.label": "Edge: Anfügen",
			"edge.label": "Edge",
			"edge.launch.description": "Microsoft Edge zum Debuggen einer URL starten",
			"edge.launch.label": "Edge: Starten",
			"edge.port.description": "Beim Debuggen von Webansichten der Port, auf den die Webansicht lauscht. Sofern nicht festgelegt, wird eine automatische Erkennung durchgeführt.",
			"edge.useWebView.description": "(nur Microsoft Edge [Chromium]) Falls TRUE, behandelt der Debugger die ausführbare Runtimedatei wie eine Hostanwendung, die eine WebView enthält, mit der Sie den WebView-Skriptinhalt debuggen können.",
			"enableContentValidation.description": "Aktiviert oder deaktiviert die Überprüfung, ob die Inhalte von Dateien auf dem Datenträger mit denen der zur Laufzeit geladenen Dateien übereinstimmt. Dies ist in einer Vielzahl von Szenarios hilfreich und in einigen Fällen erforderlich, kann jedoch Probleme verursachen, wenn Sie beispielsweise eine serverseitige Transformation von Skripts durchführen.",
			"errors.timeout": "{0}: Timeout nach {1} ms",
			"extension.description": "Erweiterung zum Debuggen von Node.js-Programmen und Chrome.",
			"extensionHost.label": "VS Code-Erweiterungsentwicklung",
			"extensionHost.launch.config.name": "Erweiterung starten",
			"extensionHost.launch.debugWebWorkerHost": "Konfiguriert, ob ein Versuch zum Anfügen an den Webworker-Erweiterungshost unternommen werden soll.",
			"extensionHost.launch.debugWebviews": "Konfiguriert, ob versucht werden soll, Webviews in der gestarteten VS Code-Instanz anzufügen. Dies funktioniert nur in Desktop-VS Code.",
			"extensionHost.launch.env.description": "Umgebungsvariablen, die an den Erweiterungshost übergeben werden.",
			"extensionHost.launch.rendererDebugOptions": "Chrome-Startoptionen, die beim Anfügen an den Rendererprozess mit \"debugWebviews\" oder \"debugWebWorkerHost\" verwendet werden.",
			"extensionHost.launch.runtimeExecutable.description": "Absoluter Pfad zu VS Code.",
			"extensionHost.launch.stopOnEntry.description": "Hiermit wird der Erweiterungshost nach dem Start automatisch beendet.",
			"extensionHost.snippet.launch.description": "VS Code-Erweiterung im Debugmodus starten",
			"extensionHost.snippet.launch.label": "VS Code-Erweiterungsentwicklung",
			"longPredictionWarning.disable": "Nicht mehr anzeigen",
			"longPredictionWarning.message": "Es dauert einen Moment, Ihre Haltepunkte zu konfigurieren. Sie können den Vorgang beschleunigen, indem Sie die das outFiles-Attribut in der Datei \"launch.json\" aktualisieren.",
			"longPredictionWarning.noFolder": "Kein Ordner des Arbeitsbereichs geöffnet.",
			"longPredictionWarning.open": "\"launch.json\" öffnen",
			"node.address.description": "Die TCP/IP-Adresse des zu debuggenden Prozesses. Der Standardwert ist \"localhost\".",
			"node.attach.attachExistingChildren.description": "Gibt an, ob versucht werden soll, bereits erstellte untergeordnete Prozesse anzufügen.",
			"node.attach.attachSpawnedProcesses.description": "Ob Umgebungsvariablen im angefügten Prozess festgelegt werden sollen, um generierte untergeordnete Elemente nachzuverfolgen.",
			"node.attach.config.name": "Anfügen",
			"node.attach.continueOnAttach": "Falls TRUE, werden automatisch gestartete Programme fortgesetzt, und es wird auf --inspect-brk gewartet",
			"node.attach.processId.description": "Die ID des Prozesses für das Anfügen.",
			"node.attach.restart.description": "Hiermit wird versucht, erneut eine Verbindung mit dem Programm herzustellen, wenn diese unterbrochen wurde. Bei Festlegung auf TRUE wird für unbestimmte Zeit einmal pro Sekunde ein erneuter Versuch durchgeführt. Sie können das Intervall und die maximale Anzahl von Versuchen anpassen, indem Sie stattdessen in einem Objekt \"delay\" und \"maxAttempts\" angeben.",
			"node.attachSimplePort.description": "Sofern festgelegt, erfolgt über den angegebenen Port eine Anfügung an den Prozess. Dies ist in der Regel für Node.js-Programme nicht mehr erforderlich, und es besteht nicht mehr die Möglichkeit zur Problembehandlung untergeordneter Prozesse. In Szenarien mit Deno- und Docker-Starts kann die Anfügung jedoch nützlich sein. Bei Festlegung auf 0 wird ein Port nach dem Zufallsprinzip ausgewählt, und \"--inspect-brk\" wird den Startargumenten automatisch hinzugefügt.",
			"node.console.title": "Node-Debugging-Konsole",
			"node.disableOptimisticBPs.description": "Hiermit werden Haltepunkte in einer beliebigen Datei erst festgelegt, wenn eine Sourcemap für diese Datei geladen wurde.",
			"node.killBehavior.description": "Konfiguriert, wie Debugprozesse beim Sitzungsende beendet wird. Mögliche Optionen:\r\n\r\n– forceful (Standardeinstellung): Der Abbruch der Prozessstruktur wird erzwungen. Unter POSIX wird SIGKILL gesendet, unter Windows „taskkill.exe/F\".\r\n– polite: Die Prozessstruktur wird ordnungsgemäß beendet. Prozesse ohne Standardverhalten werden nach dem Herunterfahren möglicherweise weiterhin ausgeführt. Unter POSIX wird SIGTERM gesendet, unter Windows „taskkill.exe“ ohne „/F(force)-Flag“.\r\n– none: Es erfolgt keine Beendigung.",
			"node.label": "Node.js",
			"node.launch.args.description": "Befehlszeilenargumente, die an das Programm übergeben werden.",
			"node.launch.autoAttachChildProcesses.description": "Debugger automatisch an neue Unterprozesse anfügen.",
			"node.launch.config.name": "Starten",
			"node.launch.console.description": "Startort des Debugziels",
			"node.launch.console.externalTerminal.description": "Ein externes Terminal, das über die Benutzereinstellungen konfiguriert werden kann",
			"node.launch.console.integratedTerminal.description": "Das integrierte Terminal von VS Code",
			"node.launch.console.internalConsole.description": "Die Debugging-Konsole von VS Code (die das Lesen von Eingaben von einem Programm nicht unterstützt)",
			"node.launch.cwd.description": "Absoluter Pfad zum Arbeitsverzeichnis des Programms, das gedebuggt wird. Wenn Sie \"localRoot\" festgelegt haben, entspricht CWD diesem Wert, andernfalls wird CWD auf \"workspaceFolder\" zurückgesetzt.",
			"node.launch.env.description": "Umgebungsvariablen, die an das Programm übergeben werden. Durch den Wert NULL wird die Variable aus der Umgebung entfernt.",
			"node.launch.envFile.description": "Absoluter Pfad zu einer Datei mit Umgebungsvariablendefinitionen.",
			"node.launch.logging": "Protokollierungskonfiguration",
			"node.launch.logging.cdp": "Pfad zur Protokolldatei für Chrome DevTools Protocol-Nachrichten",
			"node.launch.logging.dap": "Pfad zur Protokolldatei für Nachrichten des Debug Adapter Protocol",
			"node.launch.outputCapture.description": "Hiermit wird angegeben, wo Ausgabemeldungen erfasst werden. Bei Festlegung auf \"console\" ist dies die standardmäßige Debug-API, bei Festlegung auf \"std\" werden die stdout/stderr-Streams verwendet.",
			"node.launch.program.description": "Der absolute Pfad zum Programm. Der generierte Wert wird anhand von \"package.json\" und geöffneter Dateien geschätzt. Bearbeiten Sie dieses Attribut.",
			"node.launch.restart.description": "Wenn das Programm mit einem Exitcode ungleich Null beendet wird, versuchen Sie, es neu zu starten.",
			"node.launch.runtimeArgs.description": "Optionale Argumente, die an die ausführbare Datei der Runtime übergeben werden.",
			"node.launch.runtimeExecutable.description": "Die Runtime, die verwendet werden soll: Geben Sie entweder einen absoluten Pfad oder den Namen einer im Pfad verfügbaren Runtime an. Wenn keine Angabe erfolgt, wird \"node\" angenommen.",
			"node.launch.runtimeSourcemapPausePatterns": "Eine Liste von Mustern zum manuellen Einfügen von Haltepunkten am Einstiegspunkt. Damit kann der Debugger Haltepunkte festlegen, wenn Quellzuordnungsdateien verwendet werden, die nicht vorhanden sind oder vor dem Start nicht erkannt werden können, wie z. B. beim [Serverless Framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
			"node.launch.runtimeVersion.description": "Die Version der node-Runtime, die verwendet werden soll. Benötigt \"nvm\".",
			"node.launch.useWSL.deprecation": "\"useWSL\" ist veraltet und wird demnächst nicht mehr unterstützt. Verwenden Sie stattdessen die Erweiterung \"Remote – WSL\".",
			"node.launch.useWSL.description": "Verwenden Sie das Windows-Subsystem für Linux.",
			"node.localRoot.description": "Pfad zum lokalen Verzeichnis mit dem Programm.",
			"node.pauseForSourceMap.description": "Gibt an, ob für jedes eingehende Skript gewartet werden soll, bis die Quellzuordnungsdateien geladen wurden. Dieser Vorgang führt zu einem Leistungsaufwand und ist möglicherweise sicher deaktiviert, wenn er auf einem Datenträger ausgeführt wird, solange \"rootPath\" nicht deaktiviert ist.",
			"node.port.description": "Debugport für das Anfügen. Der Standardwert ist 9229.",
			"node.processattach.config.name": "An Prozess anfügen",
			"node.profileStartup.description": "Sofern TRUE, beginnt die Profilerstellung, sobald der Prozess gestartet wird",
			"node.remoteRoot.description": "Absoluter Pfad zum Remoteverzeichnis mit dem Programm.",
			"node.resolveSourceMapLocations.description": "Eine Liste von Minimatchmustern für Speicherorte (Ordner und URLs), in denen Quellzuordnungsdateien zum Auflösen lokaler Dateien verwendet werden können. Damit lassen sich vermeiden, dass der Code aus externen Quellzuordnungsdateien falsch umgebrochen wird. Sie können Mustern ein \"!\" voranstellen, um sie auszuschließen. Die Einstellung kann auf ein leeres Array oder NULL gesetzt werden, um Einschränkungen zu vermeiden.",
			"node.showAsyncStacks.description": "Hiermit werden die asynchronen Aufrufe angezeigt, die zur aktuellen Aufrufliste geführt haben.",
			"node.snippet.attach.description": "An ein ausgeführtes Node-Programm anfügen",
			"node.snippet.attach.label": "Node.js: Anfügen",
			"node.snippet.attachProcess.description": "Prozessauswahl zum Auswählen des Node-Prozesses zum Anfügen öffnen",
			"node.snippet.attachProcess.label": "Node.js: An Prozess anfügen",
			"node.snippet.electron.description": "Electron-Hauptprozess debuggen",
			"node.snippet.electron.label": "Node.js: Electron-Hauptprozess",
			"node.snippet.gulp.description": "Gulp-Aufgabe debuggen (in Ihrem Projekt muss ein lokales Gulp installiert sein)",
			"node.snippet.gulp.label": "Node.js: Gulp-Aufgabe",
			"node.snippet.launch.description": "Node-Programm im Debugmodus starten",
			"node.snippet.launch.label": "Node.js: Programm starten",
			"node.snippet.mocha.description": "Mocha-Tests debuggen",
			"node.snippet.mocha.label": "Node.js: Mocha-Tests",
			"node.snippet.nodemon.description": "Verwenden Sie Nodemon zum erneuten Starten einer Debugsitzung bei Quellenänderungen.",
			"node.snippet.nodemon.label": "Node.js: Nodemon-Einrichtung",
			"node.snippet.npm.description": "Node-Programme über das npm-Skript \"debug\" starten",
			"node.snippet.npm.label": "Node.js: Über npm starten",
			"node.snippet.remoteattach.description": "An den Debugport eines Remote-Node-Programms anfügen",
			"node.snippet.remoteattach.label": "Node.js: An Remote-Programm anfügen",
			"node.snippet.yo.description": "Yeoman-Generator debuggen (Installation erfolgt durch Ausführen von \"npm link\" im Projektordner)",
			"node.snippet.yo.label": "Node.js: Yeoman-Generator",
			"node.sourceMapPathOverrides.description": "Eine Gruppe von Mappings, mit denen die in der Sourcemap angegebenen Pfade der Quelldateien in ihre Pfade auf dem Datenträger umgeschrieben werden.",
			"node.sourceMaps.description": "Hiermit werden JavaScript-Quellzuordnungsdateien verwendet (sofern vorhanden).",
			"node.stopOnEntry.description": "Hiermit wird das Programm nach dem Start automatisch beendet.",
			"node.timeout.description": "Gibt den Zeitraum in Millisekunden an, nach dem erneut versucht wird, eine Verbindung mit Node.js herzustellen. Der Standardwert ist 10000 ms.",
			"node.versionHint.description": "Ermöglicht Ihnen die explizite Angabe der ausgeführten Knotenversion, die zum Deaktivieren oder Aktivieren bestimmter Verhaltensweisen verwendet werden kann, wenn die automatische Versionserkennung nicht funktioniert.",
			"node.websocket.address.description": "Genaue WebSocket-Adresse für den Anfügevorgang. Bei fehlender Angabe wird sie aus der Adresse und dem Port ermittelt.",
			"openEdgeDevTools.label": "Browser DevTools öffnen",
			"outFiles.description": "Wenn Quellzuordnungsdateien aktiviert sind, geben diese Globmuster die generierten JavaScript-Dateien an. Wenn ein Muster mit \"!\" beginnt, werden die Dateien ausgeschlossen. Sofern nicht angegeben, wird der generierte Code im selben Verzeichnis wie die zugehörige Quelle erwartet.",
			"pretty.print.script": "Schöndruck zum Debuggen",
			"profile.start": "Leistungsprofil übernehmen",
			"profile.stop": "Leistungsprofil beenden",
			"remove.browser.breakpoint": "Browserhaltepunkt entfernen",
			"remove.browser.breakpoint.all": "Alle Browserhaltepunkte entfernen",
			"requestCDPProxy.label": "CDP-Proxy für Debugsitzung anfordern",
			"skipFiles.description": "Ein Array für Globmuster für Dateien, die beim Debuggen übersprungen werden. Das Muster \"<node_internals>/**\" stimmt mit allen internen Node.js-Modulen überein.",
			"smartStep.description": "Hiermit wird automatisch der generierte Code durchlaufen, der nicht der ursprünglichen Quelle zugeordnet werden kann.",
			"start.with.stop.on.entry": "Debuggen starten und beim Eintrag beenden",
			"startWithStopOnEntry.label": "Debuggen starten und beim Eintrag beenden",
			"timeouts.generalDescription": "Zeitlimits für mehrere Debuggervorgänge.",
			"timeouts.generalDescription.markdown": "Zeitlimits für mehrere Debuggervorgänge.",
			"timeouts.sourceMaps.description": "Zeitlimits in Bezug auf Quellzuordnungsvorgänge.",
			"timeouts.sourceMaps.sourceMapCumulativePause.description": "Die zusätzliche Zeit in Millisekunden, die pro Sitzung auf die Verarbeitung von Quellzuordnungen gewartet wird, nachdem der Mindestzeitraum (sourceMapMinPause) abgelaufen ist.",
			"timeouts.sourceMaps.sourceMapMinPause.description": "Mindestzeit in Millisekunden, die auf die Verarbeitung der einzelnen Quellzuordnungen gewartet wird, wenn ein Skript analysiert wird.",
			"toggle.skipping.this.file": "Überspringen dieser Datei aktivieren/deaktivieren",
			"trace.boolean.description": "Die Überwachung kann auf TRUE gesetzt werden, um Diagnoseprotokolle auf den Datenträger zu schreiben.",
			"trace.console.description": "Konfiguriert, ob Protokolle auch an die Debugging-Konsole zurückgegeben werden.",
			"trace.description": "Konfiguriert, welche Diagnoseausgabe erzeugt wird.",
			"trace.level.description": "Konfiguriert die Ebene der aufgezeichneten Protokolle.",
			"trace.logFile.description": "Konfiguriert, wo auf dem Datenträger Protokolle geschrieben werden.",
			"trace.stdio.description": "Gibt an, ob Ablaufverfolgungsdaten aus der gestarteten Anwendung oder dem gestarteten Browser zurückgegeben werden sollen.",
			"trace.tags.description": "Konfiguriert, welche Arten von Protokollen aufgezeichnet werden.",
			"workspaceTrust.description": "Um Code in diesem Arbeitsbereich zu debuggen, ist eine Vertrauensstellung erforderlich."
		}
	}
}