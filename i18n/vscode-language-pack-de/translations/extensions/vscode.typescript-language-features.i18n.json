{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"bundle": {
			"(loading...)/Prefix displayed for hover entries while the server is still loading": "(loading...)",
			"...1 additional file not shown": "...1 weitere Datei wird nicht angezeigt",
			"...{0} additional files not shown": "...{0} weitere Dateien werden nicht angezeigt",
			"1 implementation": "1 implementation",
			"1 reference": "1 reference",
			"Acquiring typings definitions for IntelliSense./Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Eingabedefinitionen für IntelliSense werden abgerufen.",
			"Acquiring typings.../Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Acquiring typings...",
			"Add all missing imports": "Alle fehlenden Importe hinzufügen",
			"Allow": "Allow",
			"Always automatically update imports": "Importe immer automatisch aktualisieren",
			"An error occurred while renaming file": "Beim Umbenennen der Datei ist ein Fehler aufgetreten.",
			"Checking for update of JS/TS imports": "Überprüfung der Aktualisierung der JS/TS-Importe",
			"Configure Excludes": "Configure Excludes",
			"Configure jsconfig.json": "Configure jsconfig.json",
			"Configure tsconfig.json": "Configure tsconfig.json",
			"Could not apply refactoring": "Umgestaltung nicht möglich",
			"Could not determine TypeScript or JavaScript project": "TypeScript- oder JavaScript-Projekt konnte nicht ermittelt werden.",
			"Could not determine TypeScript or JavaScript project. Unsupported file type": "TypeScript- oder JavaScript-Projekt konnte nicht ermittelt werden. Nicht unterstützter Dateityp.",
			"Could not determine references": "Verweise konnten nicht bestimmt werden",
			"Could not install typings files for JavaScript language features. Please ensure that NPM is installed, or configure 'typescript.npm' in your user settings. Alternatively, check the [documentation]({0}) to learn more.": "Could not install typings files for JavaScript language features. Please ensure that NPM is installed, or configure 'typescript.npm' in your user settings. Alternatively, check the [documentation]({0}) to learn more.",
			"Could not load the TypeScript version at this path": "Die TypeScript-Version konnte unter diesem Pfad nicht geladen werden.",
			"Could not open TS Server log file": "Die TS-Server-Protokolldatei konnte nicht geöffnet werden.",
			"Create jsconfig": "Create jsconfig",
			"Create tsconfig": "Create tsconfig",
			"Disable logging": "Disable logging",
			"Disables semantic checking in a JavaScript file. Must be at the top of a file.": "Deaktiviert die Semantiküberprüfung in einer JavaScript-Datei. Muss sich oben in einer Datei befinden.",
			"Dismiss": "Dismiss",
			"Don't Show Again": "Don't Show Again",
			"Don't show again": "Don't show again",
			"Enable logging and restart TS server": "Aktiviert die Protokollierung und startet den TS-Server neu.",
			"Enables semantic checking in a JavaScript file. Must be at the top of a file.": "Aktiviert die Semantiküberprüfung in einer JavaScript-Datei. Muss sich oben in einer Datei befinden.",
			"Extract to constant": "Extract to constant",
			"Extract to function": "Extract to function",
			"Failed to resolve {0} as module": "Fehler beim Auflösen von {0} als Modul",
			"Fetching data for better TypeScript IntelliSense": "Daten werden zum Optimieren von TypeScript IntelliSense abgerufen",
			"File is not part of a JavaScript project. View the [jsconfig.json documentation]({0}) to learn more.": "Die Datei ist nicht Teil eines JavaScript-Projekts. Weitere Informationen finden Sie in der [jsconfig.json-Dokumentation]({0}).",
			"File is not part of a TypeScript project. View the [tsconfig.json documentation]({0}) to learn more.": "Die Datei ist nicht Teil eines TypeScript-Projekts. Weitere Informationen finden Sie in der [tsconfig.json-Dokumentation]({0}).",
			"File is not part opened folders": "Datei ist kein Teil geöffneter Ordner",
			"Find file references failed. No resource provided.": "Fehler beim Suchen nach Dateiverweisen. Es wurde keine Ressource angegeben.",
			"Find file references failed. Requires TypeScript 4.2+.": "Fehler beim Suchen nach Dateiverweisen. Erfordert TypeScript 4.2+.",
			"Find file references failed. Unknown file type.": "Fehler beim Suchen nach Dateiverweisen. Unbekannter Dateityp.",
			"Find file references failed. Unsupported file type.": "Fehler beim Suchen nach Dateiverweisen. Nicht unterstützter Dateityp.",
			"Finding file references": "Finding file references",
			"Finding source definitions": "Finding source definitions",
			"Fix all fixable JS/TS issues": "Alle behebbaren JS/TS-Probleme beheben",
			"Follow link": "Follow link",
			"Go to Source Definition failed. No resource provided.": "Gehe zu Quelldefinition fehlgeschlagen. Keine Ressource bereitgestellt.",
			"Go to Source Definition failed. Requires TypeScript 4.7+.": "Gehe zu Quelldefinition fehlgeschlagen. Erfordert TypeScript 4.7+.",
			"Go to Source Definition failed. Unknown file type.": "Gehe zu Quelldefinition fehlgeschlagen. Unbekannter Dateityp.",
			"Go to Source Definition failed. Unsupported file type.": "Gehe zu Quelldefinition fehlgeschlagen. Nicht unterstütztes Dateiformat.",
			"Initializing JS/TS language features": "Sprachfeatures von JavaScript bzw. TypeScript werden initialisiert",
			"JS/TS IntelliSense Status": "JS/TS IntelliSense Status",
			"JSDoc comment": "JSDoc comment",
			"Learn More": "Learn More",
			"Learn more about JS/TS refactorings": "Weitere Informationen zu JS/TS-Refactorings",
			"Learn more about managing TypeScript versions": "Weitere Informationen zum Verwalten von TypeScript-Versionen",
			"Loading IntelliSense status": "Loading IntelliSense status",
			"Never automatically update imports": "Importe nie automatisch aktualisieren",
			"Never in this Workspace": "Nie in diesem Arbeitsbereich",
			"No": "No",
			"No jsconfig": "No jsconfig",
			"No opened folders": "No opened folders",
			"No source definitions found.": "Keine Definitionen gefunden.",
			"No tsconfig": "No tsconfig",
			"Open config file": "Open config file",
			"Organize Imports": "Organize Imports",
			"Organize Imports failed. No resource provided.": "Fehler beim Organisieren von Importen. Es wurde keine Ressource bereitgestellt.",
			"Organize Imports failed. Unknown file type.": "Fehler beim Organisieren von Importen. Unbekannter Dateityp.",
			"Partial Mode": "Partial Mode",
			"Please open a folder in VS Code to use a TypeScript or JavaScript project": "Öffnen Sie einen Ordner in VS Code, um ein TypeScript- oder JavaScript-Projekt zu verwenden.",
			"Please update your TypeScript version": "Bitte aktualisieren Sie Ihre TypeScript-Version.",
			"Project Wide IntelliSense not available": "Projektweites IntelliSense nicht verfügbar",
			"Reload VS Code": "Reload VS Code",
			"Remove Unused Imports": "Remove Unused Imports",
			"Remove all unused code": "Gesamten nicht verwendeten Code entfernen",
			"Report Issue": "Report Issue",
			"Select Version": "Select Version",
			"Select code action to apply": "Anzuwendende Codeaktion auswählen",
			"Select the TypeScript version used for JavaScript and TypeScript language features": "Wählen Sie die für die JavaScript- und TypeScript-Sprachfunktionen verwendete TypeScript-Version aus.",
			"Sort Imports": "Sort Imports",
			"Suppresses @ts-check errors on the next line of a file, expecting at least one to exist.": "Unterdrückt @ts-check-Fehler in der nächsten Zeile einer Datei und erwartet, dass mindestens einer vorhanden ist.",
			"Suppresses @ts-check errors on the next line of a file.": "Unterdrückt @ts-check-Fehler in der nächsten Zeile einer Datei.",
			"TS Server has not started logging.": "TS Server hat noch nicht mit der Protokollierung begonnen.",
			"TS Server logging is currently enabled which may impact performance.": "Die TS Server-Protokollierung ist derzeit aktiviert. Das kann Auswirkungen auf die Leistung haben.",
			"TS Server logging is off. Please set 'typescript.tsserver.log' and restart the TS server to enable logging": "TS Server logging is off. Please set 'typescript.tsserver.log' and restart the TS server to enable logging",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.": "Der JS/TS-Sprachdienst ist in den letzten fünf Minuten fünfmal abgestürzt.",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.\r\nThis may be caused by a plugin contributed by one of these extensions: {0}": "Der JS/TS-Sprachdienst ist in den letzten fünf Minuten fünfmal abgestürzt.\r\nDies kann durch ein Plug-In von einer dieser Erweiterungen verursacht werden: {0}",
			"The JS/TS language service crashed.": "Der JS/TS-Sprachdienst ist abgestürzt.",
			"The JS/TS language service crashed.\r\nThis may be caused by a plugin contributed by one of these extensions: {0}": "Der JS/TS-Sprachdienst ist abgestürzt.\r\nDies kann durch ein Plug-In von einer dieser Erweiterungen verursacht werden: {0}",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.": "Der JS/TS-Sprachdienst ist sofort fünfmal abgestürzt. Der Dienst wird nicht neu gestartet.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.\r\nThis may be caused by a plugin contributed by one of these extensions: {0}": "Der JS/TS-Sprachdienst ist sofort fünfmal abgestürzt. Der Dienst wird nicht neu gestartet.\r\nDies kann durch ein Plug-In von einer dieser Erweiterungen verursacht werden: {0}",
			"The current selection cannot be extracted": "Die aktuelle Auswahl kann nicht extrahiert werden.",
			"The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.": "Der Pfad \"{0}\" zeigt nicht auf eine gültige tsserver-Installation. Fallback auf gebündelte TypeScript-Version wird durchgeführt.",
			"The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.', tsServerPath": "The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.', tsServerPath",
			"The workspace is using an old version of TypeScript ({0}).\r\n\r\nBefore reporting an issue, please update the workspace to use the latest stable TypeScript release to make sure the bug has not already been fixed.": "Der Arbeitsbereich verwendet eine alte Version von TypeScript ({0}).\r\n\r\nBevor Sie ein Problem melden, aktualisieren Sie den Arbeitsbereich, sodass die neueste stabile Version verwendet und sichergestellt wird, dass der Fehler nicht bereits behoben wurde.",
			"This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?": "Dieser Arbeitsbereich enthält eine TypeScript-Version. Möchten Sie die TypeScript-Version des Arbeitsbereichs für TypeScript- und JavaScript-Sprachfeatures verwenden?",
			"To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}": "Um die JavaScript/TypeScript-Sprachfunktionen für das gesamte Projekt zu aktivieren, schließen Sie Ordner mit vielen Dateien aus. Beispiel: {0}",
			"To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.": "Um JavaScript/TypeScript-Sprachfunktionen für das gesamte Projekt zu aktivieren, schließen Sie große Ordner mit Quelldateien aus, an denen Sie nicht arbeiten.",
			"Try Debugging Anyway": "Try Debugging Anyway",
			"TypeScript Server Log": "TypeScript Server Log",
			"TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"": "Die TypeScript-Task in tasks.json enthält \"\\\\\". Für TypeScript-Tasks in tsconfig muss \"/\" verwendet werden.",
			"TypeScript Version": "TypeScript Version",
			"TypeScript language server exited with error. Error message is: {0}": "Der TypeScript-Sprachserver wurde durch einen Fehler beendet. Fehlermeldung: {0}",
			"TypeScript: Configure Excludes": "TypeScript: Configure Excludes",
			"Update imports for '{0}'?": "Importe für \"{0}\" aktualisieren?",
			"Update imports for the following {0} files?": "Importe für die folgenden {0}-Dateien aktualisieren?",
			"Use VS Code's Version": "Version von VS Code verwenden",
			"Use Workspace Version": "Use Workspace Version",
			"VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code.": "Der tsserver von VS Code wurde von einer anderen Anwendung wie etwa einem fehlerhaften Tool zur Viruserkennung gelöscht. Führen Sie eine Neuinstallation von VS Code durch.",
			"We couldn't find Node.js on this computer. If you just installed it, you might need to reload VS Code.": "Node.js wurde auf diesem Computer nicht gefunden. Wenn Sie es gerade installiert haben, müssen Sie möglicherweise VS Code neu laden.",
			"Yes": "Yes",
			"build - {0}": "build - {0}",
			"invalid version": "invalid version",
			"watch - {0}": "watch - {0}",
			"{0} (Fix all in file)": "{0} (Behebe alle in Datei)",
			"{0} implementations": "{0} implementations",
			"{0} references": "{0} references"
		},
		"package": {
			"codeActions.refactor.extract.constant.description": "Ausdruck in Konstante extrahieren",
			"codeActions.refactor.extract.constant.title": "Extract constant",
			"codeActions.refactor.extract.function.description": "Ausdruck in Methode oder Funktion extrahieren",
			"codeActions.refactor.extract.function.title": "Extract function",
			"codeActions.refactor.extract.interface.description": "Typ in eine Schnittstelle extrahieren",
			"codeActions.refactor.extract.interface.title": "Extract interface",
			"codeActions.refactor.extract.type.description": "Typ in einen Typalias extrahieren",
			"codeActions.refactor.extract.type.title": "Extract type",
			"codeActions.refactor.move.newFile.description": "Ausdruck in eine neue Datei verschieben",
			"codeActions.refactor.move.newFile.title": "In neue Datei verschieben",
			"codeActions.refactor.rewrite.arrow.braces.description": "Klammern in einer Pfeilfunktion hinzufügen oder entfernen",
			"codeActions.refactor.rewrite.arrow.braces.title": "Rewrite arrow braces",
			"codeActions.refactor.rewrite.export.description": "Zwischen Standardexport und benanntem Export konvertieren",
			"codeActions.refactor.rewrite.export.title": "Convert export",
			"codeActions.refactor.rewrite.import.description": "Zwischen benannten Importen und Namespaceimporten konvertieren",
			"codeActions.refactor.rewrite.import.title": "Convert import",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Parameter in destrukturiertes Objekt konvertieren",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "GET- und SET-Accessoren generieren",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generate accessors",
			"codeActions.source.organizeImports.title": "Organize Imports",
			"configuration.implicitProjectConfig.checkJs": "Aktiviert/deaktiviert die Semantikprüfung bei JavaScript-Dateien. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Aktiviert/deaktiviert \"experimentalDecorators\" in JavaScript-Dateien, die keinem Projekt angehören. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt.",
			"configuration.implicitProjectConfig.module": "Legt das Modulsystem für das Programm fest. Weitere Informationen finden Sie unter https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Aktiviert/deaktiviert [strenge Funktionstypen](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript- und TypeScript-Dateien, die keinem Projekt angehören. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt.",
			"configuration.implicitProjectConfig.strictNullChecks": "Aktiviert/deaktiviert [strenge NULL-Prüfungen](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript- und TypeScript-Dateien, die keinem Projekt angehören. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt.",
			"configuration.implicitProjectConfig.target": "Legen Sie die JavaScript-Zielsprachversion für ausgegebenes JavaScript fest, und schließen Sie Bibliotheksdeklarationen ein. Weitere Informationen finden Sie unter https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.enumMemberValues.enabled": "Aktivieren/Deaktivieren von Inlayhinweisen für Memberwerte in Enumerationsdeklarationen:\r\n```typescript\r\n\r\nenumeration MyValue {\r\nA /* = 0 */;\r\nB /* = 1 */;\r\n}\r\n\r\n```\r\nErfordert die Verwendung von TypeScript 4.4+ im Arbeitsbereich.",
			"configuration.inlayHints.functionLikeReturnTypes.enabled": "Aktivieren/Deaktivieren von Inlayhinweisen für implizite Rückgabetypen für Funktionssignaturen:\r\n```typescript\r\n\r\nFunktion foo() /* :number */ {\r\nreturn Date.now();\r\n} \r\n\r\n```\r\nErfordert die Verwendung von TypeScript 4.4+ im Arbeitsbereich.",
			"configuration.inlayHints.parameterNames.enabled": "Aktivieren/Deaktivieren von Inlayhinweisen für Parameternamen:\r\n```typescript\r\n\r\nparseInt(/* str: */ '123', /* radix: */8)\r\n\r\n```\r\nErfordert die Verwendung von TypeScript 4.4+ im Arbeitsbereich.",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Unterdrückt Hinweise für Parameternamen auf Argumenten, deren Text mit dem Parameternamen identisch ist.",
			"configuration.inlayHints.parameterTypes.enabled": "Aktivieren/Deaktivieren von Inlayhinweisen für implizite Parametertypen:\r\n```typescript\r\n\r\nel.addEventListener('click', e /* :MouseEvent */ => ...)\r\n\r\n```\r\nErfordert die Verwendung von TypeScript 4.4+ im Arbeitsbereich.",
			"configuration.inlayHints.propertyDeclarationTypes.enabled": "Aktivieren/Deaktivieren von Inlayhinweisen für implizite Typen in Eigenschaftsdeklarationen:\r\n```typescript\r\n\r\nclass Foo {\r\n\tprop /* :number */ = Date.now();\r\n}\r\n \r\n```\r\nErfordert die Verwendung von TypeScript 4.4+ im Arbeitsbereich.",
			"configuration.inlayHints.variableTypes.enabled": "Aktivieren/Deaktivieren von Inlayhinweisen für implizite Variablentypen:\r\n```typescript\r\n\r\nconst foo /* :number */ = Date.now();\r\n\r\n```\r\nerfordert die Verwendung von TypeScript 4.4 und höher im Arbeitsbereich.",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Unterdrücken Sie Typhinweise für Variablen, deren Name mit dem Typnamen identisch ist. Erfordert die Verwendung von TypeScript 4.8 und höher im Arbeitsbereich.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Diese Einstellung ist veraltet. Verwenden Sie stattdessen \"js/ts.implicitProjectConfig.checkJs\".",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Diese Einstellung ist veraltet. Verwenden Sie stattdessen \"js/ts.implicitProjectConfig.experimentalDecorators\".",
			"configuration.suggest.autoImports": "Aktiviert/deaktiviert automatische Importvorschläge.",
			"configuration.suggest.classMemberSnippets.enabled": "Aktivieren/Deaktivieren von Codeschnipseln für Klassenmember. Erfordert die Verwendung von TypeScript 4.5 und höher im Arbeitsbereich",
			"configuration.suggest.completeFunctionCalls": "Vervollständigen Sie Funktionen mit deren Parametersignatur.",
			"configuration.suggest.completeJSDocs": "Vorschläge zum Vervollständigen von JSDoc-Kommentaren aktivieren/deaktivieren.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Aktiviert/deaktiviert Vervollständigungen für möglicherweise nicht definierte Werte, die eine optionale Aufrufkette einfügen. Hierfür muss TS 3.7+ vorhanden sein, und strikte NULL-Überprüfungen müssen aktiviert sein.",
			"configuration.suggest.includeCompletionsForImportStatements": "Hiermit aktivieren/deaktivieren Sie Vervollständigungen für teilweise eingegebene Importanweisungen für den automatischen Import. Erfordert die Verwendung von TypeScript 4.3 und höher im Arbeitsbereich.",
			"configuration.suggest.includeCompletionsWithSnippetText": "Hiermit aktivieren/deaktivieren Sie Schnipselvervollständigungen über TS Server. Erfordert die Verwendung von TypeScript 4.3 und höher im Arbeitsbereich.",
			"configuration.suggest.jsdoc.generateReturns": "Aktivieren/deaktivieren Sie das Generieren von `@returns`-Anmerkungen für JSDoc-Vorlagen. Erfordert die Verwendung von TypeScript 4.2 und höher im Arbeitsbereich.",
			"configuration.suggest.names": "Aktivieren/Deaktivieren, dass eindeutige Namen aus der Datei in JavaScript-Vorschläge eingeschlossen werden. Beachten Sie, dass Namensvorschläge in JavaScript-Code, dessen Semantik mit \"@ts-check\" oder \"checkJs\" überprüft wird, immer deaktiviert sind.",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Aktivieren/Deaktivieren Sie Vervollständigungen von Codeausschnitten für Methoden in Objektliteralen. Erfordert die Verwendung von TypeScript 4.7 und höher im Arbeitsbereich",
			"configuration.suggest.paths": "Vorschläge für Pfade in Importanweisungen und require-Aufrufen aktivieren bzw. deaktivieren.",
			"configuration.surveys.enabled": "Gelegentliche Umfragen zur Verbesserung der Unterstützung von JavaScript und TypeScript in Visual Studio Code aktivieren bzw. deaktivieren.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimentell) Ermöglicht eine projektweite Fehlerberichterstattung.",
			"configuration.tsserver.maxTsServerMemory": "Der maximale Arbeitsspeicher (in MB), der dem TypeScript-Serverprozess zugeordnet werden soll.",
			"configuration.tsserver.useSeparateSyntaxServer": "Hiermit aktivieren/deaktivieren Sie das Erzeugen eines separaten TypeScript-Servers, der schneller auf syntaxbezogene Vorgänge reagieren kann, beispielsweise das Berechnen von Codefaltung oder von Dokumentsymbolen. Hierfür ist TypeScript 3.4.0 oder höher im Arbeitsbereich erforderlich.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Diese Einstellung ist veraltet und wurde durch „typescript.tsserver.useSyntaxServer“ ersetzt.",
			"configuration.tsserver.useSyntaxServer": "Kontrolliert, ob TypeScript einen dedizierten Server startet, um syntaxbezogene Vorgänge schneller zu verarbeiten, z. B. das Berechnen der Codefaltung.",
			"configuration.tsserver.useSyntaxServer.always": "Verwenden Sie einen Syntaxserver mit leichter Gewichtung, um alle IntelliSense-Vorgänge zu bearbeiten. Dieser Syntaxserver kann IntelliSense nur für geöffnete Dateien bereitstellen.",
			"configuration.tsserver.useSyntaxServer.auto": "Erzeugen Sie einen vollständigen Server und einen Server mit leichter Gewichtung für Syntaxvorgänge. Der Syntaxserver wird verwendet, um Syntaxvorgänge zu beschleunigen und IntelliSense bereitzustellen, während Projekte geladen werden.",
			"configuration.tsserver.useSyntaxServer.never": "Verwenden Sie keinen dedizierten Syntaxserver. Verwenden Sie einen Einzelserver, um alle IntelliSense-Vorgänge zu bearbeiten.",
			"configuration.tsserver.watchOptions": "Konfigurieren, welche Beobachtungsstrategien verwendet werden sollen, um Dateien und Verzeichnisse nachzuverfolgen. Erfordert die Verwendung von TypeScript 3.8+ im Arbeitsbereich.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Bei der Verwendung von Dateisystemereignissen gibt diese Option die Abrufstrategie an, die verwendet wird, wenn das System keine nativen Dateiüberwachungselemente mehr hat und/oder keine nativen Dateiüberwachungselemente unterstützt.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Dynamische Warteschlange verwenden, in der weniger häufig geänderte Dateien seltener überprüft werden.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Jede Datei mehrmals pro Sekunde in einem festen Intervall auf Änderungen überprüfen.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Jede Datei mehrmals pro Sekunde auf Änderungen überprüfen, bestimmte Dateitypen jedoch mithilfe von Heuristiken seltener als andere überprüfen.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Verzögertes Beobachten von Verzeichnissen deaktivieren. Das verzögertes Beobachten ist nützlich, wenn viele Dateiänderungen gleichzeitig auftreten können (z. B. eine Änderung in node_modules über eine Ausführung von npm-install). Sie sollten das verzögerte Beobachten jedoch mit diesem Flag für einige weniger häufige Setups deaktivieren.",
			"configuration.tsserver.watchOptions.watchDirectory": "Strategie, wie ganze Verzeichnisbäume unter Systemen ohne rekursive Dateibeobachtungsfunktionalität beobachtet werden.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Dynamische Warteschlange verwenden, in der weniger häufig geänderte Verzeichnisse seltener überprüft werden.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Ruft in regelmäßigen Abständen Verzeichnisse in Blöcken ab. Hierzu muss im Arbeitsbereich TypeScript 4.3 und höher verwendet werden.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Jedes Verzeichnis mehrmals pro Sekunde in einem festen Intervall auf Änderungen überprüfen.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Versuchen Sie, die nativen Ereignisse des Betriebssystems/Dateisystems für Verzeichnisänderungen zu verwenden.",
			"configuration.tsserver.watchOptions.watchFile": "Strategie für die Anzeige einzelner Dateien.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Dynamische Warteschlange verwenden, in der weniger häufig geänderte Dateien seltener überprüft werden.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Ruft in regelmäßigen Abständen Dateien in Blöcken ab. Hierzu muss im Arbeitsbereich TypeScript 4.3 und höher verwendet werden.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Jede Datei mehrmals pro Sekunde in einem festen Intervall auf Änderungen überprüfen.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Jede Datei mehrmals pro Sekunde auf Änderungen überprüfen, bestimmte Dateitypen jedoch mithilfe von Heuristiken seltener als andere überprüfen.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Versuchen Sie, die nativen Ereignisse des Betriebssystems/Dateisystems für Dateiänderungen zu verwenden.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Versuchen Sie, die nativen Ereignisse des Betriebssystems/Dateisystems zu verwenden, um Änderungen an den Verzeichnissen einer Datei zu überwachen. Dies kann weniger Dateiüberwachungselemente erfordern, doch der Vorgang ist möglicherweise weniger genau.",
			"configuration.typescript": "TypeScript",
			"description": "Bietet umfangreiche Sprachunterstützung für JavaScript und TypeScript.",
			"displayName": "TypeScript- und JavaScript-Sprachfeatures",
			"format.insertSpaceAfterCommaDelimiter": "Definiert die Verarbeitung von Leerzeichen nach einem Kommatrennzeichen.",
			"format.insertSpaceAfterConstructor": "Definiert die Verarbeitung von Leerzeichen nach dem Konstruktorschlüsselwort.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Definiert die Verarbeitung von Leerzeichen nach einem Funktionsschlüsselwort für anonyme Funktionen.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Definiert die Verarbeitung von Leerzeichen nach Schlüsselwörtern in einer Flusssteuerungsanweisung.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Definiert die Verarbeitung von Leerzeichen nach geschweifter Klammer links und vor geschweifter Klammer rechts, wenn diese keine Inhalte umschließen.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden geschweiften Klammern für JSX-Ausdrücke.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren geschweiften Klammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren eckigen Klammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren runden Klammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden geschweiften Klammern für Vorlagenzeichenfolgen.",
			"format.insertSpaceAfterSemicolonInForStatements": "Definiert die Verarbeitung von Leerzeichen nach einem Semikolon in einer for-Anweisung.",
			"format.insertSpaceAfterTypeAssertion": "Definiert die Verarbeitung von Leerzeichen nach Typassertionen in TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Definiert die Verarbeitung von Leerzeichen nach einem binären Operator.",
			"format.insertSpaceBeforeFunctionParenthesis": "Definiert die Verarbeitung von Leerzeichen vor Funktionsargumentklammern.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Definiert, ob eine öffnende geschweifte Klammer für Kontrollblöcke in eine neue Zeile eingefügt wird.",
			"format.placeOpenBraceOnNewLineForFunctions": "Definiert, ob eine öffnende geschweifte Klammer für Funktionen in eine neue Zeile eingefügt wird.",
			"format.semicolons": "Definiert die Behandlung optionaler Semikola. Erfordert die Verwendung von TypeScript 3.7 oder höher im Arbeitsbereich.",
			"format.semicolons.ignore": "Fügen Sie keine Semikolons ein, und entfernen Sie diese auch nicht.",
			"format.semicolons.insert": "Fügen Sie am Ende von Anweisungen ein Semikolon ein.",
			"format.semicolons.remove": "Remove unnecessary semicolons.",
			"goToProjectConfig.title": "Zur Projektkonfiguration wechseln",
			"inlayHints.parameterNames.all": "Aktivieren Sie Hinweise für Parameternamen für literale und nicht literale Argumente.",
			"inlayHints.parameterNames.literals": "Aktivieren Sie Hinweise für Parameternamen nur für literale Argumente.",
			"inlayHints.parameterNames.none": "Deaktivieren Sie Hinweise für Parameternamen.",
			"javascript.format.enable": "Standardmäßigen JavaScript-Formatierer aktivieren/deaktivieren.",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Fügen Sie `={}` oder `=\"\"` nach Attributnamen ein, die auf dem Eigenschaftentyp basieren. Informationen zum Steuern des Typs von Anführungszeichen, die für die Attribute in Zeichenfolgen verwendet werden, finden Sie unter „javascript.preferences.quoteStyle“.",
			"javascript.referencesCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Verweise in JavaScript-Dateien.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Verweise auf CodeLens für alle Funktionen in JavaScript-Dateien aktivieren/deaktivieren",
			"javascript.suggestionActions.enabled": "Aktiviert oder deaktiviert Vorschlagsdiagnosen für JavaScript-Dateien im Editor.",
			"javascript.validate.enable": "Enable/disable JavaScript validation.",
			"reloadProjects.title": "Reload Project",
			"taskDefinition.tsconfig.description": "Die \"tsconfig\"-Datei, die den TS-Build definiert.",
			"typescript.autoClosingTags": "Aktiviert/deaktiviert das automatische Schließen von JSX-Tags.",
			"typescript.check.npmIsInstalled": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Deaktiviert [automatische Typerfassung](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Die automatische Typerfassung ruft „@types\" Pakete von npm ab, um IntelliSense für externe Bibliotheken zu verbessern.",
			"typescript.enablePromptUseWorkspaceTsdk": "Aktiviert eine Benutzeraufforderung zur Verwendung der im Arbeitsbereich konfigurierten TypeScript-Version für IntelliSense.",
			"typescript.findAllFileReferences": "Find File References",
			"typescript.format.enable": "Standardmäßigen TypeScript-Formatierer aktivieren/deaktivieren.",
			"typescript.goToSourceDefinition": "Gehen Sie zu Quelldefinition",
			"typescript.implementationsCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Implementierungen. Dieses CodeLens-Element zeigt an, wer eine Schnittstelle implementiert hat.",
			"typescript.locale": "Legt das zum Melden von JavaScript- und TypeScript-Fehlern verwendete Gebietsschema fest. Standardmäßig wird das Gebietsschema von VS Code verwendet.",
			"typescript.npm": "Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "TS Server-Protokolldatei öffnen",
			"typescript.preferences.autoImportFileExcludePatterns": "Globale Muster von Dateien angeben, die von automatischen Importen ausgeschlossen werden sollen. Erfordert die Verwendung von TypeScript 4.8 oder höher im Arbeitsbereich.",
			"typescript.preferences.importModuleSpecifier": "Bevorzugter Pfadstil für automatische Importe.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Hiermit wird ein nicht relativer Import basierend auf den Werten von \"baseUrl\" oder \"paths\" vorgezogen, die in \"jsconfig.json\"/\"tsconfig.json\" konfiguriert sind.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Hiermit wird ein nicht relativer Import nur dann vorgezogen, wenn der relative Importpfad das Paket oder das Projektverzeichnis verlassen würde. Hierfür ist die Verwendung von TypeScript 4.2+ im Arbeitsbereich erforderlich.",
			"typescript.preferences.importModuleSpecifier.relative": "Hiermit wird ein relativer Pfad zum importierten Dateispeicherort vorgezogen.",
			"typescript.preferences.importModuleSpecifier.shortest": "Hiermit wird ein nicht relativer Import vorgezogen, falls einer verfügbar ist, der weniger Pfadsegmente als ein relativer Import aufweist.",
			"typescript.preferences.importModuleSpecifierEnding": "Bevorzugtes Pfadende für automatische Importe. Erfordert die Verwendung von TypeScript 4.5+ und höher im Arbeitsbereich.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Wählen Sie über die Projekteinstellungen einen Standardwert aus.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Hiermit wird \"./component/index.js\" auf \"./component/index\" gekürzt.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Kürzen Sie keine Pfadenden; fügen Sie die Erweiterung \".js\" ein.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "./component/index.js zu ./component kürzen.",
			"typescript.preferences.includePackageJsonAutoImports": "Hiermit wird die Suche nach \"package.json\"-Abhängigkeiten für verfügbare automatische Importe aktiviert/deaktiviert.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Basierend auf der geschätzten Leistungsbeeinträchtigung nach Abhängigkeiten suchen",
			"typescript.preferences.includePackageJsonAutoImports.off": "Never search dependencies.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Always search dependencies.",
			"typescript.preferences.jsxAttributeCompletionStyle": "Bevorzugter Stil für JSX-Attribut-Vervollständigungen.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Fügen Sie `={}` oder `=\"\"` nach Attributnamen ein, die auf dem Eigenschaftentyp basieren. Informationen zum Steuern des Typs von Anführungszeichen, die für die Attribute in Zeichenfolgen verwendet werden, finden Sie unter „typescript.preferences.quoteStyle“.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Fügen Sie „={}“ nach Attributnamen ein.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Fügen Sie nur Attributnamen ein.",
			"typescript.preferences.quoteStyle": "Bevorzugtes Anführungszeichenformat, das für schnelle Problembehebungen verwendet werden soll.",
			"typescript.preferences.quoteStyle.auto": "Anführungszeichentyp aus vorhandenem Code ableiten",
			"typescript.preferences.quoteStyle.double": "Verwenden Sie immer doppelte Anführungszeichen: `\"`",
			"typescript.preferences.quoteStyle.single": "Verwenden Sie immer einfache Anführungszeichen: `'`",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Die Einstellung \"typescript.preferences.renameShorthandProperties\" wurde zugunsten von \"typescript.preferences.useAliasesForRenames\" als veraltet markiert.",
			"typescript.preferences.useAliasesForRenames": "Hiermit wird die Einführung von Aliasen für Objektkompakteigenschaften während des Umbenennens aktiviert/deaktiviert. Erfordert die Verwendung von TypeScript 3.4 oder höher im Arbeitsbereich.",
			"typescript.problemMatchers.tsc.label": "TypeScript problems",
			"typescript.problemMatchers.tscWatch.label": "TypeScript-Probleme (Überwachungsmodus)",
			"typescript.referencesCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Verweise in TypeScript-Dateien.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Verweise auf CodeLens für alle Funktionen in TypeScript-Dateien aktivieren/deaktivieren",
			"typescript.removeUnusedImports": "Remove Unused Imports",
			"typescript.reportStyleChecksAsWarnings": "Stilüberprüfungen als Warnungen melden.",
			"typescript.restartTsServer": "Restart TS server",
			"typescript.selectTypeScriptVersion.title": "Select TypeScript Version...",
			"typescript.sortImports": "Sort Imports",
			"typescript.suggest.enabled": "Enabled/disable autocomplete suggestions.",
			"typescript.suggestionActions.enabled": "Aktiviert oder deaktiviert Vorschlagsdiagnosen für TypeScript-Dateien im Editor.",
			"typescript.tsc.autoDetect": "Legt fest, ob tsc-Tasks automatisch erkannt werden.",
			"typescript.tsc.autoDetect.build": "Nur Tasks mit einmaliger Kompilierung erstellen.",
			"typescript.tsc.autoDetect.off": "Disable this feature.",
			"typescript.tsc.autoDetect.on": "Build- und Überwachungstasks erstellen",
			"typescript.tsc.autoDetect.watch": "Nur Kompilierungs- und Überwachungstasks erstellen.",
			"typescript.tsdk.desc": "Gibt den Ordnerpfad zu den tsserver- und lib*.d.ts-Dateien unter einer TypeScript-Installation zur Verwendung mit IntelliSense an, zum Beispiel: „./node_modules/typescript/lib“.\r\n\r\n– Sofern als Benutzereinstellung angegeben, ersetzt die TypeScript-Version aus „typescript.tsdk“ automatisch die integrierte TypeScript-Version.\r\n– Sofern als Arbeitsbereichseinstellung angegeben, erlaubt Ihnen „typescript.tsdk“ mit dem Befehl „TypeScript: Select TypeScript version“ zu dieser Arbeitsbereichsversion von TypeScript zu wechseln und sie für IntelliSense zu verwenden.\r\n\r\nWeitere Informationen zum Verwalten von TypeScript-Versionen finden Sie in der [Dokumentation zu TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions).",
			"typescript.tsserver.enableTracing": "Aktiviert die Ablaufverfolgung für die TS-Serverleistung in einem Verzeichnis. Mithilfe dieser Ablaufverfolgungsdateien lassen sich Probleme mit der TS-Serverleistung diagnostizieren. Das Protokoll kann Dateipfade, Quellcode und weitere potenziell vertrauliche Informationen aus Ihrem Projekt enthalten.",
			"typescript.tsserver.log": "Aktiviert die Protokollierung des TS-Servers in eine Datei. Mithilfe der Protokolldatei lassen sich Probleme beim TS-Server diagnostizieren. Die Protokolldatei kann Dateipfade, Quellcode und weitere potenziell sensible Informationen aus Ihrem Projekt enthalten.",
			"typescript.tsserver.pluginPaths": "Zusätzliche Pfade zum Ermitteln von TypeScript Language Service-Plug-Ins.",
			"typescript.tsserver.pluginPaths.item": "Ein absoluter oder relativer Pfad. Ein relativer Pfad wird in Bezug auf die Arbeitsbereichsordner aufgelöst.",
			"typescript.tsserver.trace": "Aktiviert die Ablaufverfolgung von an den TS-Server gesendeten Nachrichten. Mithilfe der Ablaufverfolgung lassen sich Probleme beim TS-Server diagnostizieren. Die Ablaufverfolgung kann Dateipfade, Quellcode und weitere potenziell sensible Informationen aus Ihrem Projekt enthalten.",
			"typescript.updateImportsOnFileMove.enabled": "Aktiviert/deaktiviert die automatische Aktualisierung von Importpfaden beim Umbenennen oder Verschieben einer Datei in VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Pfade immer automatisch aktualisieren lassen.",
			"typescript.updateImportsOnFileMove.enabled.never": "Pfade nie umbenennen und keine Aufforderung anzeigen.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Bei jeder Umbenennung auffordern.",
			"typescript.validate.enable": "Enable/disable TypeScript validation.",
			"typescript.workspaceSymbols.scope": "Hiermit wird gesteuert, welche Dateien über [Zu Symbol im Arbeitsbereich wechseln](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name) durchsucht werden.",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Hiermit werden alle geöffneten JavaScript- oder TypeScript-Projekte nach Symbolen durchsucht. Erfordert die Verwendung von TypeScript 3.9 oder höher im Arbeitsbereich.",
			"typescript.workspaceSymbols.scope.currentProject": "Hiermit wird nur im aktuellen JavaScript- oder TypeScript-Projekt nach Symbolen gesucht.",
			"virtualWorkspaces": "In virtuellen Arbeitsbereichen wird das Auflösen und Suchen von Verweisen in Dateien nicht unterstützt.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Debuggen Sie Ihren JavaScript-Code in Node.js, und führen Sie ihn mit Visual Studio Code aus.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "Nachdem Sie Node.js installiert haben, können Sie JavaScript-Programme in einem Terminal ausführen, indem Sie \"node your-file-name.js\" eingeben\r\nEine weitere einfache Möglichkeit zum Ausführen von Node.js-Programmen ist die Verwendung des Debuggers von VS Code, mit dem Sie Ihren Code ausführen, an verschiedenen Stellen anhalten und Ihnen helfen, schrittweise zu verstehen, was vor sich geht.\r\n[Debuggen starten](command:javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "JavaScript ausführen und debuggen",
			"walkthroughs.nodejsWelcome.description": "Nutzen Sie die erstklassige JavaScript-Erfahrung von Visual Studio Code.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Node.js ist eine einfache Möglichkeit zum Ausführen von JavaScript-Code. Sie können damit schnell Befehlszeilen-Apps und -Server erstellen. Außerdem ist npm enthalten, ein Paket-Manager, der das Wiederverwenden und Freigeben von JavaScript-Code vereinfacht.\r\n[Node.js installieren](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Install Node.js",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Node.js ist eine einfache Möglichkeit zum Ausführen von JavaScript-Code. Sie können damit schnell Befehlszeilen-Apps und -Server erstellen. Außerdem ist npm enthalten, ein Paket-Manager, der das Wiederverwenden und Freigeben von JavaScript-Code vereinfacht.\r\n[Node.js installieren](https://nodejs.org/en/download/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Install Node.js",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Erfahren Sie mehr über JavaScript und Node.js in Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Möchten Sie sich mit JavaScript, Node.js und VS Code vertrauter machen? Sehen Sie sich unbedingt unsere Dokumentation an!\r\nWir haben viele Ressourcen zum Lernen [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) und [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Weitere Informationen](https://code.visualstudio.com/docs/nodejs/nodejs-Tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Explore More",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Schreiben wir unsere erste JavaScript-Datei. Wir müssen eine neue Datei erstellen und sie mit der Erweiterung \".js\" am Ende des Dateinamens speichern.\r\n[Erstellen einer JavaScript-Datei](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "JavaScript-Datei erstellen",
			"walkthroughs.nodejsWelcome.title": "Erste Schritte mit JavaScript und Node.js",
			"workspaceTrust": "Für die Erweiterung ist die Arbeitsbereichsvertrauensstellung erforderlich, wenn die Arbeitsbereichsversion verwendet wird, da sie vom Arbeitsbereich angegebene Code ausführt."
		}
	}
}