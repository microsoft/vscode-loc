{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Добавить точку останова браузера",
			"attach.node.process": "Подключение к процессу узла",
			"base.cascadeTerminateToConfigurations.label": "Список сеансов отладки, которые также будут остановлены при завершении этого сеанса отладки.",
			"browser.address.description": "IP-адрес или имя узла, которые слушает отлаживаемый браузер.",
			"browser.attach.port.description": "Порт для удаленной отладки браузера, указываемый в качестве параметра --remote-debugging-port при запуске браузера.",
			"browser.baseUrl.description": "Базовый URL-адрес для разрешения baseUrl путей. baseURL обрезается при сопоставлении URL-адресов с файлами на диске. По умолчанию используется домен URL-адреса запуска.",
			"browser.browserAttachLocation.description": "Принудительное подключение к браузеру в одном расположении. В удаленной рабочей области (например, через SSH или WSL) это можно использовать для подключения к браузеру на удаленном компьютере, а не локально.",
			"browser.browserLaunchLocation.description": "Принуждает браузер запускаться в одном расположении. В удаленной рабочей области (например, через SSH или WSL) это можно использовать для открытия браузера на удаленном компьютере, а не локально.",
			"browser.cleanUp.description": "Что необходимо сделать после завершения сеанса отладки: закрыть только отлаживаемую вкладку или весь браузер.",
			"browser.cwd.description": "Дополнительный рабочий каталог для исполняемого файла среды выполнения.",
			"browser.disableNetworkCache.description": "Определяет, нужно ли пропускать кэш сети для каждого запроса.",
			"browser.env.description": "Дополнительный словарь пар \"ключ-значение\" среды для браузера.",
			"browser.file.description": "Локальный HTML-файл, который будет открыт в браузере.",
			"browser.includeDefaultArgs.description": "Будут ли использованы аргументы запуска браузера по умолчанию (чтобы отключить функции, которые могут усложнить отладку).",
			"browser.inspectUri.description": "Формат, используемый для перезаписи inspectUri: это строка шаблона, которая интерполирует ключи в \"{curlyBraces}\". Доступные ключи:\r\n – \"url.*\": анализируемый адрес запущенного приложения. Например, \"{url.port}\", \"{url.hostname}\".\r\n – \"port\": порт отладки, прослушиваемый Chrome.\r\n – \"browserInspectUri\": URI инспектора в запущенном браузере.\r\n – \"browserInspectUriPath\": часть пути URI инспектора в запущенном браузере (например, \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\r\n – \"wsProtocol\": предложенный протокол WebSocket. Если исходный URL-адрес относится к типу \"https\", для этого параметра задается значение \"wss\", в противном случае — значение \"ws\".\r\n",
			"browser.launch.port.description": "Порт, прослушиваемый браузером. По умолчанию используется значение \"0\", в этом случае осуществляется отладка браузера через каналы. В общем случае это более безопасный вариант и его следует использовать, если вам не нужно подключаться к браузеру из другого инструмента.",
			"browser.pathMapping.description": "Сопоставление URL-адресов/путей с локальными папками для разрешения скриптов в браузере в скрипты на диске",
			"browser.perScriptSourcemaps.description": "Загружаются ли скрипты по отдельности с уникальными сопоставителями с исходным кодом, содержащими базовое имя исходного файла. Этот параметр можно установить, чтобы оптимизировать обращение с сопоставителями с исходным кодом при работе со множеством небольших скриптов. Если задано значение \"Автоматически\", будут обнаружены известные случаи, для которых это подходит.",
			"browser.profileStartup.description": "Если этот параметр имеет значение true, профилирование начнется при запуске процесса",
			"browser.restart": "Следует ли устанавливать повторное подключение при разрыве соединения браузера",
			"browser.revealPage": "Вкладка, на которой находится фокус",
			"browser.runtimeArgs.description": "Необязательные аргументы, исполняемому файлу среды выполнения.",
			"browser.runtimeExecutable.description": "Это \"canary\", \"stable\", \"custom\" или путь к исполняемому файлу браузера. Значение \"custom\" означает настраиваемую программу-оболочку, пользовательскую сборку или переменную среды CHROME_PATH.",
			"browser.runtimeExecutable.edge.description": "Значения \"canary\", \"stable\", \"dev\", \"custom\" или путь к исполняемому файлу браузера. Значение \"custom\" означает пользовательскую программу-оболочку, настраиваемую сборку или переменную среды EDGE_PATH.",
			"browser.server.description": "Настраивает веб-сервер для запуска. Принимает ту же конфигурацию, что и задача запуска \"node\".",
			"browser.skipFiles.description": "Массив имен файлов или папок либо стандартных масок, которые будут пропущены при отладке.",
			"browser.smartStep.description": "Автоматический пропуск несопоставленных строк в файлах сопоставителей с исходным кодом. Например, кода, который автоматически формирует TypeScript при обратной компиляции async/await или других функций.",
			"browser.sourceMapPathOverrides.description": "Набор сопоставлений для переопределения расположений исходных файлов с указанных в сопоставителях с исходным кодом на реальные расположения на диске. Дополнительные сведения см. в файле сведений.",
			"browser.sourceMapRenames.description": "Следует ли использовать сопоставление \"names\" в сопоставителях с исходным кодом. Для этого требуется запрашивать содержимое исходного кода, что может замедлить работу определенных отладчиков.",
			"browser.sourceMaps.description": "Использовать сопоставители с исходным кодом JavaScript (если они существуют).",
			"browser.targetSelection": "Следует ли присоединяться ко всем целевым объектам, соответствующим фильтру URL-адресов (\"automatic\"), или запрашивать выбор целевого объекта (\"pick\").",
			"browser.timeout.description": "Длительность повторных попыток подключения к браузеру в миллисекундах. Значение по умолчанию — 10 000 мс.",
			"browser.url.description": "Будет искать вкладку с этим точным URL-адресом и подключаться к нему, если он найден",
			"browser.urlFilter.description": "Будет искать страницу с этим URL-адресом и подключится к ней, если она найдена. Можно использовать подстановочные знаки *.",
			"browser.userDataDir.description": "По умолчанию браузер запускается с отдельным профилем пользователя во временной папке. Используйте этот параметр, чтобы переопределить его. Установите значение false для запуска с профилем пользователя по умолчанию. Новый браузер не может быть запущен, если экземпляр уже запущен из \"userDataDir\".",
			"browser.vueComponentPaths": "Список шаблонов масок файлов для поиска компонентов \"*.vue\". По умолчанию поиск выполняется во всей рабочей области. Этот список должен быть указан из-за дополнительных операций поиска, которые требуются сопоставителям с исходным кодом в Vue CLI 4. Чтобы отключить эту особую обработку, укажите пустой массив в качестве значения параметра.",
			"browser.webRoot.description": "Этот параметр указывает абсолютный путь рабочей области к корневому каталогу веб-сервера. Используется для разрешения путей к файлам на диске (например, \"/app.js\"). Сокращение для pathMapping для \"/\".",
			"chrome.attach.description": "Прикрепить к экземпляру Chrome, уже находящемуся в режиме отладки",
			"chrome.attach.label": "Chrome: подключение",
			"chrome.label": "Веб-приложение (Chrome)",
			"chrome.launch.description": "Запуск Chrome для отладки URL-адреса",
			"chrome.launch.label": "Chrome: запуск",
			"commands.callersAdd.label": "Исключить вызывающего",
			"commands.callersAdd.paletteLabel": "Исключить для вызывающего приостановку в текущем расположении",
			"commands.callersGoToCaller.label": "Перейти к расположению вызывающего",
			"commands.callersGoToTarget.label": "Перейти к целевому расположению",
			"commands.callersRemove.label": "Удалить исключенного вызывающего",
			"commands.callersRemoveAll.label": "Удалить всех исключенных вызывающих",
			"commands.disableSourceMapStepping.label": "Отключить пошаговое сопоставление источника",
			"commands.enableSourceMapStepping.label": "Включить пошаговое сопоставление источника",
			"configuration.autoAttachMode": "Определяет, к каким процессам необходимо автоматически присоединяться для отладки, если установлен параметр \"#debug.node.autoAttach#\". Присоединение к процессам Node, запущенным с флагом \"--inspect\", будет осуществляться всегда, независимо от значения этого параметра.",
			"configuration.autoAttachMode.always": "Автоматически присоединяться к каждому процессу Node.js, запущенному в терминале.",
			"configuration.autoAttachMode.disabled": "Автоматическое подключение отключено и не отображается в строке состояния.",
			"configuration.autoAttachMode.explicit": "Присоединяться только в том случае, если указан параметр \"--inspect\".",
			"configuration.autoAttachMode.smart": "Автоматически присоединяться при запуске сценариев, не находящихся в папке node_modules.",
			"configuration.autoAttachSmartPatterns": "Настраивает стандартные маски определения момента присоединения в интеллектуальном режиме \"#debug.javascript.autoAttachFilter#\". \"$KNOWN_TOOLS$\" заменяется списком имен распространенных средства запуска тестов и кода. [Дополнительные сведения см. в документации по VS Code](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
			"configuration.automaticallyTunnelRemoteServer": "При отладке удаленного веб-приложения определяет, следует ли автоматически туннелировать удаленный сервер на локальный компьютер.",
			"configuration.breakOnConditionalError": "Следует ли останавливать выполнение, если в условной точке останова возникла ошибка.",
			"configuration.debugByLinkOptions": "Параметры, используемые при отладке открытых ссылок, выбранных изнутри терминала отладки. Можно задать значение \"false\", чтобы отключить это поведение.",
			"configuration.defaultRuntimeExecutables": "Значение \"runtimeExecutable\" по умолчанию, используемое для конфигураций запуска, если значение не указано. Оно может использоваться для настройки пользовательских путей для Node.js или установок браузера.",
			"configuration.npmScriptLensLocation": "Где требуется отобразить группы связанных элементов кода \"Run\" и \"Debug\" в ваших скриптах npm. Можно использовать значение \"all\" — во всех скриптах, \"top\" — сверху раздела скриптов или \"never\" — нигде.",
			"configuration.pickAndAttachOptions": "Параметры по умолчанию, используемые при отладке процесса с помощью команды \"Отладка: присоединить к процессу Node.js\"",
			"configuration.resourceRequestOptions": "Параметры запроса, используемые при загрузке ресурсов в отладчике, таких как сопоставители с исходным кодом. Этот параметр может потребоваться задать в том случае, если для сопоставителей с исходным кодом требуется проверка подлинности или самозаверяющий сертификат. Параметры используются для создания запроса с помощью библиотеки [\"got\"](https://github.com/sindresorhus/got).\r\n\r\nВ общем случае для отключения проверки сертификата можно передать параметр \"{ \"https\": { \"rejectUnauthorized\": false } }\".",
			"configuration.terminalOptions": "Параметры запуска по умолчанию для терминала отладки JavaScript и скриптов npm.",
			"configuration.unmapMissingSources": "Определяет, будет ли автоматически отменено сопоставление с исходным кодом для файла, если исходный файл не может быть прочитан. Если этот параметр имеет значение false (по умолчанию), отображается запрос.",
			"createDiagnostics.label": "Диагностика проблем с точкой останова",
			"customDescriptionGenerator.description": "Настройте текстовое описание, которое отладчик отображает для объектов (локальные переменные и т. д.). Примеры:\r\n      1. this.toString() // Вызовет метод toString для печати всех объектов\r\n      2. this.customDescription ? this.customDescription() : defaultValue // Использовать метод customDescription, если он доступен, в противном случае возвратить значение defaultValue\r\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Использовать метод customDescription, если он доступен, в противном случае возвратить значение defaultValue\r\n      ",
			"customPropertiesGenerator.description": "Настройте свойства, отображаемые для объекта в отладчике (локальные переменные и т. д.). Примеры:\r\n    1. { ...this, extraProperty: \"12345\" } // Добавить extraProperty 12345 ко всем объектам\r\n    2. this.customProperties ? this.customProperties() : this // Использовать метод customProperties, если он доступен, в противном случае использовать свойства this (свойства по умолчанию)\r\n    3. function () { return this.customProperties ? this.customProperties() : this } // Использовать метод customDescription, если он доступен, в противном случае возвращать свойства по умолчанию\r\n\r\n    Не рекомендуется: это временная реализация этой функции до тех пор, пока функция не будет реализована в соответствии с описанием на странице https://github.com/microsoft/vscode/issues/102181.",
			"debug.npm.edit": "Изменить файл package.json",
			"debug.npm.noScripts": "Скрипты npm в вашем package.json не найдены",
			"debug.npm.noWorkspaceFolder": "Для отладки скриптов npm нужно открыть папку рабочей области.",
			"debug.npm.parseError": "Не удалось считать {0}: {1}",
			"debug.npm.script": "Отладка сценария npm",
			"debug.terminal.attach": "Присоединить к процессу терминала Node.js",
			"debug.terminal.label": "Терминал отладки JavaScript",
			"debug.terminal.program.description": "Команда для выполнения в запущенном терминале. Если параметр не задан, терминал откроется без запуска программы.",
			"debug.terminal.snippet.label": "Выполнить \"npm start\" в терминале отладки",
			"debug.terminal.toggleAuto": "Переключение автоприсоединения Node.js терминала",
			"debug.terminal.welcome": "[Терминал отладки JavaScript](command:extension.js-debug.createDebuggerTerminal)\r\n\r\nВы можете использовать терминал отладки JavaScript для отладки процессов Node.js, запущенных в командной строке.",
			"debug.terminal.welcomeWithLink": "[Терминал отладки JavaScript](command:extension.js-debug.createDebuggerTerminal)\r\n\r\nВы можете использовать терминал отладки JavaScript для отладки процессов Node.js, запущенных в командной строке.\r\n\r\n[URL-адрес отладки](command:extension.js-debug.debugLink).",
			"debug.unverifiedBreakpoints": "Не удалось установить некоторые точки останова. Если у вас возникла проблема, вы можете [устранить неполадки в конфигурации запуска] (команда:extension.js-debug.createDiagnostics).",
			"debugLink.label": "Открыть ссылку",
			"edge.address.description": "IP-адрес или имя узла, которые прослушивает веб-представление, при отладке веб-представлений. Если этот параметр не установлен, он будет определен автоматически.",
			"edge.attach.description": "Подключить к экземпляру Microsoft Edge уже в режиме отладки",
			"edge.attach.label": "Microsoft Edge: подключение",
			"edge.label": "Веб-приложение (Edge)",
			"edge.launch.description": "Запустить Microsoft Edge для отладки URL-адреса",
			"edge.launch.label": "Microsoft Edge: запуск",
			"edge.port.description": "Порт, который прослушивает отладчик веб-представления, при отладке веб-представлений. Если не установлен, будет определен автоматически.",
			"edge.useWebView.attach.description": "Объект, содержащий pipeName канала отладки для Webview2 с размещением в UWP. Это MyTestSharedMemory при создании канала \"\\\\.\\pipe\\LOCAL\\MyTestSharedMemory\"",
			"edge.useWebView.launch.description": "Если установлено значение true, отладчик будет обрабатывать исполняемый файл среды выполнения как ведущее приложение, содержащее WebView, что позволяет вам производить отладку содержимого скрипта WebView.",
			"enableContentValidation.description": "Определяет, проверяется ли содержимое файлов на диске на соответствие содержимому файлов, загруженных в среде выполнения. Это удобно в различных сценариях и является обязательным в некоторых из них. Однако это также может привести к проблемам, например, если используется преобразование сценариев на стороне сервера.",
			"errors.timeout": "{0}: время ожидания истекает через {1} мс",
			"extension.description": "Расширение для отладки программ Node.js и Chrome.",
			"extensionHost.label": "Разработка расширения VS Code",
			"extensionHost.launch.config.name": "Запуск расширения",
			"extensionHost.launch.debugWebWorkerHost": "Указывает, следует ли попытаться подключиться к узлу расширений рабочих веб-процессов.",
			"extensionHost.launch.debugWebviews": "Определяет, следует ли пытаться подключиться к веб-представлениям в запущенном экземпляре VS Code. Это будет работать только в классических VS Code.",
			"extensionHost.launch.env.description": "Переменные среды, переданные в хост-процесс для расширений.",
			"extensionHost.launch.rendererDebugOptions": "Параметры запуска Chrome, используемые при подключении к процессу визуализации с \"debugWebviews\" или \"debugWebWorkerHost\".",
			"extensionHost.launch.runtimeExecutable.description": "Абсолютный путь к VS Code.",
			"extensionHost.launch.stopOnEntry.description": "Автоматическая остановка хост-процесса для расширений после запуска.",
			"extensionHost.snippet.launch.description": "Запустить расширение VS Code в режиме отладки",
			"extensionHost.snippet.launch.label": "Разработка расширения VS Code",
			"getDiagnosticLogs.label": "Сохранить журналы отладки JS диагностики",
			"longPredictionWarning.disable": "Больше не показывать",
			"longPredictionWarning.message": "Настройка точек остановка занимает некоторое время. Вы можете ускорить этот процесс, изменив \"outFiles\" в файле launch.json.",
			"longPredictionWarning.noFolder": "Папка рабочей области не открыта.",
			"longPredictionWarning.open": "Открыть launch.json",
			"node.address.description": "TCP/IP-адрес процесса для отладки. По умолчанию используется \"localhost\".",
			"node.attach.attachExistingChildren.description": "Указывает, следует ли пытаться подключаться к уже порожденным дочерним процессам.",
			"node.attach.attachSpawnedProcesses.description": "Задаются ли переменные среды в подключенном процессе для отслеживания порожденных дочерних объектов.",
			"node.attach.config.name": "Подключить",
			"node.attach.continueOnAttach": "Если указано значение true, то мы автоматически возобновим программы, которые были запущены и ожидают \"--inspect-brk\"",
			"node.attach.processId.description": "Идентификатор процесса, к которому требуется подключиться.",
			"node.attach.restart.description": "Повторное подключение к программе в случае потери подключения. Если задано значение \"true\", попытки повторного подключения будут выполняться один раз в секунду без ограничения числа попыток. Вы можете настроить интервал и максимальное число попыток, указав параметры \"delay\" и \"maxAttempts\" в объекте.",
			"node.attachSimplePort.description": "Если параметр установлен, выполняется подключение к процессу через заданный порт. В общем случае это больше не требуется для программ Node.js и не позволяет отлаживать дочерние процессы, но может быть полезно в более экзотических сценариях, например, при запуске Deno и Docker. Если установлено значение 0, будет выбран случайный порт и к аргументам запуска будет автоматически добавлен параметр --inspect-brk.",
			"node.console.title": "Консоль отладки узла",
			"node.disableOptimisticBPs.description": "Не устанавливайте точки останова в любом файле, пока для него не будет загружен сопоставитель с исходным кодом.",
			"node.killBehavior.description": "Определяет, как будут завершаться процессы отладки при остановке сеанса. Возможные значения:\r\n\r\n– forceful (по умолчанию): принудительное уничтожение дерева процессов. Отправляет SIGKILL в posix или \"taskkill.exe /F\" в Windows.\r\n– polite: корректное уничтожение дерева процессов. После завершения работы с применением этого параметра процессы, которые ведут себя неправильно, могут продолжить выполнение. Отправляет SIGTERM в posix или \"taskkill.exe\" без флага \"/F\" (принудительно) в Windows.\r\n– none: прекращение работы не выполняется.",
			"node.label": "Node.js",
			"node.launch.args.description": "Аргументы командной строки, переданные в программу.\r\n\r\nМожет быть массивом строк или одной строкой. При запуске программы в терминале настройка этого свойства на использование одной строки приведет к отсутствию экранирования аргументов для оболочки.",
			"node.launch.autoAttachChildProcesses.description": "Автоматически подключать отладчик к новым дочерним процессам.",
			"node.launch.config.name": "Запустить",
			"node.launch.console.description": "Где следует запускать целевой объект отладки.",
			"node.launch.console.externalTerminal.description": "Внешний терминал, который можно настроить в параметрах пользователя",
			"node.launch.console.integratedTerminal.description": "Интегрированный терминал VS Code",
			"node.launch.console.internalConsole.description": "Консоль отладки VS Code (не поддерживает чтение входных данных из программы)",
			"node.launch.cwd.description": "Абсолютный путь к рабочему каталогу отлаживаемой программы. Если параметр localRoot задан, то cwd будет соответствовать его значению, в противном случае будет использован каталог workspaceFolder.",
			"node.launch.env.description": "Переменные среды, переданные в программу. Значение \"null\" удаляет переменную из среды.",
			"node.launch.envFile.description": "Абсолютный путь к файлу, содержащему определения переменных среды.",
			"node.launch.logging": "Конфигурация ведения журнала",
			"node.launch.logging.cdp": "Путь к файлу журнала для сообщений протокола Chrome DevTools",
			"node.launch.logging.dap": "Путь к файлу журнала для сообщений протокола адаптера отладки",
			"node.launch.outputCapture.description": "Источник для захвата выходных сообщений: API отладки по умолчанию (если задано значение console) или потоки stdout/stderr (если задано значение std).",
			"node.launch.program.description": "Абсолютный путь к программе. Созданное значение можно определить, взглянув на package.json и открытые файлы. Изменить этот атрибут.",
			"node.launch.restart.description": "Попробуйте перезапустить программу, если она завершает работу с ненулевым кодом выхода.",
			"node.launch.runtimeArgs.description": "Необязательные аргументы, исполняемому файлу среды выполнения.",
			"node.launch.runtimeExecutable.description": "Используемая среда выполнения. Абсолютный путь или имя среды выполнения, доступные в переменной PATH. Если не указано, предполагается \"node\".",
			"node.launch.runtimeSourcemapPausePatterns": "Список шаблонов для вставки точек останова для точек входа вручную. Это можно использовать, чтобы дать отладчику возможность устанавливать точки останова при использовании сопоставителей с исходным кодом, которых не существует или которые не удалось обнаружить перед запуском, например [как в случае с Serverless Framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
			"node.launch.runtimeVersion.description": "Используемая версия среды выполнения \"node\". Требует \"nvm\".",
			"node.launch.useWSL.deprecation": "\"useWSL\" объявлено нерекомендуемым, и его поддержка будет прекращена. Используйте вместо него расширение \"Remote - WSL\".",
			"node.launch.useWSL.description": "Использовать подсистему Windows для Linux.",
			"node.localRoot.description": "Путь к локальному каталогу, содержащему программу.",
			"node.pauseForSourceMap.description": "Следует ли ждать, пока загружаются исходные карты для каждого входящего скрипта? Это снижает производительность и может быть безопасно отключено при нехватке места на диске при условии, что \"rootPath\" не отключен.",
			"node.port.description": "Порт отладки для подключения. Значение по умолчанию — 9229.",
			"node.processattach.config.name": "Подключиться к процессу",
			"node.profileStartup.description": "Если этот параметр имеет значение true, профилирование начнется при запуске процесса",
			"node.remoteRoot.description": "Абсолютный путь к удаленному каталогу, содержащему программу.",
			"node.resolveSourceMapLocations.description": "Список шаблонов minimatch для расположений (папок и URL-адресов), в которых можно использовать сопоставители с исходным кодом для разрешения локальных файлов. Это можно применять, чтобы избежать неправильного внедрения в код, сопоставленный с исходным кодом. Шаблонам можно назначать префикс \"!\", чтобы исключить их. Можно задать пустой массив или значение NULL, чтобы избежать ограничения.",
			"node.showAsyncStacks.description": "Отображение асинхронных вызовов, которые привели к текущему стеку вызовов.",
			"node.snippet.attach.description": "Подключиться к запущенной программе Node",
			"node.snippet.attach.label": "Node.js: подключение",
			"node.snippet.attachProcess.description": "Открыть средство выбора процессов для выбора процесса, к которому нужно подключиться",
			"node.snippet.attachProcess.label": "Node.js: подключение к процессу",
			"node.snippet.electron.description": "Отладка основного процесса Electron",
			"node.snippet.electron.label": "Node.js: основной Electron",
			"node.snippet.gulp.description": "Задача Gulp по отладке (убедитесь, что в вашем проекте установлен локальный Gulp)",
			"node.snippet.gulp.label": "Node.js: задача Gulp",
			"node.snippet.launch.description": "Запуск программы на базе Node в режиме отладки",
			"node.snippet.launch.label": "Node.js: запуск программы",
			"node.snippet.mocha.description": "Отладка тестов Mocha",
			"node.snippet.mocha.label": "Node.js: тесты Mocha",
			"node.snippet.nodemon.description": "Использование Nodemon для перезапуска сеанса отладки при изменениях исходного кода",
			"node.snippet.nodemon.label": "Node.js: настройка Nodemon",
			"node.snippet.npm.description": "Запуск программы на основе Node.js через сценарий отладки npm",
			"node.snippet.npm.label": "Node.js: запуск через npm",
			"node.snippet.remoteattach.description": "Подключение к порту отладки удаленной программы Node",
			"node.snippet.remoteattach.label": "Node.js: подключение к удаленной программе",
			"node.snippet.yo.description": "Генератор Yeoman отладки (чтобы установить, выполните команду \"npm link\" в папке проекта)",
			"node.snippet.yo.label": "Node.js: генератор Yeoman",
			"node.sourceMapPathOverrides.description": "Набор сопоставлений для изменения расположения исходных файлов с расположения, указанного в карте исходного кода, на расположение этих файлов на диске.",
			"node.sourceMaps.description": "Использовать сопоставители с исходным кодом JavaScript (если они существуют).",
			"node.stopOnEntry.description": "Автоматически остановить программу после запуска.",
			"node.timeout.description": "Повторять в течение этого количества миллисекунд для подключения к Node.js. Значение по умолчанию — 10 000 мс.",
			"node.versionHint.description": "Позволяет явно указать запущенную версию Node, которую можно использовать для отключения или включения определенных вариантов поведения в случаях, когда автоматическое обнаружение версий не работает.",
			"node.websocket.address.description": "Точный адрес веб-сокета для подключения. Если не указан, то он будет определен по адресу и порту.",
			"openEdgeDevTools.label": "Открыть Devtools браузера",
			"outFiles.description": "Если включены сопоставители с исходным кодом, эти стандартные маски указывают созданные файлы JavaScript. Если маска начинается с \"!\", файлы исключаются. Если значение не указано, предполагается, что созданный код находится в том же каталоге, что и исходный.",
			"pretty.print.script": "Качественная печать для отладки",
			"profile.start": "Использовать профиль производительности",
			"profile.stop": "Остановить профиль производительности",
			"remove.browser.breakpoint": "Удалить точку останова браузера",
			"remove.browser.breakpoint.all": "Удалить все точки останова браузера",
			"requestCDPProxy.label": "Запросить прокси-сервер CDP для сеанса отладки",
			"skipFiles.description": "Массив стандартных масок для файлов, пропускаемых при отладке. Маска \"<node_internals>/**\" соответствует всем внутренним модулям Node.js.",
			"smartStep.description": "Автоматическая пошаговая обработка сформированного кода, который невозможно сопоставить обратно с исходным источником.",
			"start.with.stop.on.entry": "Запустить отладку и остановить ее при вводе",
			"startWithStopOnEntry.label": "Запустить отладку и остановить ее при вводе",
			"timeouts.generalDescription": "Время ожидания для нескольких операций отладчика.",
			"timeouts.generalDescription.markdown": "Время ожидания для нескольких операций отладчика.",
			"timeouts.hoverEvaluation.description": "Время до прекращения оценки значений для символов, на которые наведен курсор. Если настроено значение 0, время вычисления при наведении курсора никогда не истекает.",
			"timeouts.sourceMaps.description": "Время ожидания, относящееся к операциям сопоставления исходного кода.",
			"timeouts.sourceMaps.sourceMapCumulativePause.description": "Допустимое дополнительное время ожидания обработки сопоставлений исходного кода после истечения минимального времени (sourceMapMinPause) для каждого сеанса (в миллисекундах)",
			"timeouts.sourceMaps.sourceMapMinPause.description": "Минимальное время в миллисекундах, затраченное на ожидание обработки каждого сопоставления исходного кода при синтаксическом анализе сценария.",
			"toggle.skipping.this.file": "Переключить пропуск этого файла",
			"trace.boolean.description": "Для Trace можно установить значение \"true\", чтобы записывать диагностические журналы на диск.",
			"trace.description": "Настраивает то, какие диагностические выходные данные создаются.",
			"trace.logFile.description": "Настраивает, в какое место на диске записываются журналы.",
			"trace.stdio.description": "Возвращать ли данные трассировки из запущенного приложения или браузера.",
			"workspaceTrust.description": "Для отладки кода в этой рабочей области требуется доверие."
		},
		"/src/binder": {
			"breakpoint.provisionalBreakpoint": "Неограниченная точка останова"
		},
		"/src/debugServer": {
			"breakpoint.provisionalBreakpoint": "Неограниченная точка останова"
		},
		"/src/vsDebugServer": {
			"session.rootSessionName": "Адаптер отладки JavaScript"
		},
		"/src/adapter/customBreakpoints": {
			"breakpoint.animationFrameFired": "Кадр анимации запущен",
			"breakpoint.cancelAnimationFrame": "Отменить кадр анимации",
			"breakpoint.closeAudioContext": "Закрыть контекст звука (AudioContext)",
			"breakpoint.createAudioContext": "Создать контекст звука (AudioContext)",
			"breakpoint.createCanvasContext": "Создать контекст холста",
			"breakpoint.cspViolation": "Сценарий заблокирован политикой безопасности содержимого",
			"breakpoint.cspViolationNamed": "Нарушение CSP \"{0}\"",
			"breakpoint.cspViolationNamedDetails": "Приостановлено в точке останова инструментирования для нарушения политики безопасности содержимого, директива \"{0}\".",
			"breakpoint.eventListenerNamed": "Приостановлено в точке останова прослушивателя событий \"{0}\", активировано в \"{1}\".",
			"breakpoint.instrumentationNamed": "Приостановлено в точке останова инструментирования \"{0}\".",
			"breakpoint.requestAnimationFrame": "Запросить кадр анимации",
			"breakpoint.resumeAudioContext": "Возобновить контекст звука (AudioContext)",
			"breakpoint.scriptFirstStatement": "Первая инструкция сценария",
			"breakpoint.setInnerHtml": "Задать innerHTML",
			"breakpoint.setIntervalFired": "Сработал метод setInterval",
			"breakpoint.setTimeoutFired": "Сработал метод setTimeout",
			"breakpoint.suspendAudioContext": "Приостановить контекст звука (AudioContext)",
			"breakpoint.webglErrorFired": "Произошла ошибка WebGL.",
			"breakpoint.webglErrorNamed": "Ошибка WebGL \"{0}\".",
			"breakpoint.webglErrorNamedDetails": "Приостановлено в точке останова инструментирования для ошибки WebGL, ошибка \"{0}\".",
			"breakpoint.webglWarningFired": "Выдано предупреждение WebGL."
		},
		"/src/adapter/debugAdapter": {
			"breakpoint.caughtExceptions": "Перехваченные исключения",
			"breakpoint.caughtExceptions.description": "Прерывается только при ошибках или отклонениях обещаний, которые не обрабатываются.",
			"breakpoint.uncaughtExceptions": "Неперехваченные исключения",
			"error.cannotPrettyPrint": "Не удалось применить стилевые форматы.",
			"error.sourceContentDidFail": "Не удалось получить содержимое источника.",
			"error.sourceNotFound": "Источник не найден.",
			"error.variableNotFound": "Переменная не найдена."
		},
		"/src/adapter/sources": {
			"source.skipFiles": "Пропущено skipFiles"
		},
		"/src/adapter/stackTrace": {
			"scope.block": "Заблокировать",
			"scope.catch": "Блок catch",
			"scope.closure": "Замыкание",
			"scope.closureNamed": "Замыкание ({0})",
			"scope.eval": "Оценка",
			"scope.global": "Глобальный",
			"scope.local": "Локальный",
			"scope.module": "Модуль",
			"scope.returnValue": "Возвращаемое значение",
			"scope.script": "Сценарий",
			"scope.with": "Блок With",
			"smartStepSkipLabel": "Пропущено smartStep",
			"source.skipFiles": "Пропущено skipFiles"
		},
		"/src/adapter/threads": {
			"error.evaluateDidFail": "Не удается выполнить оценку.",
			"error.evaluateOnAsyncStackFrame": "Не удается оценить асинхронный кадр стека.",
			"error.pauseDidFail": "Не удалось выполнить приостановку.",
			"error.restartFrameAsync": "Не удается перезапустить асинхронный кадр",
			"error.resumeDidFail": "Не удалось выполнить возобновление.",
			"error.stackFrameNotFound": "Кадр стека не найден.",
			"error.stepInDidFail": "Не удалось выполнить шаг с заходом.",
			"error.stepOutDidFail": "Не удалось выполнить шаг с выходом",
			"error.stepOverDidFail": "Не удалось выполнить следующий шаг.",
			"error.threadNotPaused": "Поток не был приостановлен.",
			"error.threadNotPausedOnException": "Поток не был приостановлен во время исключения.",
			"error.unknownRestartError": "Не удалось перезапустить кадрирование",
			"pause.DomBreakpoint": "Приостановлено в точке останова DOM.",
			"pause.assert": "Приостановлено в утверждении.",
			"pause.breakpoint": "Приостановлено в точке останова.",
			"pause.debugCommand": "Приостановлено в вызове debug().",
			"pause.default": "Приостановлено на операторе отладчика",
			"pause.eventListener": "Приостановлено в прослушивателе событий.",
			"pause.exception": "Приостановлено в исключении.",
			"pause.instrumentation": "Приостановлено в точке останова инструментирования.",
			"pause.oom": "Приостановлено перед исключением \"Недостаточно памяти\".",
			"pause.promiseRejection": "Приостановлено на отклонении обещания",
			"pause.xhr": "Приостановлено в XMLHttpRequest или при получении.",
			"reason.description.restart": "Приостановлено на записи кадра",
			"warnings.handleSourceMapPause.didNotWait": "Предупреждение! Обработка сопоставителей с исходным кодом {0} заняла больше {1} мс, поэтому мы продолжили выполнение, не дожидаясь установки всех точек останова для скрипта."
		},
		"/src/adapter/variableStore": {
			"error.customValueDescriptionGeneratorFailed": "{0} (не удалось описать: {1})",
			"error.emptyExpression": "Не удается задать пустое значение",
			"error.invalidExpression": "Недопустимое выражение",
			"error.setVariableDidFail": "Не удалось задать значение переменной.",
			"error.unknown": "Неизвестная ошибка",
			"error.variableNotFound": "Переменная не найдена"
		},
		"/src/dap/errors": {
			"NVM_HOME.not.found.message": "Для атрибута \"runtimeVersion\" требуется диспетчер версий Node.js \"nvm-windows\" или \"nvs\".",
			"NVS_HOME.not.found.message": "Для атрибута \"runtimeVersion\" с версией или архитектурой необходимо установить \"nvs\".",
			"VSND2011": "Не удается запустить целевой объект отладки в терминале ({0}).",
			"VSND2029": "Не удается загрузить переменные среды из файла ({0}).",
			"asyncScopesNotAvailable": "Переменные недоступны в асинхронных стеках",
			"breakpointSyntaxError": "Синтаксическая ошибка при задании точки останова с условием {0} в строке {1}: {2}",
			"browserVersionNotFound": "Не удалось найти {0} версии {1}. Доступные автоматически обнаруженные версии: {2}. Вы можете указать одну из этих версий в качестве значения параметра \"runtimeExecutable\" в файле launch.json или указать абсолютный путь к исполняемому файлу браузера.",
			"error.browserAttachError": "Не удалось подключение к браузеру.",
			"error.browserLaunchError": "Не удалось запустить браузер: \"{0}\"",
			"error.threadNotFound": "Поток не найден",
			"invalidHitCondition": "Недопустимое условие попадания \"{0}\". Ожидается выражение, например, \"> 42\" или \"== 2\".",
			"noBrowserInstallFound": "Не удается найти установку браузера в вашей системе. Попробуйте установить его или укажите абсолютный путь к браузеру для \"runtimeExecutable\" в файле launch.json.",
			"noUwpPipeFound": "Не удалось подключиться ни к одному каналу веб-представления UWP. Убедитесь, что ваше веб-представление размещено в режиме отладки и что указано правильное имя \"pipeName\" в файле \"launch.json\".",
			"profile.error.concurrent": "Остановите выполняющийся профиль, прежде чем запускать новый.",
			"profile.error.generic": "Произошла ошибка при извлечении профиля из целевого объекта.",
			"runtime.node.notfound": "Не удается найти двоичный файл \"{0}\" Node.js: {1}. Убедитесь, что Node.js установлен и путь к нему указан в переменной PATH, или установите параметр \"runtimeExecutable\" в файле launch.json",
			"runtime.node.outdated": "Версия Node в \"{0}\" устарела (версия {1}), требуется версия Node 8.x или более поздняя.",
			"runtime.version.not.found.message": "Версия Node.js \"{0}\" не установлена с помощью диспетчера версий {1}.",
			"sourcemapParseError": "Не удалось считать сопоставление источника для {0}: {1}",
			"uwpPipeNotAvailable": "Отладка веб-представления UWP недоступна на вашей платформе."
		},
		"/src/ui/autoAttach": {
			"details": "Подробные сведения"
		},
		"/src/ui/companionBrowserLaunch": {
			"cannotDebugInBrowser": "Не удается запустить браузер в режиме отладки. Откройте эту рабочую область в VS Code на компьютере, чтобы включить отладку."
		},
		"/src/ui/debugLinkUI": {
			"debugLink.invalidUrl": "Указан недопустимый URL-адрес.",
			"debugLink.savePrompt": "Вы хотите сохранить конфигурацию в файле launch.js для последующего быстрого доступа к ней?",
			"never": "Никогда",
			"no": "Нет",
			"yes": "Да"
		},
		"/src/ui/debugNpmScript": {
			"debug.npm.noScripts": "Скрипты npm в вашем package.json не найдены",
			"debug.npm.noWorkspaceFolder": "Для отладки скриптов npm нужно открыть папку рабочей области.",
			"debug.npm.notFound.open": "Изменить файл package.json",
			"debug.npm.parseError": "Не удалось считать {0}: {1}"
		},
		"/src/ui/debugTerminalUI": {
			"terminal.cwdpick": "Выбрать текущий рабочий каталог для нового терминала"
		},
		"/src/ui/diagnosticsUI": {
			"inspectSessionEnded": "Похоже, сеанс отладки уже завершился. Попробуйте еще раз выполнить отладку, а затем запустите команду \"Debug: Diagnose Breakpoint Problems\".",
			"never": "Никогда",
			"notNow": "Не сейчас",
			"selectInspectSession": "Выберите сеанс, который необходимо проверить:",
			"yes": "Да"
		},
		"/src/ui/disableSourceMapUI": {
			"always": "Всегда в этой рабочей области",
			"disableSourceMapUi.msg": "Отсутствует путь к файлу, на который ссылается сопоставитель с исходным кодом. Вы хотите вместо этого выполнить отладку скомпилированной версии?",
			"no": "Нет",
			"yes": "Да"
		},
		"/src/ui/edgeDevToolOpener": {
			"selectEdgeToolSession": "Выберите страницу, на которой вы хотите открыть devtools"
		},
		"/src/ui/linkedBreakpointLocationUI": {
			"ignore": "Пропустить",
			"readMore": "Подробнее"
		},
		"/src/ui/longPredictionUI": {
			"longPredictionWarning.disable": "Больше не показывать",
			"longPredictionWarning.message": "Настройка точек остановка занимает некоторое время. Вы можете ускорить этот процесс, изменив \"outFiles\" в файле launch.json.",
			"longPredictionWarning.noFolder": "Папка рабочей области не открыта.",
			"longPredictionWarning.open": "Открыть launch.json"
		},
		"/src/ui/processPicker": {
			"cannot.enable.debug.mode.error": "Присоединение к процессу: не удается включить режим отладки для процесса \"{0}\" ({1}).",
			"pickNodeProcess": "Выберите процесс node.js, к которому нужно подключиться",
			"process.id.error": "Присоединение к процессу: \"{0}\" не похоже на идентификатор процесса.",
			"process.id.port.signal": "идентификатор процесса: {0}, порт отладки: {1} ({2})",
			"process.id.signal": "идентификатор процесса: {0} ({1})",
			"process.picker.error": "Сбой средства выбора процессов ({0})"
		},
		"/src/ui/terminalLinkHandler": {
			"cantOpenChromeOnWeb": "Не удается запустить браузер в режиме отладки. Если вы хотите выполнить отладку этой веб-страницы, откройте эту рабочую область в VS Code на компьютере.",
			"terminalLinkHover.debug": "Отладка URL"
		},
		"/src/adapter/breakpoints/userDefinedBreakpoint": {
			"breakpoint.provisionalBreakpoint": "Неограниченная точка останова"
		},
		"/src/adapter/console/queryObjectsMessage": {
			"queryObject.couldNotQuery": "Не удалось отправить запрос к указанному объекту.",
			"queryObject.errorPreview": "Не удалось создать предварительную версию: {0}",
			"queryObject.invalidObject": "Запросы можно отправлять только к объектам."
		},
		"/src/adapter/console/textualMessage": {
			"console.assert": "Сбой утверждения"
		},
		"/src/adapter/profiling/basicCpuProfiler": {
			"profile.cpu.description": "Создает файл CPUPROFILE, который можно открыть в Chrome Devtools",
			"profile.cpu.label": "Профиль ЦП"
		},
		"/src/adapter/profiling/basicHeapProfiler": {
			"profile.heap.description": "Создает файл HEAPPROFILE, который можно открыть в Chrome DevTools",
			"profile.heap.label": "Профиль кучи"
		},
		"/src/adapter/profiling/heapDumpProfiler": {
			"profile.heap.description": "Создает файл HEAPSNAPSHOT, который можно открыть в Chrome DevTools",
			"profile.heap.label": "Снимок кучи"
		},
		"/src/targets/browser/browserAttacher": {
			"attach.cannotConnect": "Не удается подключиться к целевому объекту в {0}: {1}",
			"chrome.targets.placeholder": "Перейдите на вкладку"
		},
		"/src/targets/node/nodeAttacher": {
			"node.attach.restart.message": "Потеряно подключение к отлаживаемому компоненту, повторное подключение через {0} мс\r\n"
		},
		"/src/targets/node/nodeBinaryProvider": {
			"outOfDate": "{0} Вы все равно хотите выполнить отладку?",
			"runtime.node.notfound.enoent": "путь не существует",
			"runtime.node.notfound.spawnErr": "ошибка при получении версии: {0}",
			"warning.16bpIssue": "Некоторые точки останова могут не работать в вашей версии Node.js. Рекомендуется выполнить обновление, чтобы получить последние исправления ошибок, улучшения производительности и исправления системы безопасности. Подробные сведения: https://aka.ms/AAcsvqm",
			"warning.8outdated": "Вы используете устаревшую версию Node.js. Рекомендуется выполнить обновление для получения исправлений последних ошибок, производительности и системы безопасности.",
			"yes": "Да"
		},
		"/src/ui/configuration/chromiumDebugConfigurationProvider": {
			"chrome.launch.name": "Запустить Chrome на localhost",
			"existingBrowser.alert": "Похоже, браузер уже запущен из {0}. Закройте его перед отладкой, в противном случае подключение к браузеру из VS Code может завершиться неудачно.",
			"existingBrowser.debugAnyway": "Все равно выполнить отладку",
			"existingBrowser.location.default": "старый сеанс отладки",
			"existingBrowser.location.userDataDir": "настроенный каталог данных пользователя"
		},
		"/src/ui/configuration/edgeDebugConfigurationProvider": {
			"chrome.launch.name": "Запустить Microsoft Edge на localhost"
		},
		"/src/ui/configuration/nodeDebugConfigurationProvider": {
			"debug.terminal.label": "Терминал отладки JavaScript",
			"node.launch.currentFile": "Запустить текущий файл",
			"node.launch.script": "Запустить сценарий: {0}"
		},
		"/src/ui/configuration/nodeDebugConfigurationResolver": {
			"cwd.notFound": "Настроенный параметр \"cwd\" {0} не является папкой.",
			"mern.starter.explanation": "Создана конфигурация запуска для проекта «{0}».",
			"node.launch.config.name": "Запустить программу",
			"outFiles.explanation": "Установите шаблон(ы) поиска в артибуте 'outFiles' так, что бы они покрывали сгенерированый JavaScript",
			"program.guessed.from.package.json.explanation": "Запуск конфигурации, созданной на основе «package.json».",
			"program.not.found.message": "Не удается найти программу для отладки"
		},
		"/src/ui/profiling/breakpointTerminationCondition": {
			"breakpointTerminationWarnConfirm": "Понятно",
			"breakpointTerminationWarnSlow": "Профилирование с включенными точками останова может изменить производительность кода. Может быть полезно проверить результаты с условиями завершения \"Длительность\" или \"Вручную\".",
			"profile.termination.breakpoint.description": "Выполнять до попадания в указанную точку останова",
			"profile.termination.breakpoint.label": "Выбрать точку останова"
		},
		"/src/ui/profiling/durationTerminationCondition": {
			"profile.termination.duration.description": "Выполнять в течение заданного времени",
			"profile.termination.duration.inputTitle": "Длительность профиля",
			"profile.termination.duration.invalidFormat": "Введите число",
			"profile.termination.duration.invalidLength": "Введите число больше 1.",
			"profile.termination.duration.label": "Длительность",
			"profile.termination.duration.placeholder": "Длительность профиля в секундах, например, \"5\""
		},
		"/src/ui/profiling/manualTerminationCondition": {
			"profile.termination.duration.description": "Выполнять до остановки вручную",
			"profile.termination.duration.label": "Вручную"
		},
		"/src/ui/profiling/uiProfileManager": {
			"no": "Нет",
			"profile.alreadyRunning": "Сеанс профилирования уже выполняется. Вы хотите остановить его и начать новый сеанс?",
			"profile.sessionState": "Профилирование",
			"profile.status.default": "$(loading~spin) Щелкните, чтобы остановить профилирование",
			"profile.status.multiSession": "$(loading~spin) Щелкните, чтобы остановить профилирование (сеансов: {0})",
			"profile.status.single": "$(loading~spin) Щелкните, чтобы остановить профилирование ({0})",
			"profile.termination.title": "Время выполнения профиля:",
			"profile.type.title": "Тип профиля:",
			"yes": "Да"
		},
		"/src/ui/profiling/uiProfileSession": {
			"profile.saving": "Сохранение.",
			"progress.profile.start": "Идет запуск профиля…",
			"progress.profile.stop": "Идет остановка профиля…"
		}
	}
}