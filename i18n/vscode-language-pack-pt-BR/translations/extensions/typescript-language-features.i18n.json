{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "Não foi possível determinar as referências"
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"manyImplementationLabel": "{0} implementações",
			"oneImplementationLabel": "Uma implementação"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"manyReferenceLabel": "{0} referências",
			"oneReferenceLabel": "Uma referência"
		},
		"dist/languageFeatures/completions": {
			"acquiringTypingsDetail": "Adquirindo definições de digitações para o Intellisense.",
			"acquiringTypingsLabel": "Adquirindo digitações...",
			"selectCodeAction": "Selecione uma ação de código para aplicar"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Habilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"ts-expect-error": "Suprime erros de verificação de @ts-check na próxima linha de um arquivo, esperando que pelo menos um exista.",
			"ts-ignore": "Suprime erros de @ts-check na próxima linha de um arquivo.",
			"ts-nocheck": "Desabilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo."
		},
		"dist/languageFeatures/fileReferences": {
			"error.noResource": "Falha ao localizar as referências de arquivo. Nenhum recurso fornecido.",
			"error.unknownFile": "Falha ao localizar as referências de arquivo. Tipo de arquivo desconhecido.",
			"error.unsupportedLanguage": "Falha ao localizar as referências de arquivo. Tipo de arquivo sem suporte.",
			"error.unsupportedVersion": "Falha ao localizar as referências de arquivo. Exige o TypeScript 4.2 +.",
			"progress.title": "Localizando referências de arquivo"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Corrija todos os problemas corrigíveis de JS/TS",
			"autoFix.missingImports.label": "Adicionar todas as importações ausentes",
			"autoFix.unused.label": "Remover todo o código não usado"
		},
		"dist/languageFeatures/hover": {
			"loadingPrefix": "(carregando...)"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Comentário do JSDoc"
		},
		"dist/languageFeatures/organizeImports": {
			"organizeImportsAction.title": "Organizar as Importações",
			"sortImportsAction.title": "Classificar Importações"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (Reparar tudo no arquivo)"
		},
		"dist/languageFeatures/refactor": {
			"extractConstant.disabled.reason": "A seleção atual não pode ser extraída",
			"extractConstant.disabled.title": "Extrair para constante",
			"extractFunction.disabled.reason": "A seleção atual não pode ser extraída",
			"extractFunction.disabled.title": "Extrair para função",
			"refactor.documentation.title": "Saiba mais sobre refatoramentos JS/TS",
			"refactoringFailed": "Não pode aplicar a refatoração"
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Ocorreu um erro ao renomear o arquivo"
		},
		"dist/languageFeatures/sourceDefinition": {
			"error.noReferences": "Nenhuma definição de origem encontrada.",
			"error.noResource": "Falha ao ir para Definição de Origem. Nenhum recurso fornecido.",
			"error.unknownFile": "Falha ao ir para Definição de Origem. Tipo de arquivo desconhecido.",
			"error.unsupportedLanguage": "Falha ao ir para Definição de Origem. Tipo de arquivo sem suporte.",
			"error.unsupportedVersion": "Falha ao Ir para a Definição de origem. Requer TypeScript 4.7+.",
			"progress.title": "Localizando definições de origem"
		},
		"dist/languageFeatures/tsconfig": {
			"documentLink.tooltip": "Seguir o link",
			"openTsconfigExtendsModuleFail": "Falha ao resolver {0} como módulo"
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"accept.title": "Sim",
			"always.title": "Sempre atualizar os imports automaticamente",
			"moreFile": "... 1 arquivo adicional não está mostrado",
			"moreFiles": "... {0} arquivos adicionais não estão mostrados",
			"never.title": "Nunca atualizar imports automaticamente",
			"prompt": "Atualizar as importações para '{0}'?",
			"promptMoreThanOne": "Atualizar as importações para os seguintes arquivos {0}?",
			"reject.title": "Não",
			"renameProgress.title": "Verificando a atualização das importações JS/TS"
		},
		"dist/task/taskProvider": {
			"badTsConfig": "A tarefa TypeScript em tasks.json contém \"\\\\\". Tarefas TypeScript tsconfig devem usar \"/\"",
			"buildAndWatchTscLabel": "monitorar – {0}",
			"buildTscLabel": "compilar – {0}"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "O caminho {0} não aponta para uma instalação de tsserver válida. Voltando para a versão do TypeScript empacotada."
		},
		"dist/tsServer/versionManager": {
			"allow": "Permitir",
			"dismiss": "Ignorar",
			"learnMore": "Saiba mais sobre o gerenciamento de versões do TypeScript",
			"promptUseWorkspaceTsdk": "Este workspace contém uma versão do TypeScript. Deseja usar a versão do TypeScript do workspace para recursos de linguagem TypeScript e JavaScript?",
			"selectTsVersion": "Selecione a versão do TypeScript usada para os recursos de linguagem JavaScript e TypeScript",
			"suppress prompt": "Nunca neste Workspace",
			"useVSCodeVersionOption": "Use a versão do VS Code",
			"useWorkspaceVersionOption": "Usar Versão do Workspace"
		},
		"dist/tsServer/versionProvider": {
			"couldNotLoadTsVersion": "Não foi possível carregar a versão do TypeScript neste caminho"
		},
		"dist/tsServer/versionProvider.electron": {
			"noBundledServerFound": "Tsserver do VS Code foi eliminado por outro aplicativo como uma ferramenta de detecção de vírus com um comportamento inadequado. Por favor reinstale o VS Code."
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "O caminho {0} não aponta para uma instalação tsserver válida. Voltando para a versão do TypeScript em pacote.",
			"openTsServerLog.openFileFailedFailed": "Não foi possível abrir o arquivo de log do TS Server",
			"serverDiedFiveTimes": "O serviço de linguagem JS/TS falhou cinco vezes nos últimos 5 minutos.",
			"serverDiedFiveTimesWithPlugins": "O serviço de linguagem JS/TS falhou cinco vezes nos últimos 5 Minutos.\r\nIsso pode ser causado por um plug-in contribuído por uma destas extensões: {0}",
			"serverDiedImmediately": "O serviço de linguagem JS/TS falhou imediatamente cinco vezes. O serviço não será reiniciado.",
			"serverDiedImmediatelyWithPlugins": "O serviço de linguagem JS/TS falhou imediatamente cinco vezes. O serviço não será reiniciado.\r\nIsso pode ser causado por um plug-in contribuído por uma destas extensões: {0}",
			"serverDiedOnce": "O serviço de linguagem JS/TS falhou.",
			"serverDiedOnceWithPlugins": "O serviço de linguagem JS/TS falhou.\r\nIsso pode ser causado por um plug-in contribuído por uma destas extensões: {0}",
			"serverDiedReportIssue": "Relatar Problema",
			"serverExitedWithError": "O servidor de linguagem TypeScript foi encerrado com o erro. A mensagem de erro é: {0}",
			"serverLoading.progress": "Inicializando recursos de linguagem do JS/TS",
			"typescript.openTsServerLog.enableAndReloadOption": "Habilitar o registro em log e reiniciar o TS Server",
			"typescript.openTsServerLog.loggingNotEnabled": "O registro em log do Servidor TS está desativado. Defina `typescript.tsserver.log` e reinicie o servidor TS para habilitar o registro em log",
			"typescript.openTsServerLog.noLogFile": "O TS Server não iniciou o registro em log.",
			"usingOldTsVersion.detail": "O espaço de trabalho está usando uma versão antiga do TypeScript ({0}).\r\n\r\nAntes de relatar um problema, atualize o espaço de trabalho para usar a versão estável mais recente do TypeScript para garantir que o bug ainda não tenha sido corrigido.",
			"usingOldTsVersion.title": "Atualize sua versão do TypeScript"
		},
		"dist/ui/intellisenseStatus": {
			"pending.detail": "Carregando o status do IntelliSense",
			"resolved.command.title.createJsconfig": "Criar um jsconfig",
			"resolved.command.title.createTsconfig": "Criar tsconfig",
			"resolved.command.title.open": "Abrir o Arquivo de Configuração",
			"resolved.detail.noJsConfig": "Nenhum jsconfig",
			"resolved.detail.noOpenedFolders": "Nenhuma pasta aberta",
			"resolved.detail.noTsConfig": "Nenhum tsconfig",
			"resolved.detail.notInOpenedFolder": "O arquivo não é parte das pastas abertas",
			"statusItem.name": "Status do IntelliSense JS/TS",
			"syntaxOnly.command.title.learnMore": "Saiba mais",
			"syntaxOnly.detail": "O IntelliSense não está disponível em Todo o Projeto",
			"syntaxOnly.text": "Modo Parcial"
		},
		"dist/ui/jsNodeWalkthrough.electron": {
			"noNodeInstallFound": "Não foi possível encontrar o Node.js neste computador. Se você acabou de instalá-lo, talvez seja necessário recarregar o VS Code.",
			"nodeNotFoundDebugAnyway": "Tente depurar mesmo assim",
			"nodeNotFoundDismissDialog": "Ignorar",
			"reloadWindowForNode": "Recarregar VS Code"
		},
		"dist/ui/versionStatus": {
			"versionStatus.command": "Selecionar a Versão",
			"versionStatus.detail": "Versão TypeScript",
			"versionStatus.name": "Versão TypeScript"
		},
		"dist/utils/api": {
			"invalidVersion": "versão inválida"
		},
		"dist/utils/logLevelMonitor": {
			"typescript.extendedLogging.disableLogging": "Desabilitar o registro em log",
			"typescript.extendedLogging.doNotShowAgain": "Não mostrar novamente",
			"typescript.extendedLogging.isEnabled": "O log do TS Server está habilitado no momento, o que pode afetar o desempenho."
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/tsconfig": {
			"typescript.configureJsconfigQuickPick": "Configurar jsconfig.json",
			"typescript.configureTsconfigQuickPick": "Configurar tsconfig.json",
			"typescript.noJavaScriptProjectConfig": "O arquivo não faz parte de um projeto JavaScript. Exiba a [documentação jsconfig.json]({0}) para saber mais.",
			"typescript.noTypeScriptProjectConfig": "O arquivo não faz parte de um projeto TypeScript. Exiba a [documentação tsconfig.json]({0}) para saber mais.",
			"typescript.projectConfigCouldNotGetInfo": "Não foi possível determinar o projeto do TypeScript ou JavaScript",
			"typescript.projectConfigNoWorkspace": "Abra uma pasta no VS Code para usar um projeto do TypeScript ou JavaScript",
			"typescript.projectConfigUnsupportedFile": "Não foi possível determinar o projeto do TypeScript ou JavaScript. Tipo de arquivo sem suporte"
		},
		"package": {
			"codeActions.refactor.extract.constant.description": "Extrair expressão para constante.",
			"codeActions.refactor.extract.constant.title": "Extrair constante",
			"codeActions.refactor.extract.function.description": "Extrair expressão para o método ou a função.",
			"codeActions.refactor.extract.function.title": "Extrair função",
			"codeActions.refactor.extract.interface.description": "Extrair tipo para uma interface.",
			"codeActions.refactor.extract.interface.title": "Extrair interface",
			"codeActions.refactor.extract.type.description": "Extrair tipo para um alias de tipo.",
			"codeActions.refactor.extract.type.title": "Extrair tipo",
			"codeActions.refactor.move.newFile.description": "Mover a expressão para um novo arquivo.",
			"codeActions.refactor.move.newFile.title": "Mover para um novo arquivo",
			"codeActions.refactor.rewrite.arrow.braces.description": "Adicionar ou remover chaves em uma função de seta.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Regravar chaves de seta",
			"codeActions.refactor.rewrite.export.description": "Converter entre exportação padrão e exportação nomeada.",
			"codeActions.refactor.rewrite.export.title": "Converter exportação",
			"codeActions.refactor.rewrite.import.description": "Converter entre importações nomeadas e importações de namespace.",
			"codeActions.refactor.rewrite.import.title": "Converter importação",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Converter parâmetros para objeto não estruturado",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Gerar acessadores 'get' e 'set'",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Gerar acessadores",
			"codeActions.source.organizeImports.title": "Organizar importações",
			"configuration.implicitProjectConfig.checkJs": "Habilitar/desabilitar a verificação semântica de arquivos JavaScript. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Habilitar/desabilitar os `experimentalDecorators` em arquivos JavaScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.",
			"configuration.implicitProjectConfig.module": "Define o sistema do módulo do programa. Ver mais: https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Habilitar/desabilitar os [tipos de função estritos](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.",
			"configuration.implicitProjectConfig.strictNullChecks": "Habilitar/desabilitar as [verificações nulas estritas](https://www.typescriptlang.org/tsconfig#strictNullChecks) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.",
			"configuration.implicitProjectConfig.target": "Defina a versão da linguagem JavaScript de destino para JavaScript emitido e inclua as declarações de biblioteca. Veja mais: https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Suprime dicas de nome de parâmetro em argumentos cujo texto é idêntico ao nome do parâmetro.",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Suprimir dicas de tipo em variáveis cujo nome é idêntico ao nome do tipo. Requer o uso do TypeScript 4.8+ no workspace.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.checkJs`.",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.experimentalDecorators`.",
			"configuration.suggest.autoImports": "Habilitar/desabilitar sugestões de importação automática.",
			"configuration.suggest.classMemberSnippets.enabled": "Habilitar/desabilitar preenchimentos de snippet para membros de classe. Requer o uso do TypeScript 4.5+ no workspace",
			"configuration.suggest.completeFunctionCalls": "Concluir funções com assinaturas de parâmetro.",
			"configuration.suggest.completeJSDocs": "Habilitar/desabilitar sugestão para concluir comentários JSDoc.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Exige TS 3.7 ou posterior e as verificações de nulo estrito devem ser habilitadas.",
			"configuration.suggest.includeCompletionsForImportStatements": "Habilitar/desabilitar as conclusões do estilo de importação automática nas instruções de importação de tipo parcial. Exige o uso do TypeScript 4.3 ou superior no workspace.",
			"configuration.suggest.includeCompletionsWithSnippetText": "Habilitar/desabilitar as conclusões de snippet do Servidor TS. Exige o uso do TypeScript 4.3 ou superior no workspace.",
			"configuration.suggest.jsdoc.generateReturns": "Habilitar/desabilitar a geração de anotações `@return` nos modelos JSDoc. Exige o uso do TypeScript 4.2 ou superior no workspace.",
			"configuration.suggest.names": "Habilitar/desabilitar incluindo nomes exclusivos do arquivo em sugestões do JavaScript. Observe que as sugestões de nome sempre são desabilitadas no código do JavaScript que é verificado semanticamente usando `@ts-check` ou `checkJs`.",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Habilitar/desabilitar preenchimentos de snippet para métodos em objetos literais. Requer o uso do TypeScript 4.7+ no workspace",
			"configuration.suggest.paths": "Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.",
			"configuration.surveys.enabled": "Habilitar/desabilitar pesquisas ocasionais que nos ajudam a melhorar o suporte a JavaScript e TypeScript do VS Code.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimental) Habilita o relatório de erros amplo do projeto.",
			"configuration.tsserver.maxTsServerMemory": "A quantidade máxima de memória (em MB) a ser alocada para o processo do servidor do TypeScript.",
			"configuration.tsserver.useSeparateSyntaxServer": "Habilitar/desabilitar a geração de um servidor TypeScript separado que pode responder mais rapidamente às operações relacionadas à sintaxe, como calcular a dobragem ou computar os símbolos de documentos. Exige o uso de TypeScript 3.4.0 ou mais recente no workspace.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Essa configuração foi preterida e substituída por `typescript.tsserver.useSyntaxServer`.",
			"configuration.tsserver.useSyntaxServer": "Controla se TypeScript inicia um servidor dedicado para lidar mais rapidamente com as operações relacionadas à sintaxe, como o dobramento de código de computação.",
			"configuration.tsserver.useSyntaxServer.always": "Use um servidor de sintaxe mais leve para lidar com todas as operações do IntelliSense. Este servidor de sintaxe só pode fornecer IntelliSense para arquivos abertos.",
			"configuration.tsserver.useSyntaxServer.auto": "Gere um servidor completo e um servidor mais leve dedicado às operações de sintaxe. O servidor de sintaxe é usado para acelerar as operações de sintaxe e fornecer IntelliSense durante o carregamento de projetos.",
			"configuration.tsserver.useSyntaxServer.never": "Não use um servidor de sintaxe dedicado. Use um único servidor para lidar com todas as operações do IntelliSense.",
			"configuration.tsserver.watchOptions": "Configurar as estratégias de monitoramento que devem ser usadas para manter o controle de arquivos e diretórios. Exige o uso de TypeScript 3.8 ou posterior no workspace.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Ao usar eventos do sistema de arquivos, esta opção especifica a estratégia de sondagem usada quando o sistema é executado sem inspetores de arquivo nativos e/ou não dá suporte a inspetores de arquivo nativos.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Usar uma fila dinâmica na qual os arquivos modificados menos frequentemente serão verificados com uma frequência menor.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Verificar todos os arquivos várias vezes por segundo a um intervalo fixo para ver se há alterações.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Verificar todos os arquivos várias vezes por segundo para ver se há alterações, mas usar heurística para verificar determinados tipos de arquivos com uma frequência inferior à dos outros.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Desabilitar a observação adiada nos diretórios. A observação adiada é útil quando muitas alterações de arquivo podem ocorrer ao mesmo tempo (por exemplo, uma alteração em node_modules por causa da execução da instalação do npm), mas você pode desabilitá-la com esse sinalizador para algumas configurações menos comuns.",
			"configuration.tsserver.watchOptions.watchDirectory": "Estratégia para como árvores de diretório inteiras são observadas em sistemas que não têm funcionalidade recursiva de observação de arquivo.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Usar uma fila dinâmica na qual os diretórios modificados com menos frequência serão verificados com menos frequência.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Sonda os diretórios em partes, em intervalos regulares. Exige o uso do TypeScript 4.3 ou superior no workspace.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Verificar se há alterações em todos os diretórios várias vezes por segundo em um intervalo fixo.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Tente usar os eventos nativos do sistema operacional/sistema de arquivos para alterações no diretório.",
			"configuration.tsserver.watchOptions.watchFile": "Estratégia para como os arquivos individuais são observados.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Usar uma fila dinâmica na qual os arquivos modificados menos frequentemente serão verificados com uma frequência menor.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Sonda os arquivos em partes, em intervalos regulares. Exige o uso do TypeScript 4.3 ou superior no workspace.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Verificar todos os arquivos várias vezes por segundo a um intervalo fixo para ver se há alterações.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Verificar todos os arquivos várias vezes por segundo para ver se há alterações, mas usar heurística para verificar determinados tipos de arquivos com uma frequência inferior à dos outros.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Tente usar os eventos nativos do sistema operacional/sistema de arquivos para alterações de arquivo.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Tente usar os eventos nativos do sistema operacional/sistema de arquivos para escutar alterações nos diretórios de um arquivo. Isso pode usar menos inspetores de arquivo, mas pode ser menos preciso.",
			"configuration.typescript": "TypeScript",
			"description": "Fornece suporte de linguagem avançada para JavaScript e TypeScript.",
			"displayName": "Recursos de Linguagem TypeScript e JavaScript",
			"format.insertSpaceAfterCommaDelimiter": "Define o tratamento de espaço após um delimitador de vírgula.",
			"format.insertSpaceAfterConstructor": "Define o tratamento de espaço após a palavra-chave do construtor.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Define o tratamento de espaço após a palavra-chave de função para funções anônimas.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Define o tratamento de espaço após abrir e antes de fechar chaves vazias.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.",
			"format.insertSpaceAfterSemicolonInForStatements": "Define o tratamento de espaço após um ponto e vírgula em uma instrução for.",
			"format.insertSpaceAfterTypeAssertion": "Define o tratamento de espaços após declarações de tipo no TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Define o tratamento de espaço após um operador binário.",
			"format.insertSpaceBeforeFunctionParenthesis": "Define o tratamento de espaço antes dos parênteses do argumento de função.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.",
			"format.placeOpenBraceOnNewLineForFunctions": "Define se uma chave de abertura é colocada em uma nova linha para funções.",
			"format.semicolons": "Define o processamento de ponto e vírgula opcional. Exige o uso do TypeScript 3.7 ou mais recente no workspace.",
			"format.semicolons.ignore": "Não inserir nem remover pontos e vírgulas.",
			"format.semicolons.insert": "Inserir pontos e vírgulas nos finais da instrução.",
			"format.semicolons.remove": "Remover sinais de ponto e vírgula desnecessários.",
			"goToProjectConfig.title": "Ir para Configuração do Projeto",
			"inlayHints.parameterNames.all": "Habilite dicas de nome de parâmetro para argumentos literais e não literais.",
			"inlayHints.parameterNames.literals": "Habilite dicas de nome de parâmetro apenas para argumentos literais.",
			"inlayHints.parameterNames.none": "Desabilite as dicas de nome de parâmetro.",
			"javascript.format.enable": "Habilitar/desabilitar o formatador padrão do JavaScript.",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Insira `={}` ou `=\"\"` após os nomes dos atributos com base no tipo de prop. Consulte `javascript.preferences.quoteStyle` para controlar o tipo de aspas usado para atributos de cadeia de caracteres.",
			"javascript.referencesCodeLens.enabled": "Habilitar/desabilitar CodeLens de referências em arquivos JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos JavaScript.",
			"javascript.suggestionActions.enabled": "Habilitar/desabilitar o diagnóstico de sugestão para arquivos JavaScript no editor.",
			"javascript.validate.enable": "Habilitar/desabilitar a validação do JavaScript.",
			"reloadProjects.title": "Recarregar Projeto",
			"taskDefinition.tsconfig.description": "O arquivo tsconfig que define o build do TS.",
			"typescript.autoClosingTags": "Habilitar/desabilitar o fechamento automático de marcas JSX.",
			"typescript.check.npmIsInstalled": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Desabilita [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). A aquisição automática de tipos busca pacotes `@types` do NPM para melhorar o IntelliSense para bibliotecas externas.",
			"typescript.enablePromptUseWorkspaceTsdk": "Permite solicitar que os usuários usem a versão do TypeScript configurada no workspace para IntelliSense.",
			"typescript.findAllFileReferences": "Localizar Referências de Arquivo",
			"typescript.format.enable": "Habilitar/desabilitar o formatador do TypeScript padrão.",
			"typescript.goToSourceDefinition": "Ir para Definição de Origem",
			"typescript.implementationsCodeLens.enabled": "Habilitar/desabilitar CodeLens de implementações. Este CodeLens mostra os implementadores de uma interface.",
			"typescript.locale": "Define a localidade usada para relatar erros de JavaScript e TypeScript. O padrão é usar a localidade do VS Code.",
			"typescript.npm": "Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Abrir o log do TS Server",
			"typescript.preferences.autoImportFileExcludePatterns": "Especifique padrões glob de arquivos a serem excluídos das importações automáticas. Requer o uso do TypeScript 4.8 ou mais recente no espaço de trabalho.",
			"typescript.preferences.importModuleSpecifier": "Estilo de caminho preferencial para importações automáticas.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Prefere uma importação não relativa com base na `baseUrl` ou nos `paths` configurados no `jsconfig.json`/`tsconfig.json`.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Prefere uma importação não relativa somente quando o caminho da importação relativa sai do pacote ou do diretório do projeto. Exige o uso do TypeScript 4.2 + no workspace.",
			"typescript.preferences.importModuleSpecifier.relative": "Prefere um caminho relativo para o local do arquivo importado.",
			"typescript.preferences.importModuleSpecifier.shortest": "Prefere uma importação não relativa somente quando há uma disponível com menos segmentos de caminho do que uma importação relativa.",
			"typescript.preferences.importModuleSpecifierEnding": "Término do caminho preferencial para importações automáticas. Exige o uso do TypeScript 4.5+ no workspace.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Usar as configurações do projeto para selecionar um padrão.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Encurtar `./component/index.js` para `./component/index`.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Não encurtar as terminações de caminho. Incluir a extensão `.js`.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Encurtar `./component/index.js` para `./component`.",
			"typescript.preferences.includePackageJsonAutoImports": "Habilitar/desabilitar a pesquisa de dependências `package.json` para importações automáticas disponíveis.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Pesquisar dependências com base no impacto de desempenho estimado.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Nunca pesquisar dependências.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Sempre pesquisar dependências.",
			"typescript.preferences.jsxAttributeCompletionStyle": "Estilo preferido para conclusões de atributos JSX.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Insira `={}` ou `=\"\"` após os nomes dos atributos com base no tipo de prop. Consulte `typescript.preferences.quoteStyle` para controlar o tipo de aspas usado para atributos de cadeia de caracteres.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Insira `= {} `após os nomes dos atributos.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Insira apenas nomes de atributos.",
			"typescript.preferences.quoteStyle": "Estilo de aspas preferenciais a ser usado para correções rápidas.",
			"typescript.preferences.quoteStyle.auto": "Inferir o tipo de cotação do código existente",
			"typescript.preferences.quoteStyle.double": "Sempre usar aspas duplas: `\"`",
			"typescript.preferences.quoteStyle.single": "Sempre usar aspas simples: `'`",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'",
			"typescript.preferences.useAliasesForRenames": "Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.",
			"typescript.problemMatchers.tsc.label": "Problemas do TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problemas do TypeScript (modo de inspeção)",
			"typescript.referencesCodeLens.enabled": "Habilitar/desabilitar CodeLens de referências em arquivos TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos TypeScript.",
			"typescript.reportStyleChecksAsWarnings": "Relatar verificações de estilo como avisos.",
			"typescript.restartTsServer": "Reiniciar TS Server",
			"typescript.selectTypeScriptVersion.title": "Selecionar a Versão do TypeScript...",
			"typescript.suggest.enabled": "Habilitar/desabilitar sugestões de preenchimento automático.",
			"typescript.suggestionActions.enabled": "Habilitar/desabilitar diagnóstico de sugestão para arquivos TypeScript no editor.",
			"typescript.tsc.autoDetect": "Controla a detecção automática de tarefas tsc.",
			"typescript.tsc.autoDetect.build": "Criar apenas tarefas de compilação de execução única.",
			"typescript.tsc.autoDetect.off": "Desabilitar este recurso.",
			"typescript.tsc.autoDetect.on": "Criar tarefas de build e de inspeção.",
			"typescript.tsc.autoDetect.watch": "Criar apenas tarefas de compilação e inspeção.",
			"typescript.tsdk.desc": "Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\r\n\r\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\r\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\r\n\r\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
			"typescript.tsserver.enableTracing": "Habilita o rastreamento do desempenho do servidor TS em um diretório. Esses arquivos de rastreamento podem ser usados para diagnosticar problemas de desempenho do Servidor TS. O log pode conter caminhos de arquivo, código-fonte e outras informações possivelmente confidenciais do projeto.",
			"typescript.tsserver.log": "Habilita o registro em log do TS Server em um arquivo. Esse log pode ser usado para diagnosticar problemas do TS Server. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.tsserver.pluginPaths": "Caminhos adicionais para descobrir os plugins do Serviço de Linguagem TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Um caminho absoluto ou relativo. O caminho relativo será resolvido nas pastas do workspace.",
			"typescript.tsserver.trace": "Habilita o rastreamento de mensagens enviadas para o TS Server. Esse rastreamento pode ser usado para diagnosticar problemas do TS Server. O rastreamento pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.updateImportsOnFileMove.enabled": "Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Sempre atualizar caminhos automaticamente.",
			"typescript.updateImportsOnFileMove.enabled.never": "Nunca renomear caminhos e não avisar.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Avisar em cada renomeação.",
			"typescript.validate.enable": "Habilitar/desabilitar a validação do TypeScript.",
			"typescript.workspaceSymbols.scope": "Controls which files are searched by [go to symbol in workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Pesquisar todos os projetos abertos do JavaScript ou TypeScript para símbolos. Exige o uso do TypeScript 3.9 ou mais recente no workspace.",
			"typescript.workspaceSymbols.scope.currentProject": "Somente pesquisar símbolos no projeto JavaScript ou TypeScript atual.",
			"virtualWorkspaces": "Em espaços de trabalho virtuais, a resolução e localização de referências entre arquivos não é suportada.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Depure e execute seu código JavaScript no Node.js com o Visual Studio Code.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "Depois de instalar o Node.js, você pode executar programas JavaScript em um terminal digitando ``node your-file-name.js``\r\nOutra maneira fácil de executar programas Node.js é usar o depurador do VS Code, que permite execute seu código, pause em diferentes pontos e ajude você a entender o que está acontecendo passo a passo.\r\n[Iniciar Depuração](command:javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "Execute e depure seu JavaScript",
			"walkthroughs.nodejsWelcome.description": "Aproveite ao máximo a experiência JavaScript de primeira classe do Visual Studio Code.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Node.js é uma maneira fácil de executar código JavaScript. Você pode usá-lo para criar rapidamente aplicativos e servidores de linha de comando. Ele também vem com npm, um gerenciador de pacotes que facilita a reutilização e o compartilhamento de código JavaScript.\r\n[Install Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Instalar SDK do Node.js",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Node.js é uma maneira fácil de executar código JavaScript. Você pode usá-lo para criar rapidamente aplicativos e servidores de linha de comando. Ele também vem com npm, um gerenciador de pacotes que facilita a reutilização e o compartilhamento de código JavaScript.\r\n[Instalar Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Instalar SDK do Node.js",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Saiba mais sobre JavaScript e Node.js no Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Quer ficar mais confortável com JavaScript, Node.js e VS Code? Não deixe de conferir nossos documentos!\r\nTemos muitos recursos para aprender [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) e [Node.js](https://code.visualstudio. com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Saber mais](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Explorar Mais",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Vamos escrever nosso primeiro arquivo JavaScript. Teremos que criar um novo arquivo e salvá-lo com a extensão ``.js`` no final do nome do arquivo.\r\n[Criar um arquivo JavaScript](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "Criar um arquivo JavaScript",
			"walkthroughs.nodejsWelcome.title": "Introdução ao JavaScript e Node.js",
			"workspaceTrust": "A extensão requer confiança na área de trabalho quando a versão da área de trabalho é usada porque executa o código especificado pela área de trabalho."
		}
	}
}