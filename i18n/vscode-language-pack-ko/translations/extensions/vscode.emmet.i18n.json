{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"bundle": {
			"Enter Abbreviation": "Enter Abbreviation"
		},
		"package": {
			"command.balanceIn": "Balance (inward)",
			"command.balanceOut": "Balance (outward)",
			"command.decrementNumberByOne": "Decrement by 1",
			"command.decrementNumberByOneTenth": "Decrement by 0.1",
			"command.decrementNumberByTen": "Decrement by 10",
			"command.evaluateMathExpression": "Evaluate Math Expression",
			"command.incrementNumberByOne": "Increment by 1",
			"command.incrementNumberByOneTenth": "Increment by 0.1",
			"command.incrementNumberByTen": "Increment by 10",
			"command.matchTag": "Go to Matching Pair",
			"command.mergeLines": "Merge Lines",
			"command.nextEditPoint": "Go to Next Edit Point",
			"command.prevEditPoint": "Go to Previous Edit Point",
			"command.reflectCSSValue": "Reflect CSS Value",
			"command.removeTag": "Remove Tag",
			"command.selectNextItem": "Select Next Item",
			"command.selectPrevItem": "Select Previous Item",
			"command.showEmmetCommands": "Show Emmet Commands",
			"command.splitJoinTag": "Split/Join Tag",
			"command.toggleComment": "Toggle Comment",
			"command.updateImageSize": "Update Image Size",
			"command.updateTag": "Update Tag",
			"command.wrapWithAbbreviation": "Wrap with Abbreviation",
			"description": "Emmet support for VS Code",
			"emmetExclude": "An array of languages where Emmet abbreviations should not be expanded.",
			"emmetExtensionsPath": "An array of paths, where each path can contain Emmet syntaxProfiles and/or snippet files.\r\nIn case of conflicts, the profiles/snippets of later paths will override those of earlier paths.\r\nSee https://code.visualstudio.com/docs/editor/emmet for more information and an example snippet file.",
			"emmetExtensionsPathItem": "A path containing Emmet syntaxProfiles and/or snippets.",
			"emmetIncludeLanguages": "Enable Emmet abbreviations in languages that are not supported by default. Add a mapping here between the language and Emmet supported language.\r\n For example: `{\"vue-html\": \"html\", \"javascript\": \"javascriptreact\"}`",
			"emmetOptimizeStylesheetParsing": "When set to `false`, the whole file is parsed to determine if current position is valid for expanding Emmet abbreviations. When set to `true`, only the content around the current position in CSS/SCSS/Less files is parsed.",
			"emmetPreferences": "Preferences used to modify behavior of some actions and resolvers of Emmet.",
			"emmetPreferencesAllowCompactBoolean": "If `true`, compact notation of boolean attributes are produced.",
			"emmetPreferencesBemElementSeparator": "Element separator used for classes when using the BEM filter.",
			"emmetPreferencesBemModifierSeparator": "Modifier separator used for classes when using the BEM filter.",
			"emmetPreferencesCssAfter": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations.",
			"emmetPreferencesCssBetween": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations.",
			"emmetPreferencesCssColorShort": "If `true`, color values like `#f` will be expanded to `#fff` instead of `#ffffff`.",
			"emmetPreferencesCssFuzzySearchMinScore": "The minimum score (from 0 to 1) that fuzzy-matched abbreviation should achieve. Lower values may produce many false-positive matches, higher values may reduce possible matches.",
			"emmetPreferencesCssMozProperties": "Comma separated CSS properties that get the 'moz' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'moz' prefix.",
			"emmetPreferencesCssMsProperties": "Comma separated CSS properties that get the 'ms' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'ms' prefix.",
			"emmetPreferencesCssOProperties": "Comma separated CSS properties that get the 'o' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'o' prefix.",
			"emmetPreferencesCssWebkitProperties": "Comma separated CSS properties that get the 'webkit' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'webkit' prefix.",
			"emmetPreferencesFilterCommentAfter": "A definition of comment that should be placed after matched element when comment filter is applied.",
			"emmetPreferencesFilterCommentBefore": "A definition of comment that should be placed before matched element when comment filter is applied.",
			"emmetPreferencesFilterCommentTrigger": "A comma-separated list of attribute names that should exist in the abbreviation for the comment filter to be applied.",
			"emmetPreferencesFloatUnit": "Default unit for float values.",
			"emmetPreferencesFormatForceIndentTags": "An array of tag names that should always get inner indentation.",
			"emmetPreferencesFormatNoIndentTags": "An array of tag names that should never get inner indentation.",
			"emmetPreferencesIntUnit": "Default unit for integer values.",
			"emmetPreferencesOutputInlineBreak": "The number of sibling inline elements needed for line breaks to be placed between those elements. If `0`, inline elements are always expanded onto a single line.",
			"emmetPreferencesOutputReverseAttributes": "If `true`, reverses attribute merging directions when resolving snippets.",
			"emmetPreferencesOutputSelfClosingStyle": "Style of self-closing tags: html (`<br>`), xml (`<br/>`) or xhtml (`<br />`).",
			"emmetPreferencesSassAfter": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Sass files.",
			"emmetPreferencesSassBetween": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Sass files.",
			"emmetPreferencesStylusAfter": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Stylus files.",
			"emmetPreferencesStylusBetween": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Stylus files.",
			"emmetShowAbbreviationSuggestions": "Shows possible Emmet abbreviations as suggestions. Not applicable in stylesheets or when emmet.showExpandedAbbreviation is set to `\"never\"`.",
			"emmetShowExpandedAbbreviation": "Shows expanded Emmet abbreviations as suggestions.\r\nThe option `\"inMarkupAndStylesheetFilesOnly\"` applies to html, haml, jade, slim, xml, xsl, css, scss, sass, less and stylus.\r\nThe option `\"always\"` applies to all parts of the file regardless of markup/css.",
			"emmetShowSuggestionsAsSnippets": "If `true`, then Emmet suggestions will show up as snippets allowing you to order them as per `#editor.snippetSuggestions#` setting.",
			"emmetSyntaxProfiles": "Define profile for specified syntax or use your own profile with specific rules.",
			"emmetTriggerExpansionOnTab": "When enabled, Emmet abbreviations are expanded when pressing TAB, even when completions do not show up. When disabled, completions that show up can still be accepted by pressing TAB.",
			"emmetUseInlineCompletions": "If `true`, Emmet will use inline completions to suggest expansions. To prevent the non-inline completion item provider from showing up as often while this setting is `true`, turn `#editor.quickSuggestions#` to `inline` or `off` for the `other` item.",
			"emmetVariables": "Variables to be used in Emmet snippets."
		}
	}
}