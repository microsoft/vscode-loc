{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/node/extension/autoAttach": {
			"process.with.pid.label": "자동 연결됨 ({0})"
		},
		"dist/node/extension/cluster": {
			"child.process.with.pid.label": "자식 프로세스 {0}"
		},
		"dist/node/extension/configurationProvider": {
			"NVM_DIR.not.found.message": "'runtimeVersion' 특성에는 Node.js 버전 관리자 'nvm' 또는 'nvs'.가 필요합니다.",
			"NVM_HOME.not.found.message": "'runtimeVersion' 특성에는 Node.js 버전 관리자 'nvm-windows' 또는 'nvs'가 필요합니다.",
			"NVS_HOME.not.found.message": "'runtimeVersion' 특성에는 Node.js 버전 관리자 'nvs'가 필요합니다.",
			"mern.starter.explanation": "'{0}' 프로젝트에 대한 구성 시작이 생성되었습니다.",
			"node.launch.config.name": "프로그램 시작",
			"outFiles.explanation": "생성된 JavaScript 를 포함하도록 'outFiles' 특성의 GLOB 패턴을 조정합니다.",
			"program.guessed.from.package.json.explanation": "'package.json'을 기반으로 구성 시작이 생성되었습니다.",
			"program.not.found.message": "디버그할 프로그램을 찾을 수 없습니다.",
			"runtime.version.not.found.message": "Node.js 버전 '{0}'이 (가) '{1}'에 대해 설치되어 있지 않습니다.",
			"useWslDeprecationWarning.doNotShowAgain": "다시 표시 안 함",
			"useWslDeprecationWarning.title": "'useWSL' 특성은 더 이상 사용되지 않습니다. 대신 '원격 WSL' 확장을 사용하세요. 자세한 내용을 보려면 [여기]({0}) 를 클릭하세요."
		},
		"dist/node/extension/processPicker": {
			"cannot.enable.debug.mode.error": "프로세스에 연결: 프로세스 '{0}'({1}) 에 대해 디버그 모드를 사용하도록 설정할 수 없습니다.",
			"pickNodeProcess": "연결할 Node.js 프로세스 선택",
			"pid.error": "프로세스에 연결: 디버그 모드에서 프로세스 '{0}'을 넣을 수 없습니다.",
			"process.id.error": "프로세스에 연결: '{0}'은 (는) 프로세스 ID 가 아닌 것 같습니다.",
			"process.id.port": "프로세스 ID: {0}, 디버그 포트: {1}",
			"process.id.port.legacy": "프로세스 ID: {0}, 디버그 포트: {1}(레거시 프로토콜)",
			"process.id.port.signal": "프로세스 ID: {0}, 디버그 포트: {1}({2})",
			"process.id.signal": "프로세스 ID: {0}({1})",
			"process.picker.error": "프로세스 선택기 실패 ({0})"
		},
		"dist/node/extension/protocolDetection": {
			"protocol.switch.legacy.detected": "레거시 프로토콜이 검색되었기 때문에 레거시 프로토콜로 디버그합니다.",
			"protocol.switch.legacy.version": "노드 {0}이 (가) 감지되었으므로 레거시 프로토콜로 디버그합니다.",
			"protocol.switch.unknown.error": "Node.js 버전을 확인할 수 없으므로 검사기 프로토콜로 디버그합니다 ({0})."
		},
		"dist/node/nodeDebug": {
			"VSND2001": "PATH 에서 '{0}' 런타임을 찾을 수 없습니다. '{0}'이 (가) 설치되어 있는지 확인하세요.",
			"VSND2002": "'{0}' 프로그램을 시작할 수 없습니다. 소스 맵을 구성하면 도움이 될 수 있습니다.",
			"VSND2003": "'{0}' 프로그램을 시작할 수 없습니다. '{1}' 특성을 설정하면 도움이 될 수 있습니다.",
			"VSND2009": "해당 JavaScript 를 찾을 수 없으므로 '{0}' 프로그램을 시작할 수 없습니다.",
			"VSND2010": "런타임 프로세스에 연결할 수 없습니다 (이유: {0}).",
			"VSND2011": "터미널 ({0}) 에서 디버그 대상을 시작할 수 없습니다.",
			"VSND2015": "Node.js 가 응답하지 않아 '{_request}' 요청이 취소되었습니다.",
			"VSND2016": "Node.js 가 적절한 시간 내에 '{_request}' 요청에 응답하지 않았습니다.",
			"VSND2017": "디버그 대상 ({0}) 을 시작할 수 없습니다.",
			"VSND2018": "사용할 수 있는 호출 스택이 없습니다 ({_command}: {_error}).",
			"VSND2019": "내부 모듈 {0}을 (를) 찾을 수 없습니다.",
			"VSND2022": "프로그램이 JavaScript 밖에서 일시 중지되었기 때문에 호출 스택이 없습니다.",
			"VSND2023": "호출 스택을 사용할 수 없습니다.",
			"VSND2028": "알 수 없는 콘솔 유형 '{0}'입니다.",
			"VSND2029": "파일 ({0}) 에서 환경 변수를 로드할 수 없습니다.",
			"VSND2033": "런타임에 연결할 수 없습니다. 런타임이 '레거시' 디버그 모드에 있는지 확인합니다.",
			"VSND2034": "'legacy' 프로토콜을 통해 런타임에 연결할 수 없으므로 'inspector' 프로토콜을 사용해 보세요.",
			"anonymous.function": "(익명 함수)",
			"attribute.path.not.absolute": "'{0}' 특성이 절대 ('{1}') 가 아닙니다. 절대로 설정하려면 접두사로 '{2}'을 (를) 추가하는 것이 좋습니다.",
			"attribute.path.not.exist": "'{0}' 특성이 없습니다 ('{1}').",
			"attribute.wls.not.exist": "Windows Subsystem Linux 설치를 찾을 수 없음",
			"eval.invalid.expression": "잘못된 식: {0}",
			"eval.not.available": "사용할 수 없음",
			"exception.paused.promise.rejection": "약속 거부에서 일시 중지됨",
			"exception.promise.rejection": "약속 거부",
			"exception.promise.rejection.text": "약속 거부 ({0})",
			"exceptions.all": "모든 예외",
			"exceptions.rejects": "약속 거부",
			"exceptions.uncaught": "확인할 수 없는 예외",
			"file.on.disk.changed": "디스크의 파일이 변경되었기 때문에 확인되지 않았습니다. 디버그 세션을 다시 시작하세요.",
			"more.information": "추가 정보",
			"node.console.title": "노드 디버그 콘솔",
			"origin.core.module": "읽기 전용 코어 모듈",
			"origin.from.node": "Node.js 의 읽기 전용 콘텐츠",
			"origin.from.remote.node": "원격 Node.js 의 읽기 전용 콘텐츠",
			"origin.inlined.source.map": "소스 맵의 읽기 전용 인라인 콘텐츠",
			"program.path.case.mismatch.warning": "프로그램 경로에 디스크의 파일과 다른 대/소문자가 사용됩니다. 이로 인해 중단점이 적중되지 않을 수 있습니다.",
			"reason.description.breakpoint": "중단점에서 일시 중지됨",
			"reason.description.debugger_statement": "디버거 문에서 일시 중지됨",
			"reason.description.entry": "항목에서 일시 중지됨",
			"reason.description.exception": "예외에서 일시 중지됨",
			"reason.description.restart": "프레임 입력에서 일시 중지됨",
			"reason.description.step": "단계에서 일시 중지됨",
			"reason.description.user_request": "사용자 요청에서 일시 중지됨",
			"scope.block": "차단",
			"scope.catch": "Catch",
			"scope.closure": "닫기",
			"scope.exception": "예외",
			"scope.global": "GLOBAL",
			"scope.local": "LOCAL",
			"scope.local.with.count": "로컬 ({0}/{1})",
			"scope.script": "스크립트",
			"scope.unknown": "알 수 없는 범위 유형: {0}",
			"scope.with": "함께",
			"setVariable.error": "설정 값이 지원되지 않습니다.",
			"source.not.found": "콘텐츠를 검색할 수 없습니다.",
			"source.skipFiles": "'skipFiles'로 인해 건너뜀",
			"source.smartstep": "'smartStep'으로 인해 건너뜀",
			"sourcemapping.fail.message": "생성된 코드를 찾을 수 없어 중단점이 무시되었습니다 (소스 맵 문제?)."
		},
		"dist/node/nodeV8Protocol": {
			"not.connected": "런타임에 연결되지 않음",
			"runtime.timeout": "{0}ms 후에 제한 시간 초과",
			"runtime.unresponsive": "Node.js 가 응답하지 않아 취소됨"
		},
		"package": {
			"attach.node.process": "Node 프로세스에 연결 (레거시)",
			"debug.node.showUseWslIsDeprecatedWarning.description": "'useWSL' 특성을 사용할 때 경고를 표시할지 여부를 제어합니다.",
			"extension.description": "Node.js 디버깅 지원 (버전 8.0 미만)",
			"launch.args.description": "프로그램에 전달된 명령줄 인수입니다.",
			"node.address.description": "디버그할 프로세스의 TCP/IP 주소입니다 (Node.js >= 5.0 인 경우에만). 기본값은 'localhost'입니다.",
			"node.attach.config.name": "연결",
			"node.attach.processId.description": "연결할 프로세스의 ID 입니다.",
			"node.disableOptimisticBPs.description": "해당 파일에 대한 sourcemap 이 로드될 때까지 파일에서 중단점을 설정하지 마세요.",
			"node.label": "Node.js(레거시)",
			"node.launch.autoAttachChildProcesses.description": "디버거를 새로 생성된 자식 프로세스에 자동으로 연결합니다.",
			"node.launch.config.name": "시작",
			"node.launch.console.description": "디버그 대상을 시작할 위치입니다.",
			"node.launch.console.externalTerminal.description": "사용자 설정을 통해 구성 가능한 외부 터미널",
			"node.launch.console.integratedTerminal.description": "VS Code 의 통합 터미널",
			"node.launch.console.internalConsole.description": "VS Code 디버그 콘솔 (프로그램에서 입력 읽기를 지원하지 않음)",
			"node.launch.cwd.description": "디버그 중인 프로그램 작업 디렉터리의 절대 경로입니다.",
			"node.launch.env.description": "프로그램에 전달된 환경 변수입니다. 'null' 값은 환경에서 변수를 제거합니다.",
			"node.launch.envFile.description": "환경 변수 정의를 포함하는 파일의 절대 경로입니다.",
			"node.launch.externalConsole.deprecationMessage": "'externalConsole' 특성은 사용되지 않으므로 대신 'console'을 사용하세요.",
			"node.launch.outputCapture.description": "출력 메시지를 캡처할 위치에서: 디버그 API 또는 stdout/stderr 이 스트림됩니다.",
			"node.launch.program.description": "프로그램의 절대 경로입니다. 생성된 값은 package.json 및 열린 파일을 보고 추측한 것입니다. 이 특성을 편집하세요.",
			"node.launch.runtimeArgs.description": "런타임 실행 파일에 전달되는 선택적 인수입니다.",
			"node.launch.runtimeExecutable.description": "사용할 런타임입니다. PATH 에서 사용할 수 있는 런타임의 이름 또는 절대 경로입니다. 생략하면 `node`로 간주합니다.",
			"node.launch.runtimeVersion.description": "사용할 `node` 런타임의 버전입니다. `nvm`이 필요합니다.",
			"node.launch.useWSL.deprecation": "'useWSL'은 사용되지 않으며 지원이 중단됩니다. 대신 '원격 - WSL' 확장을 사용하세요.",
			"node.launch.useWSL.description": "Linux 용 Windows 하위 시스템을 사용합니다.",
			"node.localRoot.description": "프로그램이 포함된 로컬 디렉터리의 경로입니다.",
			"node.port.description": "연결할 디버그 포트입니다. 기본값은 5858 입니다.",
			"node.processattach.config.name": "프로세스에 연결",
			"node.protocol.auto.description": "Node 8.0 이상 버전을 실행할 때 '검사기'를 선택하여, 가장 적합한 프로토콜을 자동으로 검색합니다.",
			"node.protocol.description": "사용할 Node.js 디버그 프로토콜입니다.",
			"node.protocol.inspector.description": "Node.js 버전 6.3 이상에서 지원되는 새 프로토콜",
			"node.protocol.legacy.description": "Node.js 버전 8.0 미만에서 지원되는 이전 프로토콜",
			"node.remoteRoot.description": "프로그램이 포함된 원격 디렉터리의 절대 경로입니다.",
			"node.restart.description": "Node.js 가 종료된 후 세션을 다시 시작합니다.",
			"node.showAsyncStacks.description": "현재 호출 스택을 발생시킨 비동기 호출을 표시합니다. 'inspector' 프로토콜에만 해당됩니다.",
			"node.snippet.attach.description": "실행 중인 노드 프로그램에 연결",
			"node.snippet.attach.label": "Node.js: 연결",
			"node.snippet.attachProcess.description": "프로세스 선택기를 열어 연결할 Node 프로세스 선택",
			"node.snippet.attachProcess.label": "Node.js: 프로세스에 연결",
			"node.snippet.electron.description": "Electron 주 프로세스 디버그",
			"node.snippet.electron.label": "Node.js: Electron 주",
			"node.snippet.gulp.description": "Gulp 작업 디버그 (프로젝트에 로컬 Gulp 가 설치되어 있는지 확인하세요.)",
			"node.snippet.gulp.label": "Node.js: Gulp 작업",
			"node.snippet.launch.description": "디버그 모드에서 노드 프로그램 시작",
			"node.snippet.launch.label": "Node.js: 프로그램 실행",
			"node.snippet.mocha.description": "Mocha 테스트 디버그",
			"node.snippet.mocha.label": "Node.js: Mocha 테스트",
			"node.snippet.nodemon.description": "nodemon 을 사용하여 소스 변경 내용에 대한 디버그 세션 다시 시작",
			"node.snippet.nodemon.label": "Node.js: Nodemon 설정",
			"node.snippet.npm.description": "npm 'debug' 스크립트를 통해 노드 프로그램 시작",
			"node.snippet.npm.label": "Node.js: NPM 을 통해 시작",
			"node.snippet.remoteattach.description": "원격 노드 프로그램의 디버그 포트에 연결합니다.",
			"node.snippet.remoteattach.label": "Node.js: 원격 프로그램에 연결",
			"node.snippet.yo.description": "yeoman 생성기 디버그 (프로젝트 폴더에서 `npm link`를 실행하여 설치)",
			"node.snippet.yo.label": "Node.js: Yeoman 생성기",
			"node.sourceMapPathOverrides.description": "소스맵의 정보로부터 디스크의 위치로 소스 파일 위치를 다시 쓰기 위한 매핑 집합입니다.",
			"node.sourceMaps.description": "JavaScript 소스 맵을 사용합니다 (있는 경우).",
			"node.stopOnEntry.description": "시작된 후 프로그램을 자동으로 중지합니다.",
			"node.timeout.description": "Node.js 연결을 다시 시도하는 시간 (밀리초) 입니다. 기본값은 10,000ms 입니다.",
			"open.loaded.script": "로드된 스크립트 열기",
			"outDir.deprecationMessage": "'outDir' 특성은 사용되지 않습니다. 'outFiles'를 대신 사용하세요.",
			"outFiles.description": "소스 맵을 사용하도록 설정한 경우 이러한 GLOB 패턴은 생성된 JavaScript 파일을 지정합니다. 패턴이 '!'로 시작하면 파일이 제외됩니다. 파일을 지정하지 않으면 생성된 코드가 소스와 동일한 디렉터리에 필요합니다. 예: `[\"${workspaceFolder}/out/**/*.js\"]`",
			"skipFiles.description": "디버그할 때 건너뛰는 파일의 GLOB 패턴 배열입니다. `<node_internals>/**` 패턴은 모든 내부 Node.js 모듈과 일치합니다.",
			"smartStep.description": "다시 원래 소스에 매핑할 수 없는 생성된 코드를 자동으로 단계별로 실행합니다.",
			"start.with.stop.on.entry": "디버깅 시작 및 항목에서 중지 (레거시)",
			"toggle.skipping.this.file": "이 파일 건너뛰기 토글",
			"trace.description": "진단 출력을 생성합니다. true 로 설정하는 대신 하나 이상의 선택기를 쉼표로 구분하여 나열할 수 있습니다. '자세한 정보 표시' 선택기를 통해 아주 자세한 출력을 사용할 수 있습니다."
		}
	}
}