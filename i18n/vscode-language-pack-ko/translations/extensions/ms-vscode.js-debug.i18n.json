{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"/src/adapter/breakpoints/userDefinedBreakpoint": {
			"breakpoint.provisionalBreakpoint": "바인딩되지 않은 중단점"
		},
		"/src/adapter/console/queryObjectsMessage": {
			"queryObject.couldNotQuery": "제공된 개체를 쿼리할 수 없습니다.",
			"queryObject.errorPreview": "미리 보기를 생성할 수 있습니다. {0}",
			"queryObject.invalidObject": "개체만 쿼리할 수 있습니다."
		},
		"/src/adapter/console/textualMessage": {
			"console.assert": "어설션 실패"
		},
		"/src/adapter/customBreakpoints": {
			"breakpoint.animationFrameFired": "애니메이션 프레임 발생",
			"breakpoint.cancelAnimationFrame": "애니메이션 프레임 취소",
			"breakpoint.closeAudioContext": "AudioContext 닫기",
			"breakpoint.createAudioContext": "AudioContext 만들기",
			"breakpoint.createCanvasContext": "캔버스 컨텍스트 만들기",
			"breakpoint.cspViolation": "콘텐츠 보안 정책으로 차단된 스크립트",
			"breakpoint.cspViolationNamed": "CSP 위반 \"{0}\"",
			"breakpoint.cspViolationNamedDetails": "콘텐츠 보안 정책 위반 계측 중단점에서 일시 중지됨, 지시문 \"{0}\"",
			"breakpoint.eventListenerNamed": "이벤트 수신기 중단점 \"{0}\"에서 일시 중지됨, \"{1}\"에서 트리거됨",
			"breakpoint.instrumentationNamed": "계측 중단점 \"{0}\"에서 일시 중지됨",
			"breakpoint.requestAnimationFrame": "애니메이션 프레임 요청",
			"breakpoint.resumeAudioContext": "AudioContext 다시 시작",
			"breakpoint.scriptFirstStatement": "스크립트 첫 번째 문",
			"breakpoint.setInnerHtml": "innerHTML 설정",
			"breakpoint.setIntervalFired": "setInterval 발생",
			"breakpoint.setTimeoutFired": "setTimeout 발생",
			"breakpoint.suspendAudioContext": "AudioContext 일시 중단",
			"breakpoint.webglErrorFired": "WebGL 오류 발생",
			"breakpoint.webglErrorNamed": "WebGL 오류 \"{0}\"",
			"breakpoint.webglErrorNamedDetails": "WebGL 오류 계측 중단점에서 일시 중지됨, 오류 \"{0}\"",
			"breakpoint.webglWarningFired": "WebGL 경고 발생"
		},
		"/src/adapter/debugAdapter": {
			"breakpoint.caughtExceptions": "catch된 예외",
			"breakpoint.caughtExceptions.description": "나중에 catch되는 경우에도 모든 throw 오류 발생 시 중단됩니다.",
			"breakpoint.uncaughtExceptions": "catch되지 않은 예외",
			"error.cannotPrettyPrint": "자동 서식을 지정할 수 없음",
			"error.sourceContentDidFail": "소스 콘텐츠를 검색할 수 없음",
			"error.sourceNotFound": "소스를 찾을 수 없음",
			"error.variableNotFound": "변수를 찾을 수 없음"
		},
		"/src/adapter/profiling/basicCpuProfiler": {
			"profile.cpu.description": "Chrome devtools에서 열 수 있는 .cpuprofile 파일을 생성합니다.",
			"profile.cpu.label": "CPU 프로필"
		},
		"/src/adapter/profiling/heapDumpProfiler": {
			"profile.heap.description": "Chrome 개발자 도구에서 열 수 있는 .heapsnapshot 파일을 생성합니다",
			"profile.heap.label": "힙 스냅샷"
		},
		"/src/adapter/sources": {
			"source.skipFiles": "skipFiles에서 건너뜀"
		},
		"/src/adapter/stackTrace": {
			"scope.block": "블록",
			"scope.catch": "Catch 블록",
			"scope.closure": "닫기",
			"scope.closureNamed": "닫기({0})",
			"scope.eval": "Eval",
			"scope.global": "전역",
			"scope.local": "로컬",
			"scope.module": "모듈",
			"scope.returnValue": "반환 값",
			"scope.script": "스크립트",
			"scope.with": "With 블록",
			"smartStepSkipLabel": "smartStep에서 건너뜀",
			"source.skipFiles": "skipFiles에서 건너뜀"
		},
		"/src/adapter/threads": {
			"error.evaluateDidFail": "평가할 수 없음",
			"error.evaluateOnAsyncStackFrame": "비동기 스택 프레임에서 평가할 수 없음",
			"error.pauseDidFail": "일시 중지할 수 없음",
			"error.restartFrameAsync": "비동기 프레임을 다시 시작할 수 없음",
			"error.resumeDidFail": "다시 시작할 수 없음",
			"error.stackFrameNotFound": "스택 프레임을 찾을 수 없음",
			"error.stepInDidFail": "한 단계씩 코드를 실행할 수 없음",
			"error.stepOutDidFail": "프로시저에서 나갈 수 없음",
			"error.stepOverDidFail": "다음 프로시저로 이동할 수 없음",
			"error.threadNotPaused": "스레드가 일시 중지되지 않음",
			"error.threadNotPausedOnException": "예외에서 스레드가 일시 중지되지 않음",
			"pause.DomBreakpoint": "DOM 중단점에서 일시 중지됨",
			"pause.assert": "어설션에서 일시 중지됨",
			"pause.breakpoint": "중단점에서 일시 중지됨",
			"pause.debugCommand": "debug() 호출에서 일시 중지됨",
			"pause.default": "일시 중지됨",
			"pause.eventListener": "이벤트 수신기에서 일시 중지됨",
			"pause.exception": "예외에서 일시 중지됨",
			"pause.instrumentation": "계측 중단점에서 일시 중지됨",
			"pause.oom": "메모리 부족 예외 전에 일시 중지됨",
			"pause.promiseRejection": "프라미스 거부에서 일시 중지됨",
			"pause.xhr": "XMLHttpRequest 또는 페치에서 일시 중지됨",
			"reason.description.restart": "프레임 입력에서 일시 중지됨",
			"warnings.handleSourceMapPause.didNotWait": "경고: {0}의 소스 맵을 처리하는 데 {1}밀리초보다 긴 시간이 걸려 스크립트에 대한 모든 중단점을 설정할 때까지 기다리지 않고 실행을 계속했습니다."
		},
		"/src/adapter/variables": {
			"error.customValueDescriptionGeneratorFailed": "{0}(설명할 수 없음: {1})",
			"error.emptyExpression": "빈 값을 설정할 수 없음",
			"error.failedToCustomizeObjectProperties": "실패한 속성 사용자 지정",
			"error.invalidExpression": "잘못된 식",
			"error.setVariableDidFail": "변수 값을 설정할 수 없음",
			"error.unknown": "알 수 없는 오류",
			"error.variableNotFound": "변수를 찾을 수 없음"
		},
		"/src/binder": {
			"breakpoint.provisionalBreakpoint": "바인딩되지 않은 중단점"
		},
		"/src/dap/errors": {
			"NVM_HOME.not.found.message": "'runtimeVersion' 특성에는 Node.js 버전 관리자 'nvm-windows' 또는 'nvs'가 필요합니다.",
			"NVS_HOME.not.found.message": "'runtimeVersion' 특성을 사용하려면 Node.js 버전 관리자 'nvs' 또는 'nvm'을 설치해야 합니다.",
			"VSND2011": "터미널({0})에서 디버그 대상을 시작할 수 없습니다.",
			"VSND2029": "파일({0})에서 환경 변수를 로드할 수 없습니다.",
			"asyncScopesNotAvailable": "비동기 스택에서 변수를 사용할 수 없음",
			"breakpointSyntaxError": "줄 {1}의 조건 {0}을(를) 사용하여 중단점을 설정하는 동안 구문 오류가 발생함: {2}",
			"browserVersionNotFound": "{0} 버전 {1}을(를) 찾을 수 없습니다. 사용 가능한 자동 검색 버전은 {2}입니다. launch.json의 \"runtimeExecutable\"을 해당 항목 중 하나로 설정하거나 브라우저 실행 파일의 절대 경로를 제공할 수 있습니다.",
			"error.browserAttachError": "브라우저에 연결할 수 없음",
			"error.browserLaunchError": "\"{0}\" 브라우저를 시작할 수 없음",
			"error.threadNotFound": "대상 페이지를 찾을 수 없습니다. 디버그하려는 페이지와 일치하도록 \"urlFilter\"를 업데이트해야 할 수 있습니다.",
			"invalidHitCondition": "적중 조건 \"{0}\"이(가) 잘못되었습니다. \"> 42\" 또는 \"== 2\" 같은 식이 필요합니다.",
			"noBrowserInstallFound": "시스템에서 브라우저 설치를 찾을 수 없습니다. 설치를 시도하거나 launch.json의 \"runtimeExecutable\"에서 브라우저에 대한 절대 경로를 제공하세요.",
			"profile.error.concurrent": "새 프로필을 시작하기 전에 실행 중인 프로필을 중지하세요.",
			"profile.error.generic": "대상에서 프로필을 가져오는 동안 오류가 발생했습니다.",
			"runtime.node.notfound": "Node.js 이진 \"{0}\"을(를) 찾을 수 없습니다. {1}. Node.js가 설치되어 있고 PATH에 있는지 확인하거나 launch.json에서 \"runtimeExecutable\"을 설정하세요.",
			"runtime.node.outdated": "\"{0}\"의 Node 버전이 오래되었습니다(버전 {1}). Node 8.x 이상이 필요합니다.",
			"runtime.version.not.found.message": "버전 관리자 {1}을(를) 사용하여 Node.js 버전 '{0}'이(가) 설치되지 않았습니다.",
			"sourcemapParseError": "{0}의 소스 맵을 읽을 수 없음: {1}"
		},
		"/src/debugServer": {
			"breakpoint.provisionalBreakpoint": "바인딩되지 않은 중단점"
		},
		"/src/targets/browser/browserAttacher": {
			"attach.cannotConnect": "{0}에서 대상에 연결할 수 없음: {1}",
			"chrome.targets.placeholder": "탭 선택"
		},
		"/src/targets/node/nodeAttacher": {
			"node.attach.restart.message": "디버기에 대한 연결이 끊김, {0}ms 후에 다시 연결함\r\n"
		},
		"/src/targets/node/nodeBinaryProvider": {
			"outOfDate": "{0} 디버깅을 계속하시겠습니까?",
			"runtime.node.notfound.enoent": "경로가 없음",
			"runtime.node.notfound.spawnErr": "버전을 가져오는 중 오류 발생: {0}",
			"warning.16bpIssue": "일부 중단점은 Node.js 버전에서 작동하지 않을 수 있습니다. 최신 버그, 성능 및 보안 픽스를 업그레이드하는 것이 좋습니다. 세부 정보: https://aka.ms/AAcsvqm",
			"warning.8outdated": "이전 버전의 Node.js를 실행하고 있습니다. 최신 버그, 성능 및 보안 픽스를 업그레이드하는 것이 좋습니다.",
			"yes": "예"
		},
		"/src/ui/autoAttach": {
			"details": "세부 정보"
		},
		"/src/ui/companionBrowserLaunch": {
			"cannotDebugInBrowser": "여기서는 디버그 모드에서 브라우저를 시작할 수 없습니다. 데스크톱의 VS Code에서 이 작업 영역을 열어 디버깅을 사용하도록 설정하세요."
		},
		"/src/ui/configuration/chromiumDebugConfigurationProvider": {
			"chrome.launch.name": "localhost에 대해 Chrome 시작",
			"existingBrowser.alert": "브라우저가 이미 {0}에서 실행되고 있는 것 같습니다. 디버깅을 시도하기 전에 먼저 브라우저를 닫으세요. 그러지 않으면 VS Code가 브라우저에 연결하지 못할 수 있습니다.",
			"existingBrowser.debugAnyway": "디버그",
			"existingBrowser.location.default": "이전 디버그 세션",
			"existingBrowser.location.userDataDir": "구성된 userDataDir"
		},
		"/src/ui/configuration/edgeDebugConfigurationProvider": {
			"chrome.launch.name": "localhost에 대해 Microsoft Edge 시작"
		},
		"/src/ui/configuration/nodeDebugConfigurationProvider": {
			"debug.terminal.label": "JavaScript 디버그 터미널",
			"node.launch.currentFile": "현재 파일 실행",
			"node.launch.script": "스크립트 실행: {0}"
		},
		"/src/ui/configuration/nodeDebugConfigurationResolver": {
			"mern.starter.explanation": "'{0}' 프로젝트에 대한 구성 시작이 생성되었습니다.",
			"node.launch.config.name": "프로그램 시작",
			"outFiles.explanation": "생성된 JavaScript를 포함하도록 'outFiles' 특성의 GLOB 패턴을 조정합니다.",
			"program.guessed.from.package.json.explanation": "'package.json'을 기반으로 구성 시작이 생성되었습니다.",
			"program.not.found.message": "디버그할 프로그램을 찾을 수 없습니다."
		},
		"/src/ui/debugLinkUI": {
			"debugLink.invalidUrl": "지정된 URL이 잘못되었습니다.",
			"debugLink.savePrompt": "나중에 쉽게 액세스할 수 있도록 launch.json에 구성을 저장하시겠습니까?",
			"never": "안 함",
			"no": "아니요",
			"yes": "예"
		},
		"/src/ui/debugNpmScript": {
			"debug.npm.noScripts": "package.json에서 npm 스크립트를 찾을 수 없습니다.",
			"debug.npm.noWorkspaceFolder": "npm 스크립트를 디버그하려면 작업 영역 폴더를 열어야 합니다.",
			"debug.npm.notFound.open": "package.json 편집",
			"debug.npm.parseError": "{0}을(를) 읽을 수 없습니다. {1}"
		},
		"/src/ui/debugTerminalUI": {
			"terminal.cwdpick": "새 터미널의 현재 작업 디렉토리를 선택합니다."
		},
		"/src/ui/diagnosticsUI": {
			"inspectSessionEnded": "디버그 세션이 이미 종료된 것 같습니다. 디버깅을 다시 시도한 후 \"디버그: 중단점 문제 진단\" 명령을 실행하세요.",
			"never": "안 함",
			"notNow": "나중에",
			"selectInspectSession": "검사할 세션 선택:",
			"yes": "예"
		},
		"/src/ui/disableSourceMapUI": {
			"always": "항상",
			"disableSourceMapUi.msg": "sourcemap에서 참조하는 누락된 파일 경로입니다. 대신 컴파일된 버전을 디버그하시겠습니까?",
			"no": "아니요",
			"yes": "예"
		},
		"/src/ui/edgeDevToolOpener": {
			"selectEdgeToolSession": "Devtools를 열 페이지를 선택합니다."
		},
		"/src/ui/linkedBreakpointLocationUI": {
			"ignore": "무시",
			"readMore": "자세한 정보"
		},
		"/src/ui/longPredictionUI": {
			"longPredictionWarning.disable": "다시 표시 안 함",
			"longPredictionWarning.message": "중단점을 구성하는 데 다소 시간이 소요됩니다. launch.json에서 'outFiles'를 업데이트하여 이 속도를 높일 수 있습니다.",
			"longPredictionWarning.noFolder": "열려 있는 작업 영역 폴더가 없습니다.",
			"longPredictionWarning.open": "launch.json 열기"
		},
		"/src/ui/prettyPrint": {
			"never": "안 함",
			"no": "아니요",
			"yes": "예"
		},
		"/src/ui/processPicker": {
			"cannot.enable.debug.mode.error": "프로세스에 연결: 프로세스 '{0}'({1})에 대해 디버그 모드를 사용하도록 설정할 수 없습니다.",
			"pickNodeProcess": "연결할 Node.js 프로세스 선택",
			"process.id.error": "프로세스에 연결: '{0}'은(는) 프로세스 ID가 아닌 것 같습니다.",
			"process.id.port.signal": "프로세스 ID: {0}, 디버그 포트: {1}({2})",
			"process.id.signal": "프로세스 ID: {0}({1})",
			"process.picker.error": "프로세스 선택기 실패({0})"
		},
		"/src/ui/profiling/breakpointTerminationCondition": {
			"breakpointTerminationWarnConfirm": "확인",
			"breakpointTerminationWarnSlow": "중단점을 사용하도록 설정된 프로파일링은 코드의 성능을 변경할 수 있습니다. \"기간\" 또는 \"수동\" 종료 조건으로 검색 결과의 유효성을 검사하는 데 유용할 수 있습니다.",
			"profile.termination.breakpoint.description": "특정 중단점이 적중될 때까지 실행",
			"profile.termination.breakpoint.label": "중단점 선택"
		},
		"/src/ui/profiling/durationTerminationCondition": {
			"profile.termination.duration.description": "특정 시간 동안 실행",
			"profile.termination.duration.inputTitle": "프로필 지속 기간",
			"profile.termination.duration.invalidFormat": "숫자를 입력하세요.",
			"profile.termination.duration.invalidLength": "1보다 큰 숫자를 입력하세요.",
			"profile.termination.duration.label": "기간",
			"profile.termination.duration.placeholder": "프로필 지속 기간(초)(예: \"5\")"
		},
		"/src/ui/profiling/manualTerminationCondition": {
			"profile.termination.duration.description": "수동으로 중지될 때까지 실행",
			"profile.termination.duration.label": "수동"
		},
		"/src/ui/profiling/uiProfileManager": {
			"no": "아니요",
			"profile.alreadyRunning": "프로파일링 세션이 이미 실행 중입니다. 해당 세션을 중지하고 새 세션을 시작하시겠습니까?",
			"profile.sessionState": "프로파일링",
			"profile.status.default": "$(loading) 프로파일링을 중지하려면 클릭",
			"profile.status.multiSession": "$(loading) 프로파일링을 중지하려면 클릭({0}개 세션)",
			"profile.status.single": "$(loading) 프로파일링을 중지하려면 클릭({0})",
			"profile.termination.title": "프로필 실행 시간:",
			"profile.type.title": "프로필 형식:",
			"yes": "예"
		},
		"/src/ui/profiling/uiProfileSession": {
			"profile.saving": "저장 중",
			"progress.profile.start": "프로필 시작 중...",
			"progress.profile.stop": "프로필 중지 중..."
		},
		"/src/ui/terminalLinkHandler": {
			"cantOpenChromeOnWeb": "여기서는 디버그 모드에서 브라우저를 시작할 수 없습니다. 이 웹 페이지를 디버그하려면 데스크톱의 VS Code에서 이 작업 영역을 여세요.",
			"terminalLinkHover.debug": "URL 디버그"
		},
		"/src/vsDebugServer": {
			"session.rootSessionName": "JavaScript 디버그 어댑터"
		},
		"package": {
			"add.browser.breakpoint": "브라우저 중단점 추가",
			"attach.node.process": "Node 프로세스에 연결",
			"base.cascadeTerminateToConfigurations.label": "이 디버그 세션이 종료되면 중지되는 디버그 세션 목록입니다.",
			"browser.address.description": "디버그된 브라우저에서 수신 대기 중인 IP 주소 또는 호스트 이름입니다.",
			"browser.attach.port.description": "원격에서 브라우저를 디버그하는 데 사용할 포트입니다. 브라우저를 시작할 때 `--remote-debugging-port`로 제공됩니다.",
			"browser.baseUrl.description": "경로 baseUrl을 확인할 기본 URL입니다. 디스크의 파일에 URL을 매핑할 때 baseURL이 잘립니다. 기본값은 시작 URL 도메인입니다.",
			"browser.browserAttachLocation.description": "브라우저가 한 위치에서 연결되도록 강제 적용합니다. 원격 작업 영역(예: ssh 또는 WSL 사용)에서 로컬이 아닌 원격 머신의 브라우저에 연결하는 데 사용할 수 있습니다.",
			"browser.browserLaunchLocation.description": "브라우저가 한 위치에서 시작되도록 강제 적용합니다. 원격 작업 영역(예: ssh 또는 WSL 사용)에서 로컬이 아닌 원격 머신의 브라우저를 여는 데 사용할 수 있습니다.",
			"browser.cleanUp.description": "디버깅 세션이 완료된 후 수행할 정리입니다. 디버그 중인 탭만 닫거나 전체 브라우저를 닫습니다.",
			"browser.cwd.description": "런타임 실행 파일의 선택적 작업 디렉터리입니다.",
			"browser.disableNetworkCache.description": "각 요청에 대한 네트워크 캐시를 건너뛸지 여부를 제어합니다.",
			"browser.env.description": "브라우저용 환경 키/값 쌍의 선택적 사전입니다.",
			"browser.file.description": "브라우저에서 열 로컬 html 파일",
			"browser.includeDefaultArgs.description": "(디버깅을 어렵게 만들 수 있는 기능을 사용하지 않도록 하기 위해) 기본 브라우저 시작 인수를 시작에 포함할지 여부.",
			"browser.inspectUri.description": "inspectUri를 재작성하는 데 사용할 형식: `{curlyBraces}`의 키를 보간하는 템플릿 문자열입니다. 사용 가능한 키는 다음과 같습니다. \r\n- `url.*`는 실행 중인 애플리케이션의 구문 분석된 주소입니다. 예: `{url.port}`, `{url.hostname}` - `port`는 Chrome에서 수신 대기하는 디버그 포트입니다. \r\n - `browserInspectUri`는 시작된 브라우저의 검사기 URI입니다. \r\n - `browserInspectUriPath`는 시작된 브라우저의 검사기 URI 경로 부분입니다(예: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\"). \r\n - `wsProtocol`은 힌트 WebSocket 프로토콜입니다.\r\n 원래 URL이 `https`인 경우 `wss`로 설정되고, 그렇지 않은 경우 `ws`로 설정됩니다\r\n.",
			"browser.launch.port.description": "브라우저에서 수신 대기할 포트입니다. 기본값은 \"0\"입니다. 기본값으로 설정하면 파이프를 통해 브라우저가 디버그됩니다. 이는 일반적으로 더 안전하며 다른 도구에서 브라우저에 연결해야 하는 경우가 아니면 선택해야 합니다.",
			"browser.pathMapping.description": "로컬 폴더의 URL/경로 매핑, 브라우저에서 스크립트를 디스크의 스크립트로 확인",
			"browser.perScriptSourcemaps.description": "스크립트가 소스 파일의 basename이 포함된 고유한 sourcemap을 사용하여 개별적으로 로드되는지 여부입니다. 많은 작은 스크립트를 처리할 때 이 옵션을 설정하여 sourcemap 처리를 최적화할 수 있습니다. \"자동\"으로 설정된 경우 알려진 사례가 검색됩니다(해당하는 경우).",
			"browser.profileStartup.description": "true인 경우 프로세스가 시작되면 프로파일링이 즉시 시작됩니다.",
			"browser.restart": "브라우저 연결이 종료된 경우 다시 연결할지 여부",
			"browser.revealPage": "포커스 탭",
			"browser.runtimeArgs.description": "런타임 실행 파일에 전달되는 선택적 인수입니다.",
			"browser.runtimeExecutable.description": "'canary', 'stable', 'custom', 브라우저 실행 파일의 경로 중 하나입니다. 사용자 지정은 사용자 지정 래퍼, 사용자 지정 빌드 또는 CHROME_PATH 환경 변수를 의미합니다.",
			"browser.runtimeExecutable.edge.description": "'canary', 'stable', 'dev', 'custom' 또는 브라우저 실행 파일의 경로입니다. custom은 사용자 지정 래퍼, 사용자 지정 빌드 또는 EDGE_PATH 환경 변수를 나타냅니다.",
			"browser.server.description": "시작할 웹 서버를 구성합니다. '노드' 시작 작업과 동일한 구성을 수행합니다.",
			"browser.skipFiles.description": "디버그할 때 건너뛸 파일 또는 폴더 이름이나 경로 GLOB의 배열입니다.",
			"browser.smartStep.description": "소스 매핑된 파일의 매핑되지 않은 줄을 자동으로 단계별로 실행합니다. 이러한 줄의 예로는 async/await 또는 기타 기능을 다운 컴파일하는 경우 TypeScript에서 자동으로 생성하는 코드가 있습니다.",
			"browser.sourceMapPathOverrides.description": "sourcemap의 위치에서 디스크의 위치로 소스 파일의 위치를 다시 작성하기 위한 매핑 세트입니다. 자세한 내용은 추가 정보를 참조하세요.",
			"browser.sourceMapRenames.description": "소스 맵에서 \"이름\" 매핑을 사용할지 여부입니다. 이를 위해서는 특정 디버거에서 느려질 수 있는 원본 콘텐츠를 요청해야 합니다.",
			"browser.sourceMaps.description": "JavaScript 소스 맵을 사용합니다(있는 경우).",
			"browser.targetSelection": "URL 필터와 일치하는 모든 대상에 연결할 것인지(\"자동\") 또는 하나를 선택하도록 물을 것인지(\"선택\")의 여부입니다.",
			"browser.timeout.description": "이 밀리초 동안 브라우저에 연결을 다시 시도합니다. 기본값은 10000ms입니다.",
			"browser.url.description": "이 정확한 URL이 있는 탭을 검색하고 탭을 찾으면 연결합니다.",
			"browser.urlFilter.description": "이 URL로 페이지를 검색하고 해당 페이지가 있는 경우 페이지에 연결합니다. * 와일드카드를 사용할 수 있습니다.",
			"browser.userDataDir.description": "기본적으로 브라우저는 임시 폴더에 별도의 사용자 프로필로 실행됩니다. 이 옵션을 사용하여 재정의합니다. 기본 사용자 프로필로 시작하려면 false로 설정합니다. 인스턴스가 이미 `userDataDir`에서 실행 중인 경우 새 브라우저를 시작할 수 없습니다.",
			"browser.vueComponentPaths": "`*.vue` 구성 요소를 찾을 파일 GLOB 패턴 목록입니다. 기본적으로 전체 작업 영역을 검색합니다. Vue의 sourcemap이 Vue CLI 4에서 필요로 하는 추가 조회 때문에 이를 지정해야 합니다. 빈 배열로 설정하여 이 특수 처리를 사용하지 않도록 설정할 수 있습니다.",
			"browser.webRoot.description": "웹 서버 루트의 작업 영역 절대 경로를 지정합니다. 디스크의 파일에 대한 '/app.js' 같은 경로를 확인하는 데 사용됩니다. \"/\"의 pathMapping에 대한 축약형입니다.",
			"chrome.attach.description": "이미 디버그 모드인 Chrome 인스턴스에 연결",
			"chrome.attach.label": "Chrome: 연결",
			"chrome.label": "크롬",
			"chrome.launch.description": "Chrome을 시작하여 URL 디버그",
			"chrome.launch.label": "Chrome: 시작",
			"configuration.autoAttachMode": "`#debug.node.autoAttach#`이 설정되어 있는 경우 자동으로 연결 및 디버그할 프로세스를 구성합니다. 이 설정과 관계없이 `--inspect` 플래그로 시작한 노드 프로세스가 항상 연결됩니다.",
			"configuration.autoAttachMode.always": "터미널에서 시작되는 모든 Node.js 프로세스에 자동으로 연결합니다.",
			"configuration.autoAttachMode.disabled": "자동 연결이 사용하지 않도록 설정되어 있고 상태 표시줄에 표시되지 않습니다.",
			"configuration.autoAttachMode.explicit": "'--inspect'가 지정된 경우에만 자동으로 연결합니다.",
			"configuration.autoAttachMode.smart": "node_modules 폴더에 있지 않은 스크립트를 실행할 때 자동으로 연결합니다.",
			"configuration.autoAttachSmartPatterns": "\"smart\" `#debug.javascript.autoAttachFilter#` 모드로 연결할 시간을 결정하는 GLOB 패턴을 구성합니다. `$KNOWN_TOOLS$`이(가) 공용 테스트 및 코드 실행기의 이름 목록으로 바뀝니다. [VS Code 문서에서 자세히 읽기](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
			"configuration.autoExpandGetters": "속성 getter가 자동으로 확장되는지 구성합니다. false인 경우 getter가 `get propertyName`으로 표시되고 클릭하는 경우에만 평가됩니다.",
			"configuration.automaticallyTunnelRemoteServer": "원격 웹 앱을 디버깅할 때 원격 서버를 로컬 컴퓨터에 자동으로 터널링할지 여부를 구성합니다.",
			"configuration.breakOnConditionalError": "조건부 중단점에서 오류가 발생하면 중지할지 여부입니다.",
			"configuration.debugByLinkOptions": "디버그 터미널 내부에서 클릭한 열린 링크를 디버깅할 때 사용되는 옵션입니다. 이 동작을 사용하지 않도록 설정하려면 \"false\"로 설정할 수 있습니다.",
			"configuration.defaultRuntimeExecutables": "지정되지 않은 경우 시작 구성에 사용되는 기본 `runtimeExecutable`입니다. 이 설정을 사용하여 Node.js 또는 브라우저 설치의 사용자 지정 경로를 구성할 수 있습니다.",
			"configuration.npmScriptLensLocation": "npm 스크립트에 \"실행\" 및 \"디버그\" 코드 렌즈가 표시되어야 하는 위치입니다. \"all\", 스크립트, 스크립트 섹션의 \"top\" 또는 \"never\"일 수 있습니다.",
			"configuration.pickAndAttachOptions": "'디버그: Node.js 프로세스에 연결' 명령을 통해 프로세스를 디버그할 때 사용되는 기본 옵션입니다.",
			"configuration.resourceRequestOptions": "디버거에서 소스 맵과 같은 리소스를 로드할 때 사용할 요청 옵션입니다. 예를 들어 sourcemap에서 인증을 요구하거나 자체 서명된 인증서를 사용하는 경우 이 옵션을 구성해야 할 수 있습니다. 옵션은 [`got`](https://github.com/sindresorhus/got) 라이브러리를 사용하여 요청을 만드는 데 사용됩니다.\r\n\r\n일반적으로 `{ \"https\": { \"rejectUnauthorized\": false } }`를 전달하여 인증서 확인을 사용하지 않도록 설정할 수 있습니다.",
			"configuration.suggestPrettyPrinting": "시작할 때 축소되어 보이는 경우 JavaScript 코드 자동 서식 지정을 제안할 지 여부입니다.",
			"configuration.terminalOptions": "JavaScript 디버그 터미널 및 npm 스크립트에 대한 기본 시작 옵션입니다.",
			"configuration.unmapMissingSources": "원본 파일을 읽을 수 없는 sourcemap된 파일을 자동으로 매핑 해제하는지를 구성합니다. false(기본값)인 경우 프롬프트가 표시됩니다.",
			"createDiagnostics.label": "중단점 문제 진단",
			"customDescriptionGenerator.description": "디버거가 개체(로컬 변수 등...)에 대해 표시하는 텍스트 설명을 사용자 지정합니다. 샘플:\r\n      1. this.toString() // toString을 호출하여 모든 개체를 출력합니다.\r\n      2. this.customDescription ? this.customDescription() : defaultValue // defaultValue를 반환하지 않는 경우 customDescription 메서드를 사용합니다(사용 가능한 경우).\r\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // defaultValue를 반환하지 않는 경우 customDescription 메서드를 사용합니다(사용 가능한 경우).\r\n      ",
			"customPropertiesGenerator.description": "디버거의 개체(로컬 변수 등...)에 대해 표시되는 속성을 사용자 지정합니다. 샘플:\r\n    1. { ...this, extraProperty: '12345' } // 모든 개체에 extraProperty 12345를 추가합니다.\r\n    2. this.customProperties ? this.customProperties() : this // this(기본 속성)의 속성을 사용하지 않는 경우 customProperties 메서드(사용할 수 있는 경우)를 사용합니다.\r\n    3. function () { return this.customProperties ? this.customProperties() : this } // 기본 속성을 반환하지 않는 경우 customDescription 메서드(사용할 수 있는 경우)를 사용합니다.\r\n\r\n    사용되지 않음: 이 구현은 https://github.com/microsoft/vscode/issues/102181에 설명된 방식으로 이 기능을 구현할 때까지 사용되는 이 기능의 임시 구현입니다.",
			"debug.npm.edit": "package.json 편집",
			"debug.npm.noScripts": "package.json에서 npm 스크립트를 찾을 수 없습니다.",
			"debug.npm.noWorkspaceFolder": "npm 스크립트를 디버그하려면 작업 영역 폴더를 열어야 합니다.",
			"debug.npm.parseError": "{0}을(를) 읽을 수 없습니다. {1}",
			"debug.npm.script": "npm 스크립트 디버그",
			"debug.terminal.attach": "Node.js 터미널 프로세스에 연결",
			"debug.terminal.label": "JavaScript 디버그 터미널",
			"debug.terminal.program.description": "시작된 터미널에서 실행할 명령입니다. 제공되지 않으면 프로그램을 시작하지 않고 터미널이 열립니다.",
			"debug.terminal.snippet.label": "디버그 터미널에서 \"npm start\" 실행",
			"debug.terminal.toggleAuto": "터미널 Node.js 자동 연결 설정/해제",
			"debug.terminal.welcome": "[JavaScript 디버그 터미널](command:extension.js-debug.createDebuggerTerminal)\r\n\r\nJavaScript 디버그 터미널을 사용하여 명령줄에서 실행되는 Node.js 프로세스를 디버그할 수 있습니다.",
			"debug.terminal.welcomeWithLink": "[JavaScript 디버그 터미널](command:extension.js-debug.createDebuggerTerminal)\r\n\r\nJavaScript 디버그 터미널을 사용하여 명령줄에서 실행되는 Node.js 프로세스를 디버그할 수 있습니다.\r\n\r\n[디버그 URL](command:extension.js-debug.debugLink)",
			"debugLink.label": "링크 열기",
			"edge.address.description": "웹 보기를 디버그할 때 웹 보기에서 수신 대기하는 IP 주소 또는 호스트 이름입니다. 설정하지 않은 경우 자동으로 검색됩니다.",
			"edge.attach.description": "이미 디버그 모드에 있는 Edge 인스턴스에 연결",
			"edge.attach.label": "Edge: 연결",
			"edge.label": "Edge",
			"edge.launch.description": "Edge를 시작하여 URL 디버그",
			"edge.launch.label": "Edge: 시작",
			"edge.port.description": "웹 보기를 디버그할 때 웹 보기 디버거에서 수신 대기하는 포트입니다. 설정하지 않은 경우 자동으로 검색됩니다.",
			"edge.useWebView.description": "(Microsoft Edge(Chromium) 전용) 'true'이면 디버거는 런타임 실행 파일을 WebView가 포함된 호스트 애플리케이션으로 취급하여 WebView 스크립트 콘텐츠를 디버그할 수 있도록 합니다.",
			"enableContentValidation.description": "디스크에 있는 파일의 내용이 런타임에 로드된 파일의 내용과 일치하는지 확인할지를 전환합니다. 이는 여러 시나리오에서 유용하며 몇몇 시나리오에서는 반드시 필요하지만, 경우에 따라(예: 스크립트의 서버 쪽 변환이 있는 경우) 문제를 발생시킬 수 있습니다.",
			"errors.timeout": "{0}: {1}ms 후 시간 초과",
			"extension.description": "Node.js 프로그램 및 Chrome 디버깅을 위한 확장입니다.",
			"extensionHost.label": "VS Code 확장 개발",
			"extensionHost.launch.config.name": "확장 시작",
			"extensionHost.launch.debugWebWorkerHost": "웹 작업자 확장 호스트에 연결을 시도해야 하는지를 구성합니다.",
			"extensionHost.launch.debugWebviews": "시작된 VS Code 인스턴스에서 웹 보기에 연결하도록 시도해야 할지 여부를 구성합니다. **참고:** 현재 이 기능이 제대로 작동하려면 '\"webview.experimental.useIframes\": true' 설정이 필요하며, 이 기능은 데스크톱 VS Code에서만 작동합니다.",
			"extensionHost.launch.env.description": "확장 호스트에 전달된 환경 변수입니다.",
			"extensionHost.launch.rendererDebugOptions": "'debugWebviews' 또는 'debugWebWorkerHost'를 사용하여 렌더러 프로세스에 연결하는 데 사용되는 크롬 시작 옵션입니다.",
			"extensionHost.launch.runtimeExecutable.description": "VS Code의 절대 경로입니다.",
			"extensionHost.launch.stopOnEntry.description": "시작된 후 확장 호스트를 자동으로 중지합니다.",
			"extensionHost.snippet.launch.description": "디버그 모드에서 VS Code 확장 시작",
			"extensionHost.snippet.launch.label": "VS Code 확장 개발",
			"longPredictionWarning.disable": "다시 표시 안 함",
			"longPredictionWarning.message": "중단점을 구성하는 데 다소 시간이 소요됩니다. launch.json에서 'outFiles'를 업데이트하여 이 속도를 높일 수 있습니다.",
			"longPredictionWarning.noFolder": "열려 있는 작업 영역 폴더가 없습니다.",
			"longPredictionWarning.open": "launch.json 열기",
			"node.address.description": "디버그할 프로세스의 TCP/IP 주소입니다. 기본값은 'localhost'입니다.",
			"node.attach.attachExistingChildren.description": "이미 생성된 자식 프로세스에 연결하려고 할지 여부입니다.",
			"node.attach.attachSpawnedProcesses.description": "연결된 프로세스에서 환경 변수를 설정하여 생성된 자식을 추적할지 여부입니다.",
			"node.attach.config.name": "연결",
			"node.attach.continueOnAttach": "true이면 시작되어 `--inspect-brk`를 기다리는 프로그램을 자동으로 다시 시작합니다.",
			"node.attach.processId.description": "연결할 프로세스의 ID입니다.",
			"node.attach.restart.description": "연결이 끊어지면 프로그램에 다시 연결해 보세요. `true`로 설정된 경우 영원히 1초에 한 번 시도합니다. 대신 개체의 `delay` 및 `maxAttempts`를 지정하여 시도 간격 및 최대 시도 횟수를 사용자 지정할 수 있습니다.",
			"node.attachSimplePort.description": "설정된 경우 지정된 포트를 통해 프로세스에 연결합니다. 이 기능은 일반적으로 Node.js 프로그램에는 더 이상 필요하지 않으며 자식 프로세스를 디버그하는 기능을 잃게 되지만, Deno 및 Docker 시작 같은 더 난해한 시나리오에서는 유용할 수 있습니다. 0으로 설정된 경우 임의 포트가 선택되고 시작 인수에 자동으로 --inspect-brk가 추가됩니다.",
			"node.console.title": "Node 디버그 콘솔",
			"node.disableOptimisticBPs.description": "해당 파일에 대한 sourcemap이 로드될 때까지 파일에서 중단점을 설정하지 마세요.",
			"node.killBehavior.description": "세션을 중지할 때 디버그 프로세스가 종료되는 방식을 구성합니다. 이 방식은 다음과 같을 수 있습니다.\r\n\r\n- forceful(기본값): 프로세스 트리를 강제로 삭제합니다. posix에서는 SIGKILL을 보내고, Windows에서는 `taskkill.exe /F`를 보냅니다.\r\n- polite: 프로세스 트리를 정상적으로 삭제합니다. 잘못 동작하는 프로세스는 이 방식으로 종료된 후 계속 실행될 수 있습니다. posix에서는 SIGTERM을 보내고, Windows에서는 `/F`(force) 플래그 없이 `taskkill.exe`를 보냅니다.\r\n- none: 종료가 수행되지 않습니다.",
			"node.label": "Node.js",
			"node.launch.args.description": "프로그램에 전달된 명령줄 인수입니다.",
			"node.launch.autoAttachChildProcesses.description": "디버거를 새로 생성된 자식 프로세스에 자동으로 연결합니다.",
			"node.launch.config.name": "시작",
			"node.launch.console.description": "디버그 대상을 시작할 위치입니다.",
			"node.launch.console.externalTerminal.description": "사용자 설정을 통해 구성 가능한 외부 터미널",
			"node.launch.console.integratedTerminal.description": "VS Code의 통합 터미널",
			"node.launch.console.internalConsole.description": "VS Code 디버그 콘솔(프로그램에서 입력 읽기를 지원하지 않음)",
			"node.launch.cwd.description": "디버깅 중인 프로그램의 작업 디렉터리에 대한 절대 경로입니다. localRoot를 설정한 경우 cwd가 해당 값과 일치하고, 그렇지 않으면 workspaceFolder로 대체됩니다.",
			"node.launch.env.description": "프로그램에 전달된 환경 변수입니다. 'null' 값은 환경에서 변수를 제거합니다.",
			"node.launch.envFile.description": "환경 변수 정의를 포함하는 파일의 절대 경로입니다.",
			"node.launch.logging": "로깅 구성",
			"node.launch.logging.cdp": "Chrome DevTools 프로토콜 메시지에 대한 로그 파일 경로",
			"node.launch.logging.dap": "디버그 어댑터 프로토콜 메시지에 대한 로그 파일 경로",
			"node.launch.outputCapture.description": "출력 메시지를 캡처할 위치입니다. `console`로 설정된 경우에는 기본 디버그 API이고, 그러지 않고 `std`로 설정된 경우에는 stdout/stderr 스트림입니다.",
			"node.launch.program.description": "프로그램의 절대 경로입니다. 생성된 값은 package.json 및 열린 파일을 보고 추측한 것입니다. 이 특성을 편집하세요.",
			"node.launch.restart.description": "0이 아닌 종료 코드로 종료되는 경우 프로그램을 다시 시작해 보세요.",
			"node.launch.runtimeArgs.description": "런타임 실행 파일에 전달되는 선택적 인수입니다.",
			"node.launch.runtimeExecutable.description": "사용할 런타임입니다. PATH에서 사용할 수 있는 런타임의 이름 또는 절대 경로입니다. 생략하면 `node`로 간주합니다.",
			"node.launch.runtimeSourcemapPausePatterns": "진입점 중단점을 수동으로 삽입할 패턴 목록입니다. 이는 시작 전에는 존재하지 않거나 검색할 수 없는 sourcemap을 사용할 때 디버거가 중단점을 설정할 수 있어 유용할 수 있습니다(예: [Serverless Framework를 사용하는 경우](https://github.com/microsoft/vscode-js-debug/issues/492)).",
			"node.launch.runtimeVersion.description": "사용할 `node` 런타임의 버전입니다. `nvm`이 필요합니다.",
			"node.launch.useWSL.deprecation": "'useWSL'은 사용되지 않으며 지원이 중단됩니다. 대신 '원격 - WSL' 확장을 사용하세요.",
			"node.launch.useWSL.description": "Linux용 Windows 하위 시스템을 사용합니다.",
			"node.localRoot.description": "프로그램이 포함된 로컬 디렉터리의 경로입니다.",
			"node.pauseForSourceMap.description": "들어오는 각 스크립트에 대해 소스 맵이 로드될 때까지 기다릴지 여부입니다. 이 작업에는 성능 오버헤드가 발생하며 'rootPath'를 사용하도록 설정하는 경우 디스크에서 실행될 때 사용하지 않도록 설정해도 됩니다.",
			"node.port.description": "연결할 디버그 포트입니다. 기본값은 9229입니다.",
			"node.processattach.config.name": "프로세스에 연결",
			"node.profileStartup.description": "true인 경우 프로세스가 시작되면 프로파일링이 즉시 시작됩니다.",
			"node.remoteRoot.description": "프로그램이 포함된 원격 디렉터리의 절대 경로입니다.",
			"node.resolveSourceMapLocations.description": "소스 맵을 사용하여 로컬 파일을 확인할 수 있는 위치(폴더 및 URL)에 대한 minimatch 패턴 목록입니다. 외부 소스 매핑 코드에서 잘못 중단되지 않도록 하는 데 사용할 수 있습니다. 패턴은 \"!\" 접두사를 붙여 제외할 수 있습니다. 제한을 피하기 위해 빈 배열 또는 null로 설정할 수 있습니다.",
			"node.showAsyncStacks.description": "현재 호출 스택을 생성하는 비동기 호출을 표시합니다.",
			"node.snippet.attach.description": "실행 중인 노드 프로그램에 연결",
			"node.snippet.attach.label": "Node.js: 연결",
			"node.snippet.attachProcess.description": "프로세스 선택기를 열어 연결할 Node 프로세스 선택",
			"node.snippet.attachProcess.label": "Node.js: 프로세스에 연결",
			"node.snippet.electron.description": "Electron 주 프로세스 디버그",
			"node.snippet.electron.label": "Node.js: Electron 주",
			"node.snippet.gulp.description": "Gulp 작업 디버그(프로젝트에 로컬 Gulp가 설치되어 있는지 확인하세요.)",
			"node.snippet.gulp.label": "Node.js: Gulp 작업",
			"node.snippet.launch.description": "디버그 모드에서 노드 프로그램 시작",
			"node.snippet.launch.label": "Node.js: 프로그램 실행",
			"node.snippet.mocha.description": "Mocha 테스트 디버그",
			"node.snippet.mocha.label": "Node.js: Mocha 테스트",
			"node.snippet.nodemon.description": "nodemon을 사용하여 소스 변경 내용에 대한 디버그 세션 다시 시작",
			"node.snippet.nodemon.label": "Node.js: Nodemon 설정",
			"node.snippet.npm.description": "npm 'debug' 스크립트를 통해 노드 프로그램 시작",
			"node.snippet.npm.label": "Node.js: npm을 통해 시작",
			"node.snippet.remoteattach.description": "원격 노드 프로그램의 디버그 포트에 연결합니다.",
			"node.snippet.remoteattach.label": "Node.js: 원격 프로그램에 연결",
			"node.snippet.yo.description": "yeoman 생성기 디버그(프로젝트 폴더에서 `npm link`를 실행하여 설치)",
			"node.snippet.yo.label": "Node.js: Yeoman 생성기",
			"node.sourceMapPathOverrides.description": "소스맵의 정보로부터 디스크의 위치로 소스 파일 위치를 다시 쓰기 위한 매핑 집합입니다.",
			"node.sourceMaps.description": "JavaScript 소스 맵을 사용합니다(있는 경우).",
			"node.stopOnEntry.description": "시작된 후 프로그램을 자동으로 중지합니다.",
			"node.timeout.description": "Node.js 연결을 다시 시도하는 시간(밀리초)입니다. 기본값은 10,000ms입니다.",
			"node.versionHint.description": "실행 중인 Node 버전을 명시적으로 지정할 수 있습니다. 이 기능은 자동 버전 검색이 작동하지 않는 경우 특정 동작을 비활성화하거나 활성화하는 데 사용할 수 있습니다.",
			"node.websocket.address.description": "연결할 정확한 Websocket 주소입니다. 지정되지 않은 경우 주소 및 포트에서 검색됩니다.",
			"openEdgeDevTools.label": "브라우저 Devtools 열기",
			"outFiles.description": "소스 맵이 사용하도록 설정되면 이 전역 패턴은 생성된 JavaScript 파일을 지정합니다. 패턴이 '!'로 시작하면 파일이 제외됩니다. 지정하지 않을 경우 생성된 코드는 소스와 동일한 디렉터리에 있어야 합니다.",
			"pretty.print.script": "디버그를 위한 예쁜 인쇄",
			"profile.start": "성능 프로필 수행",
			"profile.stop": "성능 프로필 중지",
			"remove.browser.breakpoint": "브라우저 중단점 제거",
			"remove.browser.breakpoint.all": "모든 브라우저 중단점 제거",
			"requestCDPProxy.label": "디버그 세션에 대한 CDP 프록시 요청",
			"skipFiles.description": "디버그할 때 건너뛰는 파일의 GLOB 패턴 배열입니다. `<node_internals>/**` 패턴은 모든 내부 Node.js 모듈과 일치합니다.",
			"smartStep.description": "다시 원래 소스에 매핑할 수 없는 생성된 코드를 자동으로 단계별로 실행합니다.",
			"start.with.stop.on.entry": "디버깅 시작 및 항목에서 중지",
			"startWithStopOnEntry.label": "디버깅 시작 및 항목에서 중지",
			"timeouts.generalDescription": "여러 디버거 작업의 시간 제한입니다.",
			"timeouts.generalDescription.markdown": "여러 디버거 작업의 시간 제한입니다.",
			"timeouts.sourceMaps.description": "소스 맵 작업과 관련된 시간 제한입니다.",
			"timeouts.sourceMaps.sourceMapCumulativePause.description": "최소 시간(sourceMapMinPause)이 소모된 후 소스 맵을 처리할 때까지 대기할 세션당 허용되는 추가 시간(밀리초)",
			"timeouts.sourceMaps.sourceMapMinPause.description": "스크립트가 구문 분석되는 동안 각 소스 맵이 처리될 때까지 대기하는 데 걸린 최소 시간(밀리초)",
			"toggle.skipping.this.file": "이 파일 건너뛰기 토글",
			"trace.boolean.description": "추적을 'true'로 설정하여 디스크에 진단 로그를 쓸 수 있습니다.",
			"trace.console.description": "로그가 디버그 콘솔로 반환되는지 여부를 구성합니다.",
			"trace.description": "생성되는 진단 출력을 구성합니다.",
			"trace.level.description": "기록된 로그 수준을 구성합니다.",
			"trace.logFile.description": "온디스크 로그가 기록되는 위치를 구성합니다.",
			"trace.stdio.description": "시작된 애플리케이션 또는 브라우저에서 추적 데이터를 반활하지 여부.",
			"trace.tags.description": "기록되는 로그 유형을 구성합니다.",
			"workspaceTrust.description": "이 작업 영역에서 코드를 디버깅하려면 신뢰가 필요합니다."
		}
	}
}