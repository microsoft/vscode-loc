{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/node/extension/autoAttach": {
			"process.with.pid.label": "已自動附加 ({0})"
		},
		"dist/node/extension/cluster": {
			"child.process.with.pid.label": "子處理序 {0}"
		},
		"dist/node/extension/configurationProvider": {
			"NVM_DIR.not.found.message": "屬性 'runtimeVersion' 需要 Node.js 版本管理員 'nvm' 或 'nvs'。",
			"NVM_HOME.not.found.message": "屬性 'runtimeVersion' 需要 Node.js 版本管理員 'nvm-windows' 或 'nvs'。",
			"NVS_HOME.not.found.message": "屬性 'runtimeVersion' 需要 Node.js 版本管理員 'nvs'。",
			"mern.starter.explanation": "為建立的 '{0}' 專案啟動組態。",
			"node.launch.config.name": "啟動程式",
			"outFiles.explanation": "調整 'outFiles' 屬性中的 Glob 模式，讓模式涵蓋所產生的 JavaScript。",
			"program.guessed.from.package.json.explanation": "根據 'package.json' 啟動建立的組態。",
			"program.not.found.message": "找不到要偵錯的程式",
			"runtime.version.not.found.message": "未為 '{1}' 安裝 Node.js '{0}' 版。",
			"useWslDeprecationWarning.doNotShowAgain": "不要再顯示",
			"useWslDeprecationWarning.title": "已取代屬性 'useWSL'。請改用 'Remote WSL' 延伸模組。若要深入了解，請按一下 [這裡]({0})。"
		},
		"dist/node/extension/processPicker": {
			"cannot.enable.debug.mode.error": "附加至處理序：無法啟用處理序 '{0}' ({1}) 的偵錯模式。",
			"pickNodeProcess": "挑選附加目標 node.js 處理序",
			"pid.error": "附加至處理序：無法在偵錯模式下放入處理序 \"{0}\"。",
			"process.id.error": "附加至處理序: '{0}' 看起來不像處理序識別碼。",
			"process.id.port": "處理序 id: {0}，偵錯埠: {1}",
			"process.id.port.legacy": "處理序 id: {0}，偵錯埠: {1} (傳統通訊協定)",
			"process.id.port.signal": "處理序 id: {0}，偵錯埠: {1} ({2})",
			"process.id.signal": "處理序 id: {0} ({1})",
			"process.picker.error": "處理序選擇器失敗 ({0})"
		},
		"dist/node/extension/protocolDetection": {
			"protocol.switch.legacy.detected": "因為偵測到了舊版通訊協定，所以使用該通訊協定進行偵錯。",
			"protocol.switch.legacy.version": "因為偵測到 Node.js {0}，所以使用傳統通訊協定進行偵錯。",
			"protocol.switch.unknown.error": "因為無法判斷 Node.js 版本 ({0})，所以正在以檢查通訊協定偵錯"
		},
		"dist/node/nodeDebug": {
			"VSND2001": "在 PATH 上找不到執行階段 '{0}'。請務必安裝 '{0}'。",
			"VSND2002": "無法啟動程式 '{0}'; 設定來源對應可能有所助益。",
			"VSND2003": "無法啟動程式 '{0}'; 設定 '{1}' 屬性可能有所助益。",
			"VSND2009": "因為找不到相對應的 JavaScript，所以無法啟動程式 '{0}'。",
			"VSND2010": "無法連接至執行階段流程 (原因: {0})。",
			"VSND2011": "在終端機 ({0}) 中無法啟動偵錯目標。",
			"VSND2015": "已取消要求 '{_request}'，因為 Node.js 沒有回應。",
			"VSND2016": "Node.js 未在合理時間內回應要求 '{_request}'。",
			"VSND2017": "無法啟動偵錯目標 ({0})。",
			"VSND2018": "沒有可用的呼叫堆疊 ({_command}: {_error})。",
			"VSND2019": "找不到內部模組 {0}。",
			"VSND2022": "程式在 JavaScript 外部暫停，因此沒有呼叫堆疊。",
			"VSND2023": "沒有任何可用的呼叫堆疊。",
			"VSND2028": "未知的主控台類型 '{0}'。",
			"VSND2029": "無法從檔案 ({0}) 載入環境變數。",
			"VSND2033": "無法連線至執行階段; 請確定執行階段處於 'legacy' 偵錯模式。 ",
			"VSND2034": "無法透過 'legacy' 通訊協定連線到執行階段; 嘗試使用 'inspector' 通訊協定 。",
			"anonymous.function": "(匿名函式)",
			"attribute.path.not.absolute": "屬性 '{0}' 不是絕對的 ('{1}'); 請考慮新增前置詞 '{2}'，使其變成絕對的。",
			"attribute.path.not.exist": "屬性 '{0}' 不存在 ('{1}')。",
			"attribute.wls.not.exist": "找不到 Windows Subsystem Linux 安裝",
			"eval.invalid.expression": "運算式無效: {0}",
			"eval.not.available": "無法使用",
			"exception.paused.promise.rejection": "承諾 (Promise) 拒絕時暫停",
			"exception.promise.rejection": "承諾 (Promise) 拒絕",
			"exception.promise.rejection.text": "承諾 (Promise) 拒絕 ({0})",
			"exceptions.all": "所有例外狀況",
			"exceptions.rejects": "承諾 (Promise) 拒絕",
			"exceptions.uncaught": "未攔截的例外狀況",
			"file.on.disk.changed": "因為磁碟上的檔案已變更，所以未驗證。請重新啟動偵錯工作階段。",
			"more.information": "詳細資訊",
			"node.console.title": "節點偵錯主控台",
			"origin.core.module": "唯讀核心模組",
			"origin.from.node": "Node.js 中的唯讀內容",
			"origin.from.remote.node": "遠端 Node.js 中的唯讀內容",
			"origin.inlined.source.map": "來源對應中的唯讀內置內容",
			"program.path.case.mismatch.warning": "程式路徑使用的大小寫字元不同於磁碟上的檔案。這可能導致無法命中中斷點。",
			"reason.description.breakpoint": "已在中斷點暫停",
			"reason.description.debugger_statement": "已於偵錯工具陳述式暫停",
			"reason.description.entry": "已在輸入時暫停",
			"reason.description.exception": "已在發生例外狀況時暫停",
			"reason.description.restart": "已於框架項目暫停",
			"reason.description.step": "已在步驟時暫停",
			"reason.description.user_request": "已應使用者要求暫停",
			"scope.block": "區塊",
			"scope.catch": "Catch",
			"scope.closure": "關閉",
			"scope.exception": "例外狀況",
			"scope.global": "GLOBAL",
			"scope.local": "LOCAL",
			"scope.local.with.count": "本機 ({0} / {1})",
			"scope.script": "指令碼",
			"scope.unknown": "未知的範圍類型: {0}",
			"scope.with": "與",
			"setVariable.error": "不支援設定值",
			"source.not.found": "無法擷取內容。",
			"source.skipFiles": "因為 'skipFiles' 而跳過",
			"source.smartstep": "因為 'smartStep' 而跳過",
			"sourcemapping.fail.message": "因為找不到產生的程式碼 (來源對應問題嗎？)，所以已忽略中斷點。"
		},
		"dist/node/nodeV8Protocol": {
			"not.connected": "未連線到執行階段",
			"runtime.timeout": "{0} 毫秒後逾時",
			"runtime.unresponsive": "已取消，因為 Node.js 沒有回應"
		},
		"package": {
			"attach.node.process": "附加到節點處理序 (舊版)",
			"debug.node.showUseWslIsDeprecatedWarning.description": "控制是否要在 'useWSL' 屬性受到使用時顯示警告。",
			"extension.description": "Node.js 偵錯支援 (版本 < 8.0)",
			"launch.args.description": "傳遞至程式的命令列引數。",
			"node.address.description": "要偵錯的處理序 TCP/IP 位址 (僅限 Node.js >= 5.0)。預設為 'localhost'。",
			"node.attach.config.name": "附加",
			"node.attach.processId.description": "要連結的處理序之識別碼。",
			"node.disableOptimisticBPs.description": "在為該檔案載入 sourcemap 之前，請勿在任何檔案中設定中斷點。",
			"node.label": "Node.js (舊版)",
			"node.launch.autoAttachChildProcesses.description": "自動附加偵錯工具至新的子處理序。",
			"node.launch.config.name": "啟動",
			"node.launch.console.description": "啟動偵錯目標的位置。",
			"node.launch.console.externalTerminal.description": "可透過使用者設定進行外部終端機的設定。",
			"node.launch.console.integratedTerminal.description": "VS Code 的整合式終端機",
			"node.launch.console.internalConsole.description": "VS Code 偵錯主控台 (無法從程式讀取輸入)",
			"node.launch.cwd.description": "到達程式 (正進行偵錯) 工作目錄的絕對路徑。",
			"node.launch.env.description": "傳遞至程式的環境變數。值 'null' 會從環境移除該變數。",
			"node.launch.envFile.description": "包含環境變數定義的檔案絕對路徑。",
			"node.launch.externalConsole.deprecationMessage": "屬性 'externalConsole' 已取代，請改用 'console'。",
			"node.launch.outputCapture.description": "擷取輸出訊息的來源：偵錯 API 或 stdout/stderr 串流。",
			"node.launch.program.description": "程式的絕對路徑。透過查看 package.json 及開啟的檔案猜測產生的值。編輯此屬性。",
			"node.launch.runtimeArgs.description": "傳遞至執行階段可執行檔的選用引數。",
			"node.launch.runtimeExecutable.description": "要使用的執行階段。可以是 PATH 上可用執行階段的絕對路徑或名稱。若省略，即假設為 `node`。",
			"node.launch.runtimeVersion.description": "'node' 版本的執行階段使用中。需要 `nvm`。",
			"node.launch.useWSL.deprecation": "'useWSL' 已淘汰且其支援將受到捨棄。請改為使用 'Remote - WSL' 延伸模組。",
			"node.launch.useWSL.description": "使用 Windows 子系統 Linux 版。",
			"node.localRoot.description": "包含程式的本機目錄路徑。",
			"node.port.description": "要附加到的目標偵錯連接埠。預設值為 5858。",
			"node.processattach.config.name": "附加至處理序",
			"node.protocol.auto.description": "嘗試自動偵測最佳通訊協定，選取 'Inspector' 以啟動 Node 8.0+",
			"node.protocol.description": "要使用的 Node.js 偵錯通訊協定。",
			"node.protocol.inspector.description": "Node.js 版本 >= 6.3 支援的新通訊協定",
			"node.protocol.legacy.description": "Node.js 版本 < 8.0 支援的舊通訊協定",
			"node.remoteRoot.description": "包含程式的遠端目錄絕對路徑。",
			"node.restart.description": "請在 Node.js 終止之後，重新啟動工作階段。",
			"node.showAsyncStacks.description": "顯示導致目前呼叫堆疊的非同步呼叫。僅限 'inspector' 通訊協定。",
			"node.snippet.attach.description": "附加至 Node 處理程序",
			"node.snippet.attach.label": "Node.js: 附加",
			"node.snippet.attachProcess.description": "開啟處理序選擇器以選取要連結的目標節點處理序",
			"node.snippet.attachProcess.label": "Node.js: 連結到處理序",
			"node.snippet.electron.description": "對 Electron 主要處理序偵錯",
			"node.snippet.electron.label": "Node.js: Electron 主要",
			"node.snippet.gulp.description": "對 Gulp 工作偵錯 (確認您的專案中已安裝本機 Gulp)",
			"node.snippet.gulp.label": "Node.js: Gulp 工作",
			"node.snippet.launch.description": "在偵錯模式中啟動節點程式",
			"node.snippet.launch.label": "Node.js: 啟動程式",
			"node.snippet.mocha.description": "對 mocha 測試偵錯",
			"node.snippet.mocha.label": "Node.js: Mocha 測試",
			"node.snippet.nodemon.description": "使用 nodemon 在來源變更時重新啟動偵錯工作階段",
			"node.snippet.nodemon.label": "Node.js: Nodemon 設定",
			"node.snippet.npm.description": "透過 npm `debug` 指令碼啟動節點程式",
			"node.snippet.npm.label": "Node.js: 透過 NPM 啟動",
			"node.snippet.remoteattach.description": "附加到遠端節點程式的偵錯連接埠",
			"node.snippet.remoteattach.label": "Node.js: 附加到遠端程式",
			"node.snippet.yo.description": "偵錯 Yeoman 產生器 (透過執行專案資料夾中的 `npm link` 進行安裝)",
			"node.snippet.yo.label": "Node.js: Yeoman 產生器",
			"node.sourceMapPathOverrides.description": "依據 sourcemap 指示重新寫入一組來源檔案位置對應至磁碟上的位置。",
			"node.sourceMaps.description": "使用 JavaScript 來源對應 (如果有)。",
			"node.stopOnEntry.description": "啟動後自動停止程式。",
			"node.timeout.description": "重試連線到 Node.js 的毫秒數。預設值為 10000 毫秒。",
			"open.loaded.script": "開啟已載入的指令碼",
			"outDir.deprecationMessage": "屬性 'outDir' 已淘汰，請改用 'outFiles'。",
			"outFiles.description": "如果啟用來源對應，則這些 Glob 模式會指定產生的 JavaScript 檔案。如果模式以 '!' 開頭，則會排除檔案。如果未指定，則產生的程式碼應會與其來源位於相同目錄中。範例: `[\"${workspaceFolder}/out/**/*.js\"]`",
			"skipFiles.description": "偵錯時要跳過的檔案 Glob 模式陣列。該模式 `<node_internals>/**` 會比對所有內部 Node.js 模組。",
			"smartStep.description": "自動逐步執行產生的程式碼 (無法對應回原始來源)。",
			"start.with.stop.on.entry": "開始偵錯並在進入時停止 (舊版)",
			"toggle.skipping.this.file": "切換跳過此檔案",
			"trace.description": "產生診斷輸出。您可列出一或多個選取器，並以逗號分隔，而非將此項設為 true。「詳細資訊」選取器可提供非常詳細的輸出。"
		}
	}
}