{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "Określenie referencji okazało się niemożliwe."
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"manyImplementationLabel": "Implementacje: {0}",
			"oneImplementationLabel": "1 implementacja"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"manyReferenceLabel": "Odwołania: {0}",
			"oneReferenceLabel": "1 odwołanie"
		},
		"dist/languageFeatures/completions": {
			"acquiringTypingsDetail": "Uzyskiwanie definicji typings dla funkcji IntelliSense.",
			"acquiringTypingsLabel": "Trwa uzyskiwanie definicji typings...",
			"selectCodeAction": "Wybierz akcję kodu do zastosowania"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Włącza sprawdzanie semantyczne w pliku języka JavaScript. Musi znajdować się na początku pliku.",
			"ts-expect-error": "Pomija błędy @ts-check w następnym wierszu pliku, oczekiwane jest, że będzie istniał co najmniej jeden wiersz.",
			"ts-ignore": "Pomija błędy @ts-check w następnym wierszu pliku.",
			"ts-nocheck": "Wyłącza sprawdzanie semantyczne w pliku JavaScript. Musi znajdować się na początku pliku."
		},
		"dist/languageFeatures/fileReferences": {
			"error.noResource": "Odnalezienie odwołań do pliku nie powiodło się. Nie podano dostarczono zasobu.",
			"error.unknownFile": "Odnalezienie odwołań do pliku nie powiodło się. Nieznany typ pliku.",
			"error.unsupportedLanguage": "Odnalezienie odwołań do pliku nie powiodło się. Nieobsługiwany typ pliku.",
			"error.unsupportedVersion": "Odnalezienie odwołań do pliku nie powiodło się. Wymagany jest język TypeScript 4.2 lub nowszy.",
			"progress.title": "Znajdowanie odwołań do plików"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Rozwiąż wszystkie możliwe do naprawienia problemy z kodem JS/TS",
			"autoFix.missingImports.label": "Dodaj wszystkie brakujące importy",
			"autoFix.unused.label": "Usuń cały nieużywany kod"
		},
		"dist/languageFeatures/hover": {
			"loadingPrefix": "(ładowanie...)"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Komentarz JSDoc"
		},
		"dist/languageFeatures/organizeImports": {
			"error.organizeImports.noResource": "Organizowanie elementów zaimportowanych nie powiodło się. Nie podano zasobu.",
			"error.organizeImports.unknownFile": "Organizowanie elementów zaimportowanych nie powiodło się. Nieznany typ pliku.",
			"organizeImportsAction.title": "Organizuj importy",
			"removeUnusedImportsAction.title": "Usuń nieużywane importy",
			"sortImportsAction.title": "Sortuj elementy zaimportowane"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (popraw wszystko w pliku)"
		},
		"dist/languageFeatures/refactor": {
			"extractConstant.disabled.reason": "Nie można wyodrębnić bieżącego zaznaczenia",
			"extractConstant.disabled.title": "Wyodrębnij do stałej",
			"extractFunction.disabled.reason": "Nie można wyodrębnić bieżącego zaznaczenia",
			"extractFunction.disabled.title": "Wyodrębnij do funkcji",
			"refactor.documentation.title": "Dowiedz się więcej o refaktoryzacjach w języku JS/TS",
			"refactoringFailed": "Nie można zastosować refaktoryzacji"
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Wystąpił błąd podczas zmiany nazwy pliku"
		},
		"dist/languageFeatures/sourceDefinition": {
			"error.noReferences": "Nie znaleziono żadnych definicji źródła.",
			"error.noResource": "Przejście do definicji źródła nie powiodło się. Nie podano żadnego zasobu.",
			"error.unknownFile": "Przejście do definicji źródła nie powiodło się. Nieznany typ pliku.",
			"error.unsupportedLanguage": "Przejście do definicji źródła nie powiodło się. Nieobsługiwany typ pliku.",
			"error.unsupportedVersion": "Przejście do definicji źródła nie powiodło się. Wymagany jest język TypeScript 4.7 lub nowszy.",
			"progress.title": "Wyszukiwanie definicji źródła"
		},
		"dist/languageFeatures/tsconfig": {
			"documentLink.tooltip": "Otwórz link",
			"openTsconfigExtendsModuleFail": "Nie można rozpoznać {0} jako modułu"
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"accept.title": "Tak",
			"always.title": "Zawsze automatycznie aktualizuj importy",
			"moreFile": "... 1 dodatkowy plik nie został pokazany",
			"moreFiles": "... {0} dodatkowych plików nie zostało pokazanych",
			"never.title": "Nigdy nie aktualizuj importów automatycznie",
			"prompt": "Aktualizować importy dla elementu „{0}”?",
			"promptMoreThanOne": "Zaktualizować importy dla następujących {0} plików?",
			"reject.title": "Nie",
			"renameProgress.title": "Sprawdzanie aktualizacji importów JS/TS"
		},
		"dist/task/taskProvider": {
			"badTsConfig": "Zadanie języka TypeScript w pliku tasks.json zawiera „\\\\”. Zadania języka TypeScript w pliku tsconfig muszą używać „/”",
			"buildAndWatchTscLabel": "monitoruj – {0}",
			"buildTscLabel": "kompilacja — {0}"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "Ścieżka {0} nie wskazuje prawidłowej instalacji tsserver. Wykonywany jest powrót do dołączonej wersji języka TypeScript."
		},
		"dist/tsServer/versionManager": {
			"allow": "Zezwól",
			"dismiss": "Odrzuć",
			"learnMore": "Dowiedz się więcej na temat zarządzania wersjami języka TypeScript",
			"promptUseWorkspaceTsdk": "Ten obszar roboczy zawiera wersję języka TypeScript. Czy chcesz użyć wersji języka TypeScript z obszaru roboczego dla funkcji języków TypeScript i JavaScript?",
			"selectTsVersion": "Wybierz wersję języka TypeScript używaną dla funkcji języka JavaScript i TypeScript",
			"suppress prompt": "Nigdy w tym obszarze roboczym",
			"useVSCodeVersionOption": "Użyj wersji programu VS Code",
			"useWorkspaceVersionOption": "Użyj wersji obszaru roboczego"
		},
		"dist/tsServer/versionProvider": {
			"couldNotLoadTsVersion": "Could not load the TypeScript version at this path"
		},
		"dist/tsServer/versionProvider.electron": {
			"noBundledServerFound": "VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code."
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "Ścieżka {0} nie wskazuje prawidłowej instalacji tsserver. Wykonywany jest powrót do dołączonej wersji języka TypeScript.",
			"openTsServerLog.openFileFailedFailed": "Nie można było otworzyć pliku dziennika serwera języka TS",
			"serverDiedFiveTimes": "Usługa językowa JS/TS uległa awarii 5 razy w ciągu ostatnich 5 minut.",
			"serverDiedFiveTimesWithPlugins": "Usługa językowa JS/TS uległa awarii 5 razy w ciągu ostatnich 5 minut.\r\n Może to być spowodowane przez wtyczkę współtworzoną przez jedno z następujących rozszerzeń: {0}",
			"serverDiedImmediately": "Usługa językowa JS/TS natychmiast uległa awarii 5 razy. Usługa nie zostanie ponownie uruchomiona.",
			"serverDiedImmediatelyWithPlugins": "Usługa językowa JS/TS natychmiast uległa awarii 5 razy. Usługa nie zostanie uruchomiona ponownie.\r\n Może to być spowodowane przez wtyczkę współtworzoną przez jedno z następujących rozszerzeń: {0}",
			"serverDiedOnce": "Usługa językowa JS/TS uległa awarii.",
			"serverDiedOnceWithPlugins": "Usługa językowa JS/TS uległa awarii.\r\n Może to być spowodowane przez wtyczkę współtworzoną przez jedno z następujących rozszerzeń: {0}",
			"serverDiedReportIssue": "Zgłoś problem",
			"serverExitedWithError": "Serwer języka TypeScript zakończył pracę z błędem. Komunikat o błędzie: {0}",
			"serverLoading.progress": "Inicjowanie funkcji języka JS/TS",
			"typescript.openTsServerLog.enableAndReloadOption": "Włącz rejestrowanie i uruchom ponownie serwer języka TS",
			"typescript.openTsServerLog.loggingNotEnabled": "Rejestrowanie serwera języka TS jest wyłączone. Ustaw plik „typescript.tsserver.log” i uruchom ponownie serwer języka TS, aby włączyć rejestrowanie",
			"typescript.openTsServerLog.noLogFile": "Serwer języka TS nie rozpoczął rejestrowania.",
			"usingOldTsVersion.detail": "Obszar roboczy używa starej wersji języka TypeScript ({0}).\r\n\r\nPrzed zgłoszeniem problemu zaktualizuj obszar roboczy do najnowszej stabilnej wersji TypeScript, aby upewnić się, że błąd nie został już naprawiony.",
			"usingOldTsVersion.title": "Zaktualizuj wersję języka TypeScript"
		},
		"dist/ui/intellisenseStatus": {
			"pending.detail": "Ładowanie stanu funkcji IntelliSense",
			"resolved.command.title.createJsconfig": "Utwórz plik jsconfig",
			"resolved.command.title.createTsconfig": "Utwórz plik tsconfig",
			"resolved.command.title.open": "Otwórz plik konfiguracji",
			"resolved.detail.noJsConfig": "Brak pliku jsconfig",
			"resolved.detail.noOpenedFolders": "Brak otwartych folderów",
			"resolved.detail.noTsConfig": "Brak pliku tsconfig",
			"resolved.detail.notInOpenedFolder": "Plik nie jest częścią otwartych folderów",
			"statusItem.name": "Stan funkcji IntelliSense języka JS/TS",
			"syntaxOnly.command.title.learnMore": "Dowiedz się więcej",
			"syntaxOnly.detail": "Funkcja IntelliSense dla całego projektu jest niedostępna",
			"syntaxOnly.text": "Tryb częściowy"
		},
		"dist/ui/jsNodeWalkthrough.electron": {
			"noNodeInstallFound": "Nie można odnaleźć środowiska Node.js na tym komputerze. Jeśli został właśnie zainstalowany, może być konieczne ponowne załadowanie programu VS Code.",
			"nodeNotFoundDebugAnyway": "Spróbuj debugować mimo to",
			"nodeNotFoundDismissDialog": "Odrzuć",
			"reloadWindowForNode": "Załaduj ponownie program VS Code"
		},
		"dist/ui/versionStatus": {
			"versionStatus.command": "Wybierz wersję",
			"versionStatus.detail": "Wersja języka TypeScript",
			"versionStatus.name": "Wersja języka TypeScript"
		},
		"dist/utils/api": {
			"invalidVersion": "nieprawidłowa wersja"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/logLevelMonitor": {
			"typescript.extendedLogging.disableLogging": "Wyłącz rejestrowanie",
			"typescript.extendedLogging.doNotShowAgain": "Nie pokazuj ponownie",
			"typescript.extendedLogging.isEnabled": "Rejestrowanie serwera TS jest obecnie włączone, co może mieć wpływ na wydajność."
		},
		"dist/utils/tsconfig": {
			"typescript.configureJsconfigQuickPick": "Konfiguruj plik jsconfig.json",
			"typescript.configureTsconfigQuickPick": "Konfiguruj plik tsconfig.json",
			"typescript.noJavaScriptProjectConfig": "Plik nie jest częścią projektu JavaScript. Aby dowiedzieć się więcej, zapoznaj się z [dokumentacją pliku jsconfig.json]({0}).",
			"typescript.noTypeScriptProjectConfig": "Plik nie jest częścią projektu TypeScript. Aby dowiedzieć się więcej, zapoznaj się z [dokumentacją pliku tsconfig.json]({0}).",
			"typescript.projectConfigCouldNotGetInfo": "Nie można było określić projektu języka TypeScript lub JavaScript",
			"typescript.projectConfigNoWorkspace": "Otwórz folder w programie VS Code, aby użyć projektu języka TypeScript lub JavaScript",
			"typescript.projectConfigUnsupportedFile": "Nie można było określić projektu języka TypeScript lub JavaScript. Nieobsługiwany typ pliku"
		},
		"package": {
			"codeActions.refactor.extract.constant.description": "Wyodrębnij wyrażenie do stałej.",
			"codeActions.refactor.extract.constant.title": "Wyodrębnij stałą",
			"codeActions.refactor.extract.function.description": "Wyodrębnij wyrażenie do metody lub funkcji.",
			"codeActions.refactor.extract.function.title": "Wyodrębnij funkcję",
			"codeActions.refactor.extract.interface.description": "Wyodrębnij typ do interfejsu.",
			"codeActions.refactor.extract.interface.title": "Wyodrębnij interfejs",
			"codeActions.refactor.extract.type.description": "Wyodrębnij typ do aliasu typu.",
			"codeActions.refactor.extract.type.title": "Wyodrębnij typ",
			"codeActions.refactor.move.newFile.description": "Przenieś wyrażenie do nowego pliku.",
			"codeActions.refactor.move.newFile.title": "Przenieś do nowego pliku",
			"codeActions.refactor.rewrite.arrow.braces.description": "Dodaj lub usuń nawiasy klamrowe w funkcji strzałki.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Przepisz nawiasy klamrowe strzałki",
			"codeActions.refactor.rewrite.export.description": "Konwertuj między eksportem domyślnym a eksportem nazwanym.",
			"codeActions.refactor.rewrite.export.title": "Konwertuj eksport",
			"codeActions.refactor.rewrite.import.description": "Konwertuj między nazwanymi importami i importami przestrzeni nazw.",
			"codeActions.refactor.rewrite.import.title": "Konwertuj import",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Konwertuj parametry na obiekt destrukturyzowany",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Generuj metody dostępu „get” i „set”.",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generuj metody dostępu",
			"codeActions.source.organizeImports.title": "Organizuj importy",
			"configuration.implicitProjectConfig.checkJs": "Włącz/wyłącz sprawdzanie semantyczne plików języka JavaScript. Istniejące pliki „jsconfig.json” lub „tsconfig.json” przesłaniają to ustawienie.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Włącz/wyłącz parametr „experimentalDecorators” w plikach języka JavaScript, które nie są częścią projektu. Istniejące pliki „jsconfig.json” lub „tsconfig.json” przesłaniają to ustawienie.",
			"configuration.implicitProjectConfig.module": "Ustawia system modułów dla programu. Zobacz więcej: https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Włącz/wyłącz [dokładne typy funkcji](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) w plikach języków JavaScript i TypeScript, które nie są częścią projektu. Istniejące pliki „jsconfig.json” lub „tsconfig.json” przesłaniają to ustawienie.",
			"configuration.implicitProjectConfig.strictNullChecks": "Włącz/wyłącz [ścisłe kontroli wartości null](https://www.typescriptlang.org/tsconfig#strictNullChecks) w plikach języków JavaScript i TypeScript, które nie są częścią projektu. Istniejące pliki „jsconfig.json” lub „tsconfig.json” przesłaniają to ustawienie.",
			"configuration.implicitProjectConfig.target": "Ustaw docelową wersję języka JavaScript dla emitowanego kodu JavaScript i dołącz deklaracje biblioteki. Zobacz więcej: https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.enumMemberValues.enabled": "Włącz/wyłącz osadzane wskazówki w przypadku wartości składowych w deklaracjach wyliczenia:\r\n```typescript\r\n\r\nenum MyValue {\r\n\tA /* = 0 */;\r\n\tB /* = 1 */;\r\n}\r\n \r\n```\r\nWymaga użycia języka TypeScript 4.4+ w obszarze roboczym.",
			"configuration.inlayHints.functionLikeReturnTypes.enabled": "Włącz/wyłącz osadzone wskazówki w przypadku ukrytych zwracanych typów w sygnaturach funkcji:\r\n```typescript\r\n\r\nfunction foo() /* :number */ {\r\n\treturn Date.now();\r\n} \r\n \r\n```\r\nWymaga użycia języka TypeScript 4.4+ w obszarze roboczym.",
			"configuration.inlayHints.parameterNames.enabled": "Włącz/wyłącz osadzone wskazówki w przypadku nazw parametrów:\r\n```typescript\r\n\r\nparseInt(/* str: */ '123', /* radix: */ 8)\r\n \r\n```\r\nWymaga użycia języka TypeScript 4.4+ w obszarze roboczym.",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Pomiń wskazówki dotyczące nazw parametrów dla argumentów, których tekst jest identyczny z nazwą parametru.",
			"configuration.inlayHints.parameterTypes.enabled": "Włącz/wyłącz osadzone wskazówki w przypadku ukrytych typów parametrów:\r\n```typescript\r\n\r\nel.addEventListener('click', e /* :MouseEvent */ => ...)\r\n \r\n```\r\nWymaga użycia języka TypeScript 4.4+ w obszarze roboczym.",
			"configuration.inlayHints.propertyDeclarationTypes.enabled": "Włącz/wyłącz wskazówki śródwierszowe dla typów niejawnych w deklaracjach właściwości:\r\n```typescript\r\n\r\nclass Foo {\r\n\tprop /* :number */ = Date.now();\r\n}\r\n \r\n```\r\nWymaga użycia języka TypeScript 4.4+ w obszarze roboczym.",
			"configuration.inlayHints.variableTypes.enabled": "Włącz/wyłącz oadzone wskazówki w przypadku ukrytych typów zmiennych:\r\n```typescript\r\n\r\nconst foo /* :number */ = Date.now();\r\n \r\n```\r\nWymaga użycia języka TypeScript 4.4+ w obszarze roboczym.",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Pomiń wskazówki typu dla zmiennych, których nazwa jest identyczna z nazwą typu. Wymaga użycia języka TypeScript w wersji 4.8 lub nowszej w obszarze roboczym.",
			"configuration.javascript.checkJs.checkJs.deprecation": "To ustawienie zostało zastąpione przez `js/ts.implicitProjectConfig.checkJs`.",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "To ustawienie zostało zastąpione przez `js/ts.implicitProjectConfig.experimentalDecorators`.",
			"configuration.suggest.autoImports": "Włącz/wyłącz sugestie automatycznego importowania.",
			"configuration.suggest.classMemberSnippets.enabled": "Włącz/wyłącz uzupełnianie fragmentów kodu dla składowych klasy. Wymaga użycia języka TypeScript 4.5+ w obszarze roboczym",
			"configuration.suggest.completeFunctionCalls": "Uzupełnij funkcje za pomocą ich sygnatury parametru.",
			"configuration.suggest.completeJSDocs": "Włącz/wyłącz sugestię do uzupełniania komentarzy JSDoc.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Włącz/wyłącz pokazywanie uzupełnień potencjalnie niezdefiniowanych wartości, które wstawiają opcjonalne wywołanie łańcucha. Wymaga języka TS 3.7 lub nowszego i włączenia ścisłych kontroli wartości null.",
			"configuration.suggest.includeCompletionsForImportStatements": "Włącz/wyłącz uzupełnienia w stylu automatycznego importu dla częściowo wpisanych instrukcji importu. Wymaga używania języka TypeScript 4.3 lub nowszego w obszarze roboczym.",
			"configuration.suggest.includeCompletionsWithSnippetText": "Włącz/wyłącz uzupełnianie fragmentów kodu z serwera języka TS. Wymaga używania języka TypeScript 4.3 lub nowszego w obszarze roboczym.",
			"configuration.suggest.jsdoc.generateReturns": "Włącz/wyłącz generowanie adnotacji `@returns` dla szablonów JSDoc. Wymaga użycia w obszarze roboczym języka TypeScript w wersji 4.2 lub nowszej.",
			"configuration.suggest.names": "Włącz/wyłącz uwzględnianie unikatowych nazw z pliku w sugestiach języka JavaScript. Pamiętaj, że sugestie nazw są zawsze wyłączone w kodzie JavaScript, który jest semantycznie sprawdzany przy użyciu funkcji „@ts-check” lub „checkJs”.",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Włącz/wyłącz uzupełnienia fragmentów kodu dla metod w literałach obiektów. Wymaga użycia języka TypeScript 4.7+ w obszarze roboczym",
			"configuration.suggest.paths": "Włącz/wyłącz sugestie dotyczące ścieżek w instrukcjach importu i wymagaj wywołań.",
			"configuration.surveys.enabled": "Włącz/wyłącz okazjonalne ankiety, które pomagają nam ulepszyć obsługę języków JavaScript i TypeScript w programie VS Code.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Eksperymentalne) Umożliwia raportowanie błędów w całym projekcie.",
			"configuration.tsserver.maxTsServerMemory": "Maksymalna ilość pamięci (w MB), która ma zostać przydzielona do procesu serwera języka TypeScript.",
			"configuration.tsserver.useSeparateSyntaxServer": "Włącz/wyłącz tworzenie oddzielnego serwera języka TypeScript, który może szybciej reagować na operacje związane ze składnią, takie jak obliczenie składania lub obliczenie symboli dokumentów. Wymaga użycia w obszarze roboczym języka TypeScript 3.4.0 lub nowszego.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "To ustawienie jest przestarzałe na rzecz elementu „typescript.tsserver.useSyntaxServer”.",
			"configuration.tsserver.useSyntaxServer": "Określa, czy język TypeScript uruchamia dedykowany serwer, aby szybciej obsługiwać operacje związane ze składnią, takie jak składanie kodu obliczeniowego.",
			"configuration.tsserver.useSyntaxServer.always": "Użyj lżejszego serwera składni, aby obsłużyć wszystkie operacje funkcji IntelliSense. Ten serwer składni może zapewniać funkcję IntelliSense tylko dla otwartych plików.",
			"configuration.tsserver.useSyntaxServer.auto": "Zduplikuj zarówno pełny serwer, jak i lżejszy serwer przeznaczony do wykonywania operacji składniowych. Serwer składni służy do przyspieszania operacji składniowych i zapewniania funkcji IntelliSense podczas ładowania projektów.",
			"configuration.tsserver.useSyntaxServer.never": "Nie używaj dedykowanego serwera składni. Użyj pojedynczego serwera do obsługi wszystkich operacji funkcji IntelliSense.",
			"configuration.tsserver.watchOptions": "Skonfiguruj, które strategie monitorowania powinny być używane do śledzenia plików i katalogów. Wymaga użycia w obszarze roboczym języka TypeScript 3.8 lub nowszego.",
			"configuration.tsserver.watchOptions.fallbackPolling": "W przypadku korzystania ze zdarzeń systemu plików ta opcja określa strategię sondowania, która jest używana, gdy w systemie zabraknie natywnych obserwatorów plików i/lub gdy system nie obsługuje natywnych obserwatorów plików.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Użyj kolejki dynamicznej, w której rzadziej modyfikowane pliki będą rzadziej sprawdzane.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Sprawdzaj każdy plik pod kątem zmian kilka razy na sekundę w ustalonych odstępach czasu.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Sprawdzaj każdy plik pod kątem zmian kilka razy na sekundę, ale użyj heurystyki, aby sprawdzać niektóre typy plików rzadziej niż inne.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Wyłącz odroczone monitorowanie katalogów. Odroczone monitorowanie jest przydatne, gdy wiele zmian plików może wystąpić jednocześnie (np. zmiana w node_modules z uruchamiania instalacji menedżera npm), ale można je wyłączyć przy użyciu tej flagi dla niektórych mniej popularnych konfiguracji.",
			"configuration.tsserver.watchOptions.watchDirectory": "Strategia określająca sposób monitorowania całych drzew katalogów w systemach, które nie mają funkcji cyklicznego monitorowania plików.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Użyj kolejki dynamicznej, w której rzadziej modyfikowane katalogi będą rzadziej sprawdzane.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Sonduje katalogi we fragmentach w regularnych odstępach czasu. Wymaga użycia języka TypeScript 4.3 lub nowszego w obszarze roboczym.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Sprawdzaj każdy katalog pod kątem zmian kilka razy na sekundę w ustalonych odstępach czasu.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Próba użycia natywnych zdarzeń systemu operacyjnego/systemu plików na potrzeby zmian w katalogu.",
			"configuration.tsserver.watchOptions.watchFile": "Strategia określająca sposób monitorowania poszczególnych plików.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Korzystaj z kolejek dynamicznych, aby rzadziej modyfikowane pliki nie były tak często sprawdzane.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Sonduje pliki we fragmentach w regularnych odstępach czasu. Wymaga użycia języka TypeScript 4.3 lub nowszego w obszarze roboczym.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Sprawdzaj każdy plik pod kątem zmian kilka razy na sekundę w ustalonych odstępach czasu.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Sprawdzaj każdy plik pod kątem zmian kilka razy na sekundę, ale użyj heurystyki, aby sprawdzać niektóre typy plików rzadziej niż inne.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Próba użycia natywnych zdarzeń systemu operacyjnego/systemu plików na potrzeby zmian plików.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Próba użycia natywnych zdarzeń systemu operacyjnego/systemu plików, aby nasłuchiwać zmian w katalogach zawierających plik. Może to prowadzić do korzystania z mniejszej liczby obserwatorów plików, ale też do obniżenia dokładności.",
			"configuration.typescript": "TypeScript",
			"description": "Zapewnia bogatą obsługę języków JavaScript i TypeScript.",
			"displayName": "Funkcje języków TypeScript i JavaScript",
			"format.insertSpaceAfterCommaDelimiter": "Definiuje obsługę spacji po przecinku w funkcji ogranicznika.",
			"format.insertSpaceAfterConstructor": "Definiuje obsługę spacji po słowie kluczowym constructor.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Definiuje obsługę spacji po słowie kluczowym funkcji dla funkcji anonimowych.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Definiuje obsługę spacji po słowach kluczowych w instrukcji przepływu sterowania.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Definiuje obsługę spacji po otwarciu i przed zamknięciem pustych nawiasów klamrowych.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Definiuje obsługę spacji po otwarciu i przed zamknięciem nawiasów klamrowych wyrażenia JSX.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Definiuje obsługę spacji po otwarciu i przed zamknięciem niepustych nawiasów klamrowych.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Definiuje obsługę spacji po otwarciu i przed zamknięciem niepustych nawiasów.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Definiuje obsługę spacji po otwarciu i przed zamknięciem niepustego nawiasu.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Definiuje obsługę spacji po otwarciu i przed zamknięciem nawiasów klamrowych ciągu szablonu.",
			"format.insertSpaceAfterSemicolonInForStatements": "Definiuje obsługę spacji po średniku w instrukcji for.",
			"format.insertSpaceAfterTypeAssertion": "Definiuje obsługę spacji po potwierdzeniach typu w języku TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Definiuje obsługę spacji po operatorze binarnym.",
			"format.insertSpaceBeforeFunctionParenthesis": "Definiuje obsługę spacji przed nawiasami argumentu funkcji.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Określa, czy otwierający nawias klamrowy jest umieszczany w nowym wierszu dla bloków kontrolnych, czy też nie.",
			"format.placeOpenBraceOnNewLineForFunctions": "Określa, czy otwierający nawias klamrowy jest umieszczany w nowym wierszu dla funkcji, czy też nie.",
			"format.semicolons": "Definiuje obsługę opcjonalnych średników. Wymaga użycia języka TypeScript 3.7 lub nowszego w obszarze roboczym.",
			"format.semicolons.ignore": "Nie wstawiaj ani nie usuwaj średników.",
			"format.semicolons.insert": "Wstaw średniki na końcach instrukcji.",
			"format.semicolons.remove": "Usuń niepotrzebne średniki.",
			"goToProjectConfig.title": "Przejdź do konfiguracji projektu",
			"inlayHints.parameterNames.all": "Włącz wskazówki dotyczące nazw parametrów dla argumentów literału i niebędących literałami.",
			"inlayHints.parameterNames.literals": "Włącz wskazówki dotyczące nazw parametrów tylko dla argumentów literału.",
			"inlayHints.parameterNames.none": "Wyłącz wskazówki dotyczące nazw parametrów.",
			"javascript.format.enable": "Włącz/wyłącz domyślny program formatujący języka JavaScript.",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Wstaw „={}” lub „=\"\"” po nazwach atrybutów na podstawie typu prop. Zobacz „javascript.preferences.quoteStyle”, aby kontrolować typ cudzysłowów używanych dla atrybutów ciągu.",
			"javascript.referencesCodeLens.enabled": "Włącz/wyłącz funkcję CodeLens dla odwołań w plikach języka JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Włącz/wyłącz funkcję CodeLens dla odwołań wszystkich funkcji w plikach języka JavaScript.",
			"javascript.suggestionActions.enabled": "Włącz/wyłącz diagnostykę sugestii dla plików języka JavaScript w edytorze.",
			"javascript.validate.enable": "Włącz/wyłącz weryfikowanie języka JavaScript.",
			"reloadProjects.title": "Załaduj ponownie projekt",
			"taskDefinition.tsconfig.description": "Plik tsconfig, który definiuje kompilację języka TS.",
			"typescript.autoClosingTags": "Włącz/wyłącz automatyczne zamykanie tagów JSX.",
			"typescript.check.npmIsInstalled": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Wyłącza [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatyczne pozyskanie typów pobiera pakiety \"@types\" z pakietu npm, aby usprawnić funkcję IntelliSense dla bibliotek zewnętrznych.",
			"typescript.enablePromptUseWorkspaceTsdk": "Umożliwia monitowanie użytkowników o użycie wersji języka TypeScript skonfigurowanej w obszarze roboczym dla funkcji IntelliSense.",
			"typescript.findAllFileReferences": "Znajdź odwołania do pliku",
			"typescript.format.enable": "Włącz/wyłącz domyślny program formatujący języka TypeScript.",
			"typescript.goToSourceDefinition": "Przejdź do definicji źródła",
			"typescript.implementationsCodeLens.enabled": "Włącz/wyłącz funkcję CodeLens dla implementacji. Ta funkcja CodeLens pokazuje elementy implementujące interfejs.",
			"typescript.locale": "Ustawia ustawienia regionalne służące do raportowania błędów JavaScript i TypeScript. Domyślnie używane jest ustawienie regionalne VS Code.",
			"typescript.npm": "Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Otwórz dziennik serwera języka TS",
			"typescript.preferences.autoImportFileExcludePatterns": "Określ wzorce globalne plików do wykluczenia z importów automatycznych. Wymaga użycia języka TypeScript 4.8 lub nowszego w obszarze roboczym.",
			"typescript.preferences.importModuleSpecifier": "Preferowany styl ścieżki dla importów automatycznych.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Preferuje import bezwzględny na podstawie wartości „baseUrl” lub „paths” skonfigurowanej w pliku w „jsconfig.json” / „tsconfig.json”.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Preferuje używanie importu bezwzględnego tylko wtedy, gdy ścieżka importu względnego powoduje opuszczenie katalogu projektu lub pakietu. Wymaga języka TypeScript 4.2 lub nowszej wersji w obszarze roboczym.",
			"typescript.preferences.importModuleSpecifier.relative": "Preferuje ścieżkę względną do lokalizacji importowanego pliku.",
			"typescript.preferences.importModuleSpecifier.shortest": "Preferuje import bezwzględny tylko wtedy, gdy jest dostępny import bezwzględny mający mniej segmentów ścieżki niż import względny.",
			"typescript.preferences.importModuleSpecifierEnding": "Preferowane zakończenie ścieżki dla importów automatycznych. Wymaga użycia języka TypeScript 4.5+ w obszarze roboczym.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Użyj ustawień projektu, aby wybrać wartość domyślną.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Skróć „./component/index.js” do „./component/index”.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Nie skracaj końców ścieżek; uwzględnij rozszerzenie „.js”.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Skróć „./component/index.js” do „./component”.",
			"typescript.preferences.includePackageJsonAutoImports": "Włącz/wyłącz wyszukiwanie zależności „package.json” dla dostępnych importów automatycznych.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Wyszukaj zależności na podstawie szacowanego wpływu na wydajność.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Nigdy nie wyszukuj zależności.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Zawsze wyszukuj zależności.",
			"typescript.preferences.jsxAttributeCompletionStyle": "Preferowany styl uzupełniania atrybutów JSX.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Wstaw znak „={}” lub „=\"\"” po nazwach atrybutów na podstawie typu właściwości. Zobacz element „typescript.preferences.quoteStyle”, aby kontrolować typ cudzysłowów używanych dla atrybutów ciągu.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Wstaw element `={}` po nazwach atrybutów.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Wstaw tylko nazwy atrybutów.",
			"typescript.preferences.quoteStyle": "Preferowany styl cudzysłowu do użycia na potrzeby szybkich poprawek.",
			"typescript.preferences.quoteStyle.auto": "Wywnioskuj typ cudzysłowu na podstawie istniejącego kodu",
			"typescript.preferences.quoteStyle.double": "Zawsze używaj podwójnych cudzysłowów: „\"”",
			"typescript.preferences.quoteStyle.single": "Zawsze używaj pojedynczych cudzysłowów: „'”",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Ustawienie „typescript.preferences.renameShorthandProperties” zostało zastąpione elementem „typescript.preferences.useAliasesForRenames”",
			"typescript.preferences.useAliasesForRenames": "Włącz/wyłącz wprowadzanie aliasów dla właściwości skróconych obiektu podczas zmieniania nazw. Wymaga użycia języka TypeScript 3.4 lub nowszego w obszarze roboczym.",
			"typescript.problemMatchers.tsc.label": "Problemy z językiem TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problemy z językiem TypeScript (tryb monitorowania)",
			"typescript.referencesCodeLens.enabled": "Włącz/wyłącz funkcję CodeLens dla odwołań w plikach języka TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Włącz/wyłącz funkcję CodeLens dla odwołań wszystkich funkcji w plikach języka TypeScript.",
			"typescript.removeUnusedImports": "Usuń nieużywane importy",
			"typescript.reportStyleChecksAsWarnings": "Zgłaszaj kontrole stylu jako ostrzeżenia.",
			"typescript.restartTsServer": "Uruchom ponownie serwer języka TS",
			"typescript.selectTypeScriptVersion.title": "Wybierz wersję języka TypeScript...",
			"typescript.sortImports": "Sortuj elementy zaimportowane",
			"typescript.suggest.enabled": "Włącz/wyłącz sugestie autouzupełniania.",
			"typescript.suggestionActions.enabled": "Włącz/wyłącz diagnostykę sugestii dla plików języka TypeScript w edytorze.",
			"typescript.tsc.autoDetect": "Steruje automatycznym wykrywaniem zadań tsc.",
			"typescript.tsc.autoDetect.build": "Twórz tylko zadania kompilacji pojedynczego uruchomienia.",
			"typescript.tsc.autoDetect.off": "Wyłącz tę funkcję.",
			"typescript.tsc.autoDetect.on": "Utwórz zarówno zadania kompilowania i monitorowania.",
			"typescript.tsc.autoDetect.watch": "Twórz tylko zadania kompilacji i monitorowania.",
			"typescript.tsdk.desc": "Określa ścieżkę folderu do plików tsserver i \"lib*.d.ts\" w ramach instalacji języka TypeScript, które mają być używane na potrzeby funkcji IntelliSense, na przykład: \"./node_modules/typescript/lib\".\r\n\r\n- Wersja języka TypeScript z pliku \"typescript.tsdk\", po określeniu jako ustawienie użytkownika, automatycznie zastępuje wbudowaną wersję języka TypeScript.\r\n- Po określeniu pliku \"typescript.tsdk\" jako ustawienia obszaru roboczego umożliwia on przełączenie do używania tej wersji obszaru roboczego języka TypeScript na potrzeby funkcji IntelliSense przy użyciu polecenia \"TypeScript: Select TypeScript version\".\r\n\r\nZobacz [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions), aby uzyskać więcej szczegółów na temat zarządzania wersjami języka TypeScript.",
			"typescript.tsserver.enableTracing": "Umożliwia śledzenie wydajności serwera TS w katalogu. Te pliki dziennika mogą służyć do diagnozowania problemów z wydajnością serwera TS. Dziennik może zawierać ścieżki plików, kod źródłowy i inne potencjalnie poufne informacje z projektu.",
			"typescript.tsserver.log": "Umożliwia rejestrowanie serwera języka TS do pliku. Ten dziennik może służyć do diagnozowania problemów z serwerem języka TS. Dziennik może zawierać ścieżki plików, kod źródłowy i inne potencjalnie poufne informacje z projektu.",
			"typescript.tsserver.pluginPaths": "Dodatkowe ścieżki do odnajdywania wtyczek usługi języka TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Ścieżka bezwzględna albo względna. Ścieżka względna zostanie rozpoznana względem folderów obszaru roboczego.",
			"typescript.tsserver.trace": "Umożliwia śledzenie wiadomości wysyłanych do serwera języka TS. Ten ślad może służyć do diagnozowania problemów z serwerem języka TS. Ślad może zawierać ścieżki plików, kod źródłowy i inne potencjalnie poufne informacje z projektu.",
			"typescript.updateImportsOnFileMove.enabled": "Włącz/wyłącz automatyczne aktualizowanie ścieżek importu podczas zmiany nazwy lub przenoszenia pliku w programie VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Zawsze automatycznie aktualizuj ścieżki.",
			"typescript.updateImportsOnFileMove.enabled.never": "Nigdy nie zmieniaj nazw ścieżek i nie monituj.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Monituj przy każdej zmianie nazwy.",
			"typescript.validate.enable": "Włącz/wyłącz weryfikację języka TypeScript.",
			"typescript.workspaceSymbols.scope": "Steruje tym, które pliki są wyszukiwane przez [funkcję przejścia do symbolu w obszarze roboczym](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Przeszukaj wszystkie otwarte projekty języka JavaScript lub TypeScript w poszukiwaniu symboli. Wymaga używania w obszarze roboczym języka TypeScript 3.9 lub nowszego.",
			"typescript.workspaceSymbols.scope.currentProject": "Wyszukuj tylko symbole w bieżącym projekcie języka JavaScript lub TypeScript.",
			"virtualWorkspaces": "Rozpoznawanie i znajdowanie odwołań między plikami nie jest obsługiwane w wirtualnych obszarach roboczych.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Debuguj i uruchamiaj kod JavaScript w środowisku Node.js za pomocą programu Visual Studio Code.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "Po zainstalowaniu środowiska Node.js możesz uruchamiać programy JavaScript w terminalu, wprowadzając ciąg ``node your-file-name.js``\r\nInnym łatwym sposobem uruchamiania programów Node.js jest wykorzystanie debugera programu VS Code, który umożliwia uruchamianie kodu, wstrzymywanie w różnych punktach i pomaga zrozumieć, co się dzieje krok po kroku.\r\n[Uruchom debugowanie](command: javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "Uruchamianie i debugowanie kodu JavaScript",
			"walkthroughs.nodejsWelcome.description": "Wykorzystaj w pełni możliwości najwyższej klasy środowiska JavaScript w programie Visual Studio Code.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Środowisko Node.js to prosty sposób uruchamiania kodu JavaScript. Za jego pomocą można szybko tworzyć aplikacje i serwery wiersza polecenia. Jest ono również dostarczane z menedżerem pakietów npm, który ułatwia ponowne użycie i udostępnianie kodu JavaScript.\r\n[Zainstaluj Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Zainstaluj platformę Node.js",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Środowisko Node.js to prosty sposób uruchamiania kodu JavaScript. Za jego pomocą można szybko tworzyć aplikacje i serwery wiersza polecenia. Jest ono również dostarczane z menedżerem pakietów npm, który ułatwia ponowne użycie i udostępnianie kodu JavaScript.\r\n[Zainstaluj Node.js](https://nodejs.org/en/download/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Zainstaluj platformę Node.js",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Dowiedz się więcej o językach JavaScript i Node.js w programie Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Chcesz lepiej korzystać z języków JavaScript, Node.js i VS Code? Zapoznaj się z naszą dokumentacją!\r\nMasz wiele zasobów do nauki języka [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) i [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Dowiedz się więcej](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Odkryj więcej",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Napiszmy nasz pierwszy plik JavaScript. Musimy utworzyć nowy plik i zapisać go z rozszerzeniem ``.js`` na końcu nazwy pliku.\r\n[Tworzenie pliku JavaScript](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "Tworzenie pliku JavaScript",
			"walkthroughs.nodejsWelcome.title": "Wprowadzenie do języka JavaScript i platformy Node.js",
			"workspaceTrust": "Rozszerzenie wymaga zaufania obszaru roboczego, gdy używana jest ta wersja obszaru roboczego, ponieważ wykonuje ona kod określony przez obszar roboczy."
		}
	}
}